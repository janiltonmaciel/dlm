// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package core

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("../config", "Dockerfile-Build", "\"e3stIHJhbmdlIC5Gcm9tLkJlZm9yZSAtfX0Ke3sgLiB9fQp7ey0gZW5kIC19fQoKe3sgLkZyb20uRGVzY3JpcHRpb24gfX0Ke3sgLkZyb20uRGF0YSB9fQoKe3stIHJhbmdlIC5Gcm9tLkFmdGVyIC19fQp7eyAuIH19Cnt7IGVuZCAtfX0KCnt7IHJhbmdlIC5CZWZvcmUgfX0Ke3sgLiB9fQp7eyBlbmQgLX19Cgp7eyByYW5nZSAuTGFuZ3VhZ2VzIC19fQp7eyAuRGVzY3JpcHRpb24gfX0KCnt7IHJhbmdlIC5CZWZvcmUgLX19Cnt7IC4gfX0Ke3sgZW5kIC19fQoKe3sgLkRhdGEgfX0KCnt7IHJhbmdlIC5BZnRlciAtfX0Ke3sgLiB9fQp7eyBlbmQgLX19Cnt7IGVuZCAtfX0KCnt7LSByYW5nZSAuQWZ0ZXIgLX19Cnt7IC4gfX0Ke3sgZW5kIC19fQo=\"")
	packr.PackJSONBytes("../config", "distributions.yml", "\"CiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTkuMDQgKGRpc2NvKQogICAgcmVsZWFzZTogMTkuMDQKCiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTguMTAgKGNvc21pYykKICAgIHJlbGVhc2U6IDE4LjEKCiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTguMDQgKGJpb25pYykKICAgIHJlbGVhc2U6IDE4LjA0CgogIC0gbmFtZTogVWJ1bnR1CiAgICByZWxlYXNlX25hbWU6IDE2LjA0ICh4ZW5pYWwpCiAgICByZWxlYXNlOiAxNi4wNAoKICAtIG5hbWU6IFVidW50dQogICAgcmVsZWFzZV9uYW1lOiAxNC4wNCAodHJ1c3R5KQogICAgcmVsZWFzZTogMTQuMDQKCiAgLSBuYW1lOiBEZWJpYW4KICAgIHJlbGVhc2VfbmFtZTogMTAgKGJ1c3RlcikKICAgIHJlbGVhc2U6IDEwCgogIC0gbmFtZTogRGViaWFuCiAgICByZWxlYXNlX25hbWU6IDkgKHN0cmV0Y2gpCiAgICByZWxlYXNlOiA5CgogIC0gbmFtZTogRGViaWFuCiAgICByZWxlYXNlX25hbWU6IDggKGplc3NpZSkKICAgIHJlbGVhc2U6IDgKCiAgLSBuYW1lOiBEZWJpYW4KICAgIHJlbGVhc2VfbmFtZTogNyAod2hlZXp5KQogICAgcmVsZWFzZTogNwoKICAtIG5hbWU6IERlYmlhbgogICAgcmVsZWFzZV9uYW1lOiA2IChzcXVlZXplKQogICAgcmVsZWFzZTogNgoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnNC4wJwogICAgcmVsZWFzZTogNC4wCgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjknCiAgICByZWxlYXNlOiAzLjkKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuOCcKICAgIHJlbGVhc2U6IDMuOAoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnMy43JwogICAgcmVsZWFzZTogMy43CgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjYnCiAgICByZWxlYXNlOiAzLjYKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuNScKICAgIHJlbGVhc2U6IDMuNQoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnMy40JwogICAgcmVsZWFzZTogMy40CgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjMnCiAgICByZWxlYXNlOiAzLjMKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuMicKICAgIHJlbGVhc2U6IDMuMgo=\"")
	packr.PackJSONBytes("../config", "erlang-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "golang-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "haskell-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "jruby-versions.yml", "\"W10K\"")
	packr.PackJSONBytes("../config", "julia-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "languages.yml", "\"LSBsYW5ndWFnZTogZXJsYW5nCiAgYWxpYXM6IEVybGFuZwogIHVybDogaHR0cHM6Ly9naXRodWIuY29tL2VybGFuZy9vdHAvcmVsZWFzZXMKICBzb3J0OgogICAgLSBkZWJpYW46OAogICAgLSBhbHBpbmU6OAoKLSBsYW5ndWFnZTogZ29sYW5nCiAgYWxpYXM6IEdvbGFuZwogIHVybDogaHR0cHM6Ly9nb2xhbmcub3JnL2RvYy9kZXZlbC9yZWxlYXNlLmh0bWwKCi0gbGFuZ3VhZ2U6IGhhc2tlbGwKICBhbGlhczogSGFza2VsbAogIHVybDogaHR0cHM6Ly93d3cuaGFza2VsbC5vcmcvZ2hjLwoKLSBsYW5ndWFnZToganVsaWEKICBhbGlhczogSnVsaWEKICB1cmw6IGh0dHBzOi8vZ2l0aHViLmNvbS9KdWxpYUxhbmcvanVsaWEvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IG5vZGUKICBhbGlhczogTm9kZQogIHVybDogaHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkL3JlbGVhc2VzLwogIHNvcnQ6CiAgICAtIGFscGluZToxMAoKLSBsYW5ndWFnZTogcGhwCiAgYWxpYXM6IFBIUAogIHVybDogaHR0cHM6Ly93d3cucGhwLm5ldC9yZWxlYXNlcy9pbmRleC5waHAKICBzb3J0OgogICAgLSBkZWJpYW46OQogICAgLSBhbHBpbmU6OQoKLSBsYW5ndWFnZTogcGVybAogIGFsaWFzOiBQZXJsCiAgdXJsOiBodHRwOi8vd3d3LmNwYW4ub3JnL3NyYy8KCi0gbGFuZ3VhZ2U6IHB5dGhvbgogIGFsaWFzOiBQeXRob24KICB1cmw6IGh0dHBzOi8vd3d3LnB5dGhvbi5vcmcvZG93bmxvYWRzLwogIHNvcnQ6CiAgICAtIGRlYmlhbjo4CgotIGxhbmd1YWdlOiBydWJ5CiAgYWxpYXM6IFJ1YnkKICB1cmw6IGh0dHBzOi8vd3d3LnJ1YnktbGFuZy5vcmcvZW4vZG93bmxvYWRzL3JlbGVhc2VzLwoKLSBsYW5ndWFnZTogcnVzdAogIGFsaWFzOiBSdXN0CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vcnVzdC1sYW5nL3J1c3QvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IHN3aWZ0CiAgYWxpYXM6IFN3aWZ0CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vYXBwbGUvc3dpZnQvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IGpydWJ5CiAgYWxpYXM6IEpydWJ5CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vanJ1YnkvanJ1YnkvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IHB5cHkKICBhbGlhczogUHlweQogIHVybDogaHR0cDovL2RvYy5weXB5Lm9yZy9lbi9sYXRlc3QvaW5kZXgtb2YtcmVsZWFzZS1ub3Rlcy5odG1sCgotIGxhbmd1YWdlOiByLWJhc2UKICBhbGlhczogUgogIHVybDogaHR0cHM6Ly93d3cuci1wcm9qZWN0Lm9yZy8KCgoKCgo=\"")
	packr.PackJSONBytes("../config", "node-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "perl-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "php-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "pypy-versions.yml", "\"CiAgLSB2ZXJzaW9uOiAnMy42JwogICAgbWFqb3JWZXJzaW9uOiAnMy42JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA1LTA2VDE2OjA3OjMwJwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My42LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2ViOGY1YTEzNzljYjk1NWMzMjY3OGU1YjQ4MjRmMTI2M2FmOGFiMDkvMy42L3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweTozLjYtNy4xCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9lYjhmNWExMzc5Y2I5NTVjMzI2NzhlNWI0ODI0ZjEyNjNhZjhhYjA5LzMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweTozLjYtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvY2E3M2ZjNWIwOGFkNmZmMmQ2ZmI2OWRjZTI5NDJhMGVhNTE3NjZkMy8zLjYvc2xpbS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweTozLjYtNy1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2NhNzNmYzViMDhhZDZmZjJkNmZiNjlkY2UyOTQyYTBlYTUxNzY2ZDMvMy42L0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAnMy41JwogICAgbWFqb3JWZXJzaW9uOiAnMy41JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTAyLTEzVDA4OjM4OjU1JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZS1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNS03LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2NhNzNmYzViMDhhZDZmZjJkNmZiNjlkY2UyOTQyYTBlYTUxNzY2ZDMvMy41L3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LTctamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9jYTczZmM1YjA4YWQ2ZmYyZDZmYjY5ZGNlMjk0MmEwZWE1MTc2NmQzLzMuNS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNS03LjAtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvYjNlZTQ0MGExYTQ1OWU2MzAwMTQ1NGU1YTllMWYyMGRhNDM5ZWRhYi8zLjUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweTozLjUtNy4wLjAtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9hYmI1YjUxNzk2NDUxMWFjNjIyNTcyZjA3ZjU0YzIxZDU4ODQ5ZGZlLzMuNS9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAnMi43JwogICAgbWFqb3JWZXJzaW9uOiAnMi43JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA0LTE2VDIyOjA3OjI0JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZS1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjIuNy03LjEtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvZjFjZjBhMTYxMmMxODIzMTNmOTNhYjU0YmYwYjFkMjg4Yjk1Y2YzZC8yLjcvc2xpbS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweToyLjctNy4xLjEKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2YxY2YwYTE2MTJjMTgyMzEzZjkzYWI1NGJmMGIxZDI4OGI5NWNmM2QvMi43L0RvY2tlcmZpbGUK\"")
	packr.PackJSONBytes("../config", "python-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "r-base-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "ruby-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "rust-versions.yml", "\"\"")
	packr.PackJSONBytes("../config", "swift-versions.yml", "\"CiAgLSB2ZXJzaW9uOiA1LjAuMQogICAgbWFqb3JWZXJzaW9uOiAnNS4wJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA0LTIzVDEzOjQxOjI4JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IFVidW50dQogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogVWJ1bnR1CiAgICAgICAgcmVsZWFzZU5hbWU6IDE4LjA0IChiaW9uaWMpCiAgICAgICAgcmVsZWFzZTogMTguMDQKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogdWJ1bnR1OjE4LjA0CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBzd2lmdDo1LjAuMQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9hcHBsZS9zd2lmdC1kb2NrZXIKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYXBwbGUvc3dpZnQtZG9ja2VyLzBhYWZmZmVmNjE5ZmIzYjE4MjRjOTY4Y2JiZTJmYmE0YmE0MWJkMjYvNS4wL3VidW50dS8xOC4wNC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6NS4wLjEteGVuaWFsCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2FwcGxlL3N3aWZ0LWRvY2tlcgogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hcHBsZS9zd2lmdC1kb2NrZXIvMGFhZmZmZWY2MTlmYjNiMTgyNGM5NjhjYmJlMmZiYTRiYTQxYmQyNi81LjAvdWJ1bnR1LzE2LjA0L0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAnNS4wJwogICAgbWFqb3JWZXJzaW9uOiAnNS4wJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTAzLTI3VDEwOjI2OjM3JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IFVidW50dQogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogVWJ1bnR1CiAgICAgICAgcmVsZWFzZU5hbWU6IDE4LjA0IChiaW9uaWMpCiAgICAgICAgcmVsZWFzZTogMTguMDQKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogdWJ1bnR1OjE4LjA0CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBzd2lmdDo1LjAKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vYXBwbGUvc3dpZnQtZG9ja2VyCiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FwcGxlL3N3aWZ0LWRvY2tlci8wZDNmZmJiNzg4NWM4NzMxOTcwZmMyOTRiZTk2Y2U5MTE1Mzg0MGQ5LzUuMC91YnVudHUvMTguMDQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBVYnVudHUKICAgICAgICByZWxlYXNlTmFtZTogMTYuMDQgKHhlbmlhbCkKICAgICAgICByZWxlYXNlOiAxNi4wNAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiB1YnVudHU6MTYuMDQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHN3aWZ0OjUuMC14ZW5pYWwKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vYXBwbGUvc3dpZnQtZG9ja2VyCiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FwcGxlL3N3aWZ0LWRvY2tlci8wZDNmZmJiNzg4NWM4NzMxOTcwZmMyOTRiZTk2Y2U5MTE1Mzg0MGQ5LzUuMC91YnVudHUvMTYuMDQvRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDQuMi40CiAgICBtYWpvclZlcnNpb246ICc0LjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTktMDQtMDFUMTA6NDQ6MjQnCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogVWJ1bnR1CiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBVYnVudHUKICAgICAgICByZWxlYXNlTmFtZTogMTYuMDQgKHhlbmlhbCkKICAgICAgICByZWxlYXNlOiAxNi4wNAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiB1YnVudHU6MTYuMDQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHN3aWZ0OjQuMi40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2FwcGxlL3N3aWZ0LWRvY2tlcgogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hcHBsZS9zd2lmdC1kb2NrZXIvZjBhNjFkZjJkZDlhMTRkZDY5ODhlNjAxN2FlNThjYzYzZGYzN2Y0MS80LjIvdWJ1bnR1LzE2LjA0L0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiA0LjIuMwogICAgbWFqb3JWZXJzaW9uOiAnNC4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTAzLTA0VDEwOjE0OjU1JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IFVidW50dQogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogVWJ1bnR1CiAgICAgICAgcmVsZWFzZU5hbWU6IDE2LjA0ICh4ZW5pYWwpCiAgICAgICAgcmVsZWFzZTogMTYuMDQKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogdWJ1bnR1OjE2LjA0CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBzd2lmdDo0LjIuMwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9hcHBsZS9zd2lmdC1kb2NrZXIKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYXBwbGUvc3dpZnQtZG9ja2VyLzc1ZGRlMDFlZjg2ZTk4NDM3YjEyMDZjNmE1OGQwNDI4ZGZiMzQ1YTQvNC4yL3VidW50dS8xNi4wNC9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogNC4yLjIKICAgIG1ham9yVmVyc2lvbjogJzQuMicKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wMy0wNFQxODozMzozOScKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBVYnVudHUKICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6NC4yLjIKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vYXBwbGUvc3dpZnQtZG9ja2VyCiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FwcGxlL3N3aWZ0LWRvY2tlci9jNWRkNWUwMTNkZTY2ZGE5MzBjZjFiOTgwNDc5N2RiYWUxMWU4ZjljLzQuMi91YnVudHUvMTYuMDQvRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDQuMi4xCiAgICBtYWpvclZlcnNpb246ICc0LjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTgtMTEtMDhUMTM6MjI6NTknCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogVWJ1bnR1CiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBVYnVudHUKICAgICAgICByZWxlYXNlTmFtZTogMTYuMDQgKHhlbmlhbCkKICAgICAgICByZWxlYXNlOiAxNi4wNAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiB1YnVudHU6MTYuMDQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHN3aWZ0OjQuMi4xCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdAogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zd2lmdGRvY2tlci9kb2NrZXItc3dpZnQvOTYzZjI4MmM0ZGQyNDJhNWY5MGM5MDk1MzI2OTJkZDEwMjQyMGEwNC80LjIvRG9ja2VyZmlsZQoKICAtIHZlcnNpb246ICc0LjInCiAgICBtYWpvclZlcnNpb246ICc0LjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTgtMDktMThUMTk6MzU6MjknCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogVWJ1bnR1CiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBVYnVudHUKICAgICAgICByZWxlYXNlTmFtZTogMTYuMDQgKHhlbmlhbCkKICAgICAgICByZWxlYXNlOiAxNi4wNAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiB1YnVudHU6MTYuMDQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHN3aWZ0OjQuMgogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9zd2lmdGRvY2tlci9kb2NrZXItc3dpZnQKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0LzdmYmU2YmY0MDE4YzY4NTNlNDk5NmM0ZjI4YThkYTMzMWFlMGRlMmMvNC4yL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiA0LjEuMwogICAgbWFqb3JWZXJzaW9uOiAnNC4xJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTA4LTAzVDExOjE2OjQ1JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IFVidW50dQogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogVWJ1bnR1CiAgICAgICAgcmVsZWFzZU5hbWU6IDE2LjA0ICh4ZW5pYWwpCiAgICAgICAgcmVsZWFzZTogMTYuMDQKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogdWJ1bnR1OjE2LjA0CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBzd2lmdDo0LjEuMwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9zd2lmdGRvY2tlci9kb2NrZXItc3dpZnQKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0LzNmYTQxN2E1MDBiNmRjNDVmMjU4OGEyZTFjZjdkMjRjMTQ3YTQ1ODEvNC4xL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAnNC4xJwogICAgbWFqb3JWZXJzaW9uOiAnNC4xJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTA0LTA2VDE5OjU5OjM3JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IFVidW50dQogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogVWJ1bnR1CiAgICAgICAgcmVsZWFzZU5hbWU6IDE2LjA0ICh4ZW5pYWwpCiAgICAgICAgcmVsZWFzZTogMTYuMDQKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogdWJ1bnR1OjE2LjA0CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBzd2lmdDo0LjEKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdC80OWYxOTJkOTIxOGRiYmM2NDM4MjI0Y2NjNzc2ZTIxYjA4ZTVkYWJlLzQuMS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogNC4wLjMKICAgIG1ham9yVmVyc2lvbjogJzQuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0xMi0xMVQxMDowNTo1MycKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBVYnVudHUKICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6NC4wLjMKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdC9iYzhjYjMwMzJmZmQ2YTA1ZDNlZGRmOWNmODg1MTM5Mjc3YzExNjQyLzQuMC9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogNC4wLjIKICAgIG1ham9yVmVyc2lvbjogJzQuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0xMS0xMFQxNzozMDozMCcKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBVYnVudHUKICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6NC4wLjIKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdC81YzgzNjI4ZDQ2OTZiY2E2MmFlYzMxMzZhNGVlOWI4NTRlOGQ1NDhlLzQuMC9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogJzQuMCcKICAgIG1ham9yVmVyc2lvbjogJzQuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0wOS0yMlQxMDo0Nzo1MCcKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBVYnVudHUKICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6NC4wCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdAogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zd2lmdGRvY2tlci9kb2NrZXItc3dpZnQvNTQ1Yjg2MjlmZmUxZjk3ODUyOTgyMDNjZjEzODI3MTFjYzJhYzMwMi9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMy4xLjEKICAgIG1ham9yVmVyc2lvbjogJzMuMScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0xMi0xMVQxMDowNTo1MycKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBVYnVudHUKICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6My4xLjEKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdC9iYzhjYjMwMzJmZmQ2YTA1ZDNlZGRmOWNmODg1MTM5Mjc3YzExNjQyLzMuMS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMy4xLjAKICAgIG1ham9yVmVyc2lvbjogJzMuMScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0wMy0yOFQxNjo1MTozMScKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBVYnVudHUKICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IFVidW50dQogICAgICAgIHJlbGVhc2VOYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgICAgIHJlbGVhc2U6IDE2LjA0CiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IHVidW50dToxNi4wNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogc3dpZnQ6My4xLjAKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3N3aWZ0ZG9ja2VyL2RvY2tlci1zd2lmdC9lZjlhYTUzNDcwNWZjOGFiNDI1OGM1MzlmNjMwNDA3MmViYWU5NjEzL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAzLjAuMgogICAgbWFqb3JWZXJzaW9uOiAnMy4wJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE2LTEyLTMxVDE1OjI0OjI3JwogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IFVidW50dQogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogVWJ1bnR1CiAgICAgICAgcmVsZWFzZU5hbWU6IDE2LjA0ICh4ZW5pYWwpCiAgICAgICAgcmVsZWFzZTogMTYuMDQKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogdWJ1bnR1OjE2LjA0CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBzd2lmdDozLjAuMgogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9zd2lmdGRvY2tlci9kb2NrZXItc3dpZnQKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc3dpZnRkb2NrZXIvZG9ja2VyLXN3aWZ0L2NjMzY1NGU5OWFiODJmMjFmZDdhYjhhNDI3OTMyZTE5ZjQzM2Q4ZWUvRG9ja2VyZmlsZQo=\"")
}
