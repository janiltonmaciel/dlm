// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package manager

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("../config", "Dockerfile-Build", "\"e3stIHJhbmdlIC5Gcm9tLkJlZm9yZSAtfX0Ke3sgLiB9fQp7ey0gZW5kIC19fQoKe3sgLkZyb20uRGVzY3JpcHRpb24gfX0Ke3sgLkZyb20uRGF0YSB9fQoKe3stIHJhbmdlIC5Gcm9tLkFmdGVyIC19fQp7eyAuIH19Cnt7IGVuZCAtfX0KCnt7IHJhbmdlIC5CZWZvcmUgfX0Ke3sgLiB9fQp7eyBlbmQgLX19Cgp7eyByYW5nZSAuTGFuZ3VhZ2VzIC19fQp7eyAuRGVzY3JpcHRpb24gfX0KCnt7IHJhbmdlIC5CZWZvcmUgLX19Cnt7IC4gfX0Ke3sgZW5kIC19fQoKe3sgLkRhdGEgfX0KCnt7IHJhbmdlIC5BZnRlciAtfX0Ke3sgLiB9fQp7eyBlbmQgLX19Cnt7IGVuZCAtfX0KCnt7LSByYW5nZSAuQWZ0ZXIgLX19Cnt7IC4gfX0Ke3sgZW5kIC19fQo=\"")
	packr.PackJSONBytes("../config", "distributions-context.yml", "\"LSBuYW1lOiBERUJJQU4KICBiZWZvcmU6CiAgYWZ0ZXI6CiAgICAtIFJVTiBhcHQtZ2V0IHVwZGF0ZSAmJiBhcHQtZ2V0IGluc3RhbGwgLXkgLS1uby1pbnN0YWxsLXJlY29tbWVuZHMgYmFzaCBcCiAgICAgICAmJiBybSAtcmYgL3Zhci9saWIvYXB0L2xpc3RzLyoKCi0gbmFtZTogQUxQSU5FCiAgYmVmb3JlOgogIGFmdGVyOgogICAgLSBSVU4gYXBrIHVwZGF0ZSAmJiBhcGsgYWRkIC15IGJhc2gK\"")
	packr.PackJSONBytes("../config", "distributions.yml", "\"CiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTkuMDQgKGRpc2NvKQogICAgcmVsZWFzZTogMTkuMDQKCiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTguMTAgKGNvc21pYykKICAgIHJlbGVhc2U6IDE4LjEKCiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTguMDQgKGJpb25pYykKICAgIHJlbGVhc2U6IDE4LjA0CgogIC0gbmFtZTogVWJ1bnR1CiAgICByZWxlYXNlX25hbWU6IDE2LjA0ICh4ZW5pYWwpCiAgICByZWxlYXNlOiAxNi4wNAoKICAtIG5hbWU6IFVidW50dQogICAgcmVsZWFzZV9uYW1lOiAxNC4wNCAodHJ1c3R5KQogICAgcmVsZWFzZTogMTQuMDQKCiAgLSBuYW1lOiBEZWJpYW4KICAgIHJlbGVhc2VfbmFtZTogMTAgKGJ1c3RlcikKICAgIHJlbGVhc2U6IDEwCgogIC0gbmFtZTogRGViaWFuCiAgICByZWxlYXNlX25hbWU6IDkgKHN0cmV0Y2gpCiAgICByZWxlYXNlOiA5CgogIC0gbmFtZTogRGViaWFuCiAgICByZWxlYXNlX25hbWU6IDggKGplc3NpZSkKICAgIHJlbGVhc2U6IDgKCiAgLSBuYW1lOiBEZWJpYW4KICAgIHJlbGVhc2VfbmFtZTogNyAod2hlZXp5KQogICAgcmVsZWFzZTogNwoKICAtIG5hbWU6IERlYmlhbgogICAgcmVsZWFzZV9uYW1lOiA2IChzcXVlZXplKQogICAgcmVsZWFzZTogNgoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnNC4wJwogICAgcmVsZWFzZTogNC4wCgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjknCiAgICByZWxlYXNlOiAzLjkKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuOCcKICAgIHJlbGVhc2U6IDMuOAoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnMy43JwogICAgcmVsZWFzZTogMy43CgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjYnCiAgICByZWxlYXNlOiAzLjYKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuNScKICAgIHJlbGVhc2U6IDMuNQoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnMy40JwogICAgcmVsZWFzZTogMy40CgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjMnCiAgICByZWxlYXNlOiAzLjMKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuMicKICAgIHJlbGVhc2U6IDMuMgo=\"")
	packr.PackJSONBytes("../config", "languages-context.yml", "\"LSBuYW1lOiBOT0RFCiAgYmVmb3JlOgogICAgLSBFTlYgUEFUSCBub2RlX21vZHVsZXMvLmJpbjokUEFUSAogIGFmdGVyOgo=\"")
	packr.PackJSONBytes("../config", "languages.yml", "\"LSBsYW5ndWFnZTogZXJsYW5nCiAgYWxpYXM6IGVybGFuZwogIHVybDogaHR0cHM6Ly9naXRodWIuY29tL2VybGFuZy9vdHAvcmVsZWFzZXMKICBzb3J0OgogICAgLSBkZWJpYW46OAogICAgLSBhbHBpbmU6OAoKLSBsYW5ndWFnZTogZ29sYW5nCiAgYWxpYXM6IGdvbGFuZwogIHVybDogaHR0cHM6Ly9nb2xhbmcub3JnL2RvYy9kZXZlbC9yZWxlYXNlLmh0bWwKCi0gbGFuZ3VhZ2U6IGhhc2tlbGwKICBhbGlhczogaGFza2VsbAogIHVybDogaHR0cHM6Ly93d3cuaGFza2VsbC5vcmcvZ2hjLwoKLSBsYW5ndWFnZToganVsaWEKICBhbGlhczoganVsaWEKICB1cmw6IGh0dHBzOi8vZ2l0aHViLmNvbS9KdWxpYUxhbmcvanVsaWEvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IG5vZGUKICBhbGlhczogbm9kZQogIHVybDogaHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkL3JlbGVhc2VzLwogIHNvcnQ6CiAgICAtIGFscGluZToxMAoKLSBsYW5ndWFnZTogcGhwCiAgYWxpYXM6IHBocAogIHVybDogaHR0cHM6Ly93d3cucGhwLm5ldC9yZWxlYXNlcy9pbmRleC5waHAKICBzb3J0OgogICAgLSBkZWJpYW46OQogICAgLSBhbHBpbmU6OQoKLSBsYW5ndWFnZTogcGVybAogIGFsaWFzOiBwZXJsCiAgdXJsOiBodHRwOi8vd3d3LmNwYW4ub3JnL3NyYy8KCi0gbGFuZ3VhZ2U6IHB5dGhvbgogIGFsaWFzOiBweXRob24KICB1cmw6IGh0dHBzOi8vd3d3LnB5dGhvbi5vcmcvZG93bmxvYWRzLwogIHNvcnQ6CiAgICAtIGRlYmlhbjo4CgotIGxhbmd1YWdlOiBydWJ5CiAgYWxpYXM6IHJ1YnkKICB1cmw6IGh0dHBzOi8vd3d3LnJ1YnktbGFuZy5vcmcvZW4vZG93bmxvYWRzL3JlbGVhc2VzLwoKLSBsYW5ndWFnZTogcnVzdAogIGFsaWFzOiBydXN0CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vcnVzdC1sYW5nL3J1c3QvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IHN3aWZ0CiAgYWxpYXM6IHN3aWZ0CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vYXBwbGUvc3dpZnQvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IHB5cHkKICBhbGlhczogcHlweQogIHVybDogaHR0cDovL2RvYy5weXB5Lm9yZy9lbi9sYXRlc3QvaW5kZXgtb2YtcmVsZWFzZS1ub3Rlcy5odG1sCgojIGxhbmd1YWdlOiBqcnVieQojIGFsaWFzOiBKanVieQojIHVybDogaHR0cHM6Ly9naXRodWIuY29tL2pydWJ5L2pydWJ5L3JlbGVhc2VzCgojIGxhbmd1YWdlOiByLWJhc2UKIyBhbGlhczogUgojIHVybDogaHR0cHM6Ly93d3cuci1wcm9qZWN0Lm9yZy8KCgoKCgo=\"")
	packr.PackJSONBytes("../config", "versions/erlang.yml", "\"
  - version: '22.0'
    majorVersion: '22.0'
    prerelease: false
    date: '2019-05-15T23:06:18'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:22.0-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/97a95ad0b19a8f14ad9a30524d1f7061f6c0bccd/22/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:22.0
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/97a95ad0b19a8f14ad9a30524d1f7061f6c0bccd/22/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:22.0-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/97a95ad0b19a8f14ad9a30524d1f7061f6c0bccd/22/slim/Dockerfile

  - version: 21.3.8.1
    majorVersion: '21.3'
    prerelease: false
    date: '2019-05-15T23:06:18'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.8.1-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/82a6a9dced87b9f70e7244193fa28892f5aae7d0/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.8.1
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/82a6a9dced87b9f70e7244193fa28892f5aae7d0/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.8.1-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/82a6a9dced87b9f70e7244193fa28892f5aae7d0/21/slim/Dockerfile

  - version: 21.3.7
    majorVersion: '21.3'
    prerelease: false
    date: '2019-04-26T19:16:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.7-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/491aa36fdf85fd04a6c7e47201126fcb956c6d63/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.7
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/491aa36fdf85fd04a6c7e47201126fcb956c6d63/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.7-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/491aa36fdf85fd04a6c7e47201126fcb956c6d63/21/slim/Dockerfile

  - version: 21.3.6
    majorVersion: '21.3'
    prerelease: false
    date: '2019-04-18T14:57:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.6-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ff0d247f5bbe74e8d9089ea35ce6cd11aac3cb65/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.6
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ff0d247f5bbe74e8d9089ea35ce6cd11aac3cb65/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.6-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ff0d247f5bbe74e8d9089ea35ce6cd11aac3cb65/21/slim/Dockerfile

  - version: 21.3.5
    majorVersion: '21.3'
    prerelease: false
    date: '2019-04-17T15:35:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.5-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/b736b38a32aecb56568d0b751347dbd0568583e9/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.5
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/b736b38a32aecb56568d0b751347dbd0568583e9/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.5-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/b736b38a32aecb56568d0b751347dbd0568583e9/21/slim/Dockerfile

  - version: 21.3.4
    majorVersion: '21.3'
    prerelease: false
    date: '2019-04-12T15:45:16'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.4-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4e010f565fd72dd4d81c7f8e334a6643f2e6327d/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.4
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4e010f565fd72dd4d81c7f8e334a6643f2e6327d/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.4-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4e010f565fd72dd4d81c7f8e334a6643f2e6327d/21/slim/Dockerfile

  - version: 21.3.3
    majorVersion: '21.3'
    prerelease: false
    date: '2019-04-02T09:35:18'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.3-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/bc308f69e17349d3088b593d3348e0de61d6d995/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.3
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/bc308f69e17349d3088b593d3348e0de61d6d995/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.3-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/bc308f69e17349d3088b593d3348e0de61d6d995/21/slim/Dockerfile

  - version: 21.3.2
    majorVersion: '21.3'
    prerelease: false
    date: '2019-03-22T11:43:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.2-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/81dc84940c670b01c8b5c5622b02500f4f77a4b9/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.2
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/81dc84940c670b01c8b5c5622b02500f4f77a4b9/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.2-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/81dc84940c670b01c8b5c5622b02500f4f77a4b9/21/slim/Dockerfile

  - version: 21.3.1
    majorVersion: '21.3'
    prerelease: false
    date: '2019-03-21T09:49:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.3.1-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/69ebec118339f3959f829dfc11fde0b2ce50670e/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.3.1
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/69ebec118339f3959f829dfc11fde0b2ce50670e/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.3.1-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/69ebec118339f3959f829dfc11fde0b2ce50670e/21/slim/Dockerfile

  - version: 21.2.7
    majorVersion: '21.2'
    prerelease: false
    date: '2019-03-07T10:35:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.2.7-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/030a8c915caf1010572424cf1485de4330dbf0dc/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.7
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/030a8c915caf1010572424cf1485de4330dbf0dc/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.7-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/030a8c915caf1010572424cf1485de4330dbf0dc/21/slim/Dockerfile

  - version: 21.2.6
    majorVersion: '21.2'
    prerelease: false
    date: '2019-02-19T09:39:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.2.6-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/2fa8d1d5e7357f086068e2a52159a4568cd472eb/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.6
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/2fa8d1d5e7357f086068e2a52159a4568cd472eb/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.6-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/2fa8d1d5e7357f086068e2a52159a4568cd472eb/21/slim/Dockerfile

  - version: 21.2.5
    majorVersion: '21.2'
    prerelease: false
    date: '2019-02-05T00:45:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:21.2.5-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/04c7173c0762eb6432cedc65ecfd35fbb9a44341/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.5
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/04c7173c0762eb6432cedc65ecfd35fbb9a44341/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.5-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/04c7173c0762eb6432cedc65ecfd35fbb9a44341/21/slim/Dockerfile

  - version: 21.2.4
    majorVersion: '21.2'
    prerelease: false
    date: '2019-01-25T22:54:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.2.4-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a35e84764af1391f174905c7d18db3c1b7c629e6/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.4
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a35e84764af1391f174905c7d18db3c1b7c629e6/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.4-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a35e84764af1391f174905c7d18db3c1b7c629e6/21/slim/Dockerfile

  - version: 21.2.3
    majorVersion: '21.2'
    prerelease: false
    date: '2019-01-18T02:22:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.2.3-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a7d59f48dddfb74f83e8eaa0d7c5477c7608112c/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.3
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a7d59f48dddfb74f83e8eaa0d7c5477c7608112c/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.3-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a7d59f48dddfb74f83e8eaa0d7c5477c7608112c/21/slim/Dockerfile

  - version: 21.2.2
    majorVersion: '21.2'
    prerelease: false
    date: '2019-01-11T11:28:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.2.2-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e2e804aeeb6e6bc5fd49f66481be1dff829428f5/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.2
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e2e804aeeb6e6bc5fd49f66481be1dff829428f5/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.2-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e2e804aeeb6e6bc5fd49f66481be1dff829428f5/21/slim/Dockerfile

  - version: 21.2.1
    majorVersion: '21.2'
    prerelease: false
    date: '2018-12-21T13:29:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.2.1-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/46090afa930be7df637db62f58dffb75b1644faa/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.2.1
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/46090afa930be7df637db62f58dffb75b1644faa/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.2.1-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/46090afa930be7df637db62f58dffb75b1644faa/21/slim/Dockerfile

  - version: 21.1.4
    majorVersion: '21.1'
    prerelease: false
    date: '2018-12-08T00:10:06'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.1.4-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/124b10b36a4e85730df44ea1f49e41ac8ab660fa/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.1.4
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/124b10b36a4e85730df44ea1f49e41ac8ab660fa/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.1.4-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/124b10b36a4e85730df44ea1f49e41ac8ab660fa/21/slim/Dockerfile

  - version: 21.1.3
    majorVersion: '21.1'
    prerelease: false
    date: '2018-11-26T15:48:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.1.3-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/8815a0c2ce5282dbf08553f602e5214e4e9631ce/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.1.3
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/8815a0c2ce5282dbf08553f602e5214e4e9631ce/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.1.3-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/0dad6610e480ceca4acd13c4f4ae061b26757465/21/slim/Dockerfile

  - version: 21.1.2
    majorVersion: '21.1'
    prerelease: false
    date: '2018-11-22T16:02:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.1.2-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/7e059488ae8eaaffd3a98ee1816796f445a19721/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.1.2
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/7e059488ae8eaaffd3a98ee1816796f445a19721/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.1.2-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/7e059488ae8eaaffd3a98ee1816796f445a19721/21/slim/Dockerfile

  - version: 21.1.1
    majorVersion: '21.1'
    prerelease: false
    date: '2018-11-15T10:31:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.1.1-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/de48e7c91b8a293770c6fcccdd30d2329fcc0414/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.1.1
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/de48e7c91b8a293770c6fcccdd30d2329fcc0414/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.1.1-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/de48e7c91b8a293770c6fcccdd30d2329fcc0414/21/slim/Dockerfile

  - version: 21.0.9
    majorVersion: '21.0'
    prerelease: false
    date: '2018-09-21T00:19:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.9-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/c88d9cb6f39c253421e5c145fb6da4547101c6c8/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.9
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/c88d9cb6f39c253421e5c145fb6da4547101c6c8/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.9-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/c88d9cb6f39c253421e5c145fb6da4547101c6c8/21/slim/Dockerfile

  - version: 21.0.8
    majorVersion: '21.0'
    prerelease: false
    date: '2018-09-07T11:59:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.8-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f9f3ff46a412ce34e62b07bef9b5f7602bf45733/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.8
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f9f3ff46a412ce34e62b07bef9b5f7602bf45733/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.8-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f9f3ff46a412ce34e62b07bef9b5f7602bf45733/21/slim/Dockerfile

  - version: 21.0.7
    majorVersion: '21.0'
    prerelease: false
    date: '2018-08-31T07:22:06'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.7-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ccaabbdde9c8aa226ddcca4b0473fc8489539bd6/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.7
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ccaabbdde9c8aa226ddcca4b0473fc8489539bd6/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.7-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ccaabbdde9c8aa226ddcca4b0473fc8489539bd6/21/slim/Dockerfile

  - version: 21.0.6
    majorVersion: '21.0'
    prerelease: false
    date: '2018-08-29T00:01:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.6-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/cd7ed64405ffbcfa7b9ac32758b219845f87cfe3/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.6
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/cd7ed64405ffbcfa7b9ac32758b219845f87cfe3/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.6-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/cd7ed64405ffbcfa7b9ac32758b219845f87cfe3/21/slim/Dockerfile

  - version: 21.0.5
    majorVersion: '21.0'
    prerelease: false
    date: '2018-08-23T20:07:13'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.5-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/fe505cb6aa9afc509add31825b7f1734a0163c04/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.5
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/fe505cb6aa9afc509add31825b7f1734a0163c04/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.5-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/fe505cb6aa9afc509add31825b7f1734a0163c04/21/slim/Dockerfile

  - version: 21.0.4
    majorVersion: '21.0'
    prerelease: false
    date: '2018-08-10T21:56:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.4-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1e1956df112a98d3dc5401abc7d49feb6201b99b/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.4
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1e1956df112a98d3dc5401abc7d49feb6201b99b/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.4-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1e1956df112a98d3dc5401abc7d49feb6201b99b/21/slim/Dockerfile

  - version: 21.0.3
    majorVersion: '21.0'
    prerelease: false
    date: '2018-07-24T17:07:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:21.0.3-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/70745eada41c444f663484114ab942192b47337b/21/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:21.0.3-jessie
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/cdee680cda6403ecb39d5d6858f18f338f67c7d1/21/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.3
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f0fffe2ba666a5f31e1de81d80dacdbf405c8e32/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.3-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f0fffe2ba666a5f31e1de81d80dacdbf405c8e32/21/slim/Dockerfile

  - version: 21.0.2
    majorVersion: '21.0'
    prerelease: false
    date: '2018-07-06T21:03:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:21.0.2-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/060ff7a48c25b7353bfd223ff0d4e6af1c667084/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.2
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/060ff7a48c25b7353bfd223ff0d4e6af1c667084/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.2-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/060ff7a48c25b7353bfd223ff0d4e6af1c667084/21/slim/Dockerfile

  - version: 21.0.1
    majorVersion: '21.0'
    prerelease: false
    date: '2018-06-30T02:19:40'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:21.0.1-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/21/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:21.0.1
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/21/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:21.0.1-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/21/slim/Dockerfile

  - version: 20.3.8.21
    majorVersion: '20.3'
    prerelease: false
    date: '2019-05-15T23:06:18'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:20.3.8.21-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4c80d1efa8cb9499e9c8f15ecfc2a944dfde8b1f/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.21
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4c80d1efa8cb9499e9c8f15ecfc2a944dfde8b1f/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.21-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4c80d1efa8cb9499e9c8f15ecfc2a944dfde8b1f/20/slim/Dockerfile

  - version: 20.3.8.20
    majorVersion: '20.3'
    prerelease: false
    date: '2019-04-15T20:59:30'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: erlang:20.3.8.20-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/46742a8f2df1db797c56bcf9846af35122552bc7/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.20
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f581f39cd15aeed548360c8f01b4bfe327236da5/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.20-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/75fd24d73a4defe2a48a83b8dabf379a95c51a0c/20/slim/Dockerfile

  - version: 20.3.8.18
    majorVersion: '20.3'
    prerelease: false
    date: '2019-02-05T00:45:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.18-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ff81dd677b3bdc3a0e2bbdb1d7efbca524e954ce/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.18
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ff81dd677b3bdc3a0e2bbdb1d7efbca524e954ce/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.18-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/ff81dd677b3bdc3a0e2bbdb1d7efbca524e954ce/20/slim/Dockerfile

  - version: 20.3.8.17
    majorVersion: '20.3'
    prerelease: false
    date: '2019-01-17T01:34:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.17-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d1d59c1af4e4975e4df6eb31cc50c65b9f9ba83c/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.17
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d1d59c1af4e4975e4df6eb31cc50c65b9f9ba83c/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.17-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d1d59c1af4e4975e4df6eb31cc50c65b9f9ba83c/20/slim/Dockerfile

  - version: 20.3.8.16
    majorVersion: '20.3'
    prerelease: false
    date: '2019-01-04T10:54:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.16-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d2c5221ccdedcf9a72d30da1172ef8f9d70a58fb/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.16
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d2c5221ccdedcf9a72d30da1172ef8f9d70a58fb/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.16-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d2c5221ccdedcf9a72d30da1172ef8f9d70a58fb/20/slim/Dockerfile

  - version: 20.3.8.15
    majorVersion: '20.3'
    prerelease: false
    date: '2018-12-29T23:41:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.15-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a89b076b8e2c9ad787d5af4373b629ef59bd75a6/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.15
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e72b8a9747906a8cae874f995d2d889f4141fcac/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.15-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e72b8a9747906a8cae874f995d2d889f4141fcac/20/slim/Dockerfile

  - version: 20.3.8.14
    majorVersion: '20.3'
    prerelease: false
    date: '2018-11-30T22:24:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.14-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/8815a0c2ce5282dbf08553f602e5214e4e9631ce/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.14
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/8815a0c2ce5282dbf08553f602e5214e4e9631ce/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.14-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1ab28c7de349f59cdf03ad3303d50eee0a039c1f/20/slim/Dockerfile

  - version: 20.3.8.13
    majorVersion: '20.3'
    prerelease: false
    date: '2018-11-15T10:31:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.13-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d299e24c934b01a46af119ca2b139eb4dc648237/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.13
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d299e24c934b01a46af119ca2b139eb4dc648237/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.13-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/d299e24c934b01a46af119ca2b139eb4dc648237/20/slim/Dockerfile

  - version: 20.3.8.11
    majorVersion: '20.3'
    prerelease: false
    date: '2018-11-05T19:50:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.11-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/01bc5270a30887e3b57c5c50bcdefe375b2e5123/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.11
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/01bc5270a30887e3b57c5c50bcdefe375b2e5123/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.11-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/01bc5270a30887e3b57c5c50bcdefe375b2e5123/20/slim/Dockerfile

  - version: 20.3.8.10
    majorVersion: '20.3'
    prerelease: false
    date: '2018-10-30T00:55:30'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.10-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/de63187115802de9bbc10c430c381ac598167af1/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.10
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/de63187115802de9bbc10c430c381ac598167af1/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.10-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/de63187115802de9bbc10c430c381ac598167af1/20/slim/Dockerfile

  - version: 20.3.8.9
    majorVersion: '20.3'
    prerelease: false
    date: '2018-09-25T18:49:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.9-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f68855e3c6dc872dbb9703bf4b4f0909fd5a4ef8/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.9
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f68855e3c6dc872dbb9703bf4b4f0909fd5a4ef8/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.9-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f68855e3c6dc872dbb9703bf4b4f0909fd5a4ef8/20/slim/Dockerfile

  - version: 20.3.8.8
    majorVersion: '20.3'
    prerelease: false
    date: '2018-09-12T22:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.8-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/12907b51e76f9616747c1ab7deba6ce7e3d7856e/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.8
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/12907b51e76f9616747c1ab7deba6ce7e3d7856e/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.8-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/12907b51e76f9616747c1ab7deba6ce7e3d7856e/20/slim/Dockerfile

  - version: 20.3.8.7
    majorVersion: '20.3'
    prerelease: false
    date: '2018-08-25T07:01:33'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.7-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/01f4b0d6e25430d7a0094d382d328dba11fd6243/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.7
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/01f4b0d6e25430d7a0094d382d328dba11fd6243/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.7-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/01f4b0d6e25430d7a0094d382d328dba11fd6243/20/slim/Dockerfile

  - version: 20.3.8.6
    majorVersion: '20.3'
    prerelease: false
    date: '2018-08-16T07:14:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.6-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e1c7426039612eb86d534816baff1ebc1fb8b5b0/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.6
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e1c7426039612eb86d534816baff1ebc1fb8b5b0/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.6-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/e1c7426039612eb86d534816baff1ebc1fb8b5b0/20/slim/Dockerfile

  - version: 20.3.8.5
    majorVersion: '20.3'
    prerelease: false
    date: '2018-08-12T07:55:02'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.5-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/9459993131b23ad2d7292ff864db04aab74c7cfb/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.5
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/9459993131b23ad2d7292ff864db04aab74c7cfb/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.5-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/9459993131b23ad2d7292ff864db04aab74c7cfb/20/slim/Dockerfile

  - version: 20.3.8.4
    majorVersion: '20.3'
    prerelease: false
    date: '2018-08-03T19:17:50'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.4-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1b5bdefb8a6d72fa5301a343d0ac6ea3471916b8/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.4
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1b5bdefb8a6d72fa5301a343d0ac6ea3471916b8/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.4-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/1b5bdefb8a6d72fa5301a343d0ac6ea3471916b8/20/slim/Dockerfile

  - version: 20.3.8.3
    majorVersion: '20.3'
    prerelease: false
    date: '2018-07-28T14:35:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.3-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/6f5ce6e24c954e2528b1c780d6cce9775929a640/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.3
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/6f5ce6e24c954e2528b1c780d6cce9775929a640/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.3-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/6f5ce6e24c954e2528b1c780d6cce9775929a640/20/slim/Dockerfile

  - version: 20.3.8.2
    majorVersion: '20.3'
    prerelease: false
    date: '2018-07-22T12:47:06'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: erlang:20.3.8.2-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/70745eada41c444f663484114ab942192b47337b/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.2
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/2b9b03dc41cbcc8fc94ef8767b89948388143226/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.2-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/2b9b03dc41cbcc8fc94ef8767b89948388143226/20/slim/Dockerfile

  - version: 20.3.8.1
    majorVersion: '20.3'
    prerelease: false
    date: '2018-06-26T18:47:34'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.8.1-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.8.1
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.8.1-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/20/slim/Dockerfile

  - version: 20.3.7
    majorVersion: '20.3'
    prerelease: false
    date: '2018-06-05T22:12:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.7-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/3871189704a3d3c01b964a5594280e0ee12cc450/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.7
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/3871189704a3d3c01b964a5594280e0ee12cc450/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.7-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/3871189704a3d3c01b964a5594280e0ee12cc450/20/slim/Dockerfile

  - version: 20.3.6
    majorVersion: '20.3'
    prerelease: false
    date: '2018-05-10T09:10:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.6-alpine
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/99ab1e150c3708ce81bc08073cf5793ef67c6a1c/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.6
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/99ab1e150c3708ce81bc08073cf5793ef67c6a1c/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.6-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/99ab1e150c3708ce81bc08073cf5793ef67c6a1c/20/slim/Dockerfile

  - version: 20.3.5
    majorVersion: '20.3'
    prerelease: false
    date: '2018-05-04T09:29:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.5-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/16772632915ab5f4a95bde6abdb9d1ad71d53dda/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/16772632915ab5f4a95bde6abdb9d1ad71d53dda/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/16772632915ab5f4a95bde6abdb9d1ad71d53dda/20/slim/Dockerfile

  - version: 20.3.4
    majorVersion: '20.3'
    prerelease: false
    date: '2018-04-25T09:06:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.4-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4445312ead7e1b449edf7a2eda8d058da7b6a2a7/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4445312ead7e1b449edf7a2eda8d058da7b6a2a7/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.4-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/54c69cb6eff65503f09897072c72ff2d138d1e62/20/slim/Dockerfile

  - version: 20.3.3
    majorVersion: '20.3'
    prerelease: false
    date: '2018-04-20T09:04:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.3-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01538b0c835ee527107ed85c6c2f84e7d97b1ec6/20/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01538b0c835ee527107ed85c6c2f84e7d97b1ec6/20/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:20.3.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01538b0c835ee527107ed85c6c2f84e7d97b1ec6/20/slim/Dockerfile

  - version: 20.3.2
    majorVersion: '20.3'
    prerelease: false
    date: '2018-04-06T16:00:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.2-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/81d14489ed7f740386e2f05d762dc53fe34e6f8b/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.3.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/81d14489ed7f740386e2f05d762dc53fe34e6f8b/20/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/81d14489ed7f740386e2f05d762dc53fe34e6f8b/20/Dockerfile

  - version: 20.3.1
    majorVersion: '20.3'
    prerelease: false
    date: '2018-03-16T23:42:20'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.3.1-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a85fe60b7332d669d00e325888cc707566bed46b/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.3.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a85fe60b7332d669d00e325888cc707566bed46b/20/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.3.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a85fe60b7332d669d00e325888cc707566bed46b/20/Dockerfile

  - version: 20.2.4
    majorVersion: '20.2'
    prerelease: false
    date: '2018-03-05T20:06:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.2.4-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/83a747afba739592bb4d3f8a01b5d535c1f2c8dd/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.2.4-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/83a747afba739592bb4d3f8a01b5d535c1f2c8dd/20/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:20.2.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/83a747afba739592bb4d3f8a01b5d535c1f2c8dd/20/Dockerfile

  - version: 20.2.3
    majorVersion: '20.2'
    prerelease: false
    date: '2018-02-14T01:52:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.2.3-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/6739afaa4743595511734bd132aa8abdbf307c8c/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.2.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/3945f4cf68ff4b9124835089c1c8470e8dec3b7d/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.2.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/3945f4cf68ff4b9124835089c1c8470e8dec3b7d/20/slim/Dockerfile

  - version: 20.2.2
    majorVersion: '20.2'
    prerelease: false
    date: '2018-01-28T04:31:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: erlang:20.2.2-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7bed62e30a4e6557c146b2865413c9ce924366be/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.2.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/f6606389b995d24dce8933e4ca4d6d46fce8612b/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.2.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/91f55f9a69925e7fc16b467c155897bbe8646f12/20/slim/Dockerfile

  - version: 20.2.1
    majorVersion: '20.2'
    prerelease: false
    date: '2017-12-19T01:39:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.2.1-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/e9cf70bed0fee9e6391818d05698549ebd05ad73/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.2.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/e9cf70bed0fee9e6391818d05698549ebd05ad73/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.2.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/e9cf70bed0fee9e6391818d05698549ebd05ad73/20/slim/Dockerfile

  - version: 20.1.7
    majorVersion: '20.1'
    prerelease: false
    date: '2017-11-25T01:34:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.7-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/b458125e4336680c6de731c09041c9a13813eb50/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.7
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/b458125e4336680c6de731c09041c9a13813eb50/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.7-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/b458125e4336680c6de731c09041c9a13813eb50/20/slim/Dockerfile

  - version: 20.1.6
    majorVersion: '20.1'
    prerelease: false
    date: '2017-11-22T03:03:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.6-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4e884cfceac4a6103280c299fc225a8484581e69/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.6
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4e884cfceac4a6103280c299fc225a8484581e69/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.6-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4e884cfceac4a6103280c299fc225a8484581e69/20/slim/Dockerfile

  - version: 20.1.5
    majorVersion: '20.1'
    prerelease: false
    date: '2017-11-16T13:25:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.5-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1b5d14663cffa24c255eb19902f6bc3b7f546b49/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1b5d14663cffa24c255eb19902f6bc3b7f546b49/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1b5d14663cffa24c255eb19902f6bc3b7f546b49/20/slim/Dockerfile

  - version: 20.1.4
    majorVersion: '20.1'
    prerelease: false
    date: '2017-11-03T09:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.4-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/31d7f264f6b6c85adc105208846f6384d7d80a9b/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/31d7f264f6b6c85adc105208846f6384d7d80a9b/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.4-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/31d7f264f6b6c85adc105208846f6384d7d80a9b/20/slim/Dockerfile

  - version: 20.1.3
    majorVersion: '20.1'
    prerelease: false
    date: '2017-10-27T04:33:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.3-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/fbcd7d4f272e6e2d81bfd1206d6c648ce6c7e93c/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/fbcd7d4f272e6e2d81bfd1206d6c648ce6c7e93c/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/fbcd7d4f272e6e2d81bfd1206d6c648ce6c7e93c/20/slim/Dockerfile

  - version: 20.1.2
    majorVersion: '20.1'
    prerelease: false
    date: '2017-10-12T01:34:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.2-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/14e8d92f190e0ec771707be8bf7cd4b35a108272/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/14e8d92f190e0ec771707be8bf7cd4b35a108272/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/14e8d92f190e0ec771707be8bf7cd4b35a108272/20/slim/Dockerfile

  - version: 20.1.1
    majorVersion: '20.1'
    prerelease: false
    date: '2017-10-05T13:37:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.1.1-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/8a77b857d423a79e43e9daddddcbf3cd1ed4dbcc/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.1.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/8a77b857d423a79e43e9daddddcbf3cd1ed4dbcc/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.1.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/8a77b857d423a79e43e9daddddcbf3cd1ed4dbcc/20/slim/Dockerfile

  - version: 20.0.5
    majorVersion: '20.0'
    prerelease: false
    date: '2017-09-15T18:40:40'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.0.5-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/76e20aa4cedfb91c192759ef4e6c1164cc79aece/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.0.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/76e20aa4cedfb91c192759ef4e6c1164cc79aece/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.0.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/76e20aa4cedfb91c192759ef4e6c1164cc79aece/20/slim/Dockerfile

  - version: 20.0.4
    majorVersion: '20.0'
    prerelease: false
    date: '2017-09-06T14:34:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.0.4-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/e7d145c915458e5bbb857a57c9aad7125f95a853/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.0.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/e7d145c915458e5bbb857a57c9aad7125f95a853/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.0.4-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/e7d145c915458e5bbb857a57c9aad7125f95a853/20/slim/Dockerfile

  - version: 20.0.3
    majorVersion: '20.0'
    prerelease: false
    date: '2017-08-24T12:56:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.0.3-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/67e6c5f8776d39ab22e843ad3cbf2bc9555e99e7/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.0.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/8e68446c17aaf5bd3c6ab204b920cb01f269438f/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.0.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/5a4e3f42bbe4a24bba8ae8812194f416721913ee/20/slim/Dockerfile

  - version: 20.0.2
    majorVersion: '20.0'
    prerelease: false
    date: '2017-07-28T03:32:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.0.2-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1a94b7d23c5e7d4b97e0c210db8ff7c26a60e0ac/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.0.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1a94b7d23c5e7d4b97e0c210db8ff7c26a60e0ac/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.0.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1a94b7d23c5e7d4b97e0c210db8ff7c26a60e0ac/20/slim/Dockerfile

  - version: 20.0.1
    majorVersion: '20.0'
    prerelease: false
    date: '2017-07-26T00:14:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.0.1-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/24ac339c0857ba7ba1bb98aad9f7898b2f65360c/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.0.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7671f941c1525c689d53595b1aac66772dc7fabf/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.0.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7671f941c1525c689d53595b1aac66772dc7fabf/20/slim/Dockerfile

  - version: '20.0'
    majorVersion: '20.0'
    prerelease: false
    date: '2017-06-10T02:44:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: erlang:20.0-rc2-alpine
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/60279df11f4f11abfdce15599d24ad73c1aefbe1/20/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:20.0-rc2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/60279df11f4f11abfdce15599d24ad73c1aefbe1/20/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:20.0-rc2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/60279df11f4f11abfdce15599d24ad73c1aefbe1/20/slim/Dockerfile

  - version: 19.3.6.13
    majorVersion: '19.3'
    prerelease: false
    date: '2019-05-15T23:06:18'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:19.3.6.13
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/7b9e1d54cf93f53b9ace21b9103588c77c198d2f/19/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:19.3.6.13-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/7b9e1d54cf93f53b9ace21b9103588c77c198d2f/19/slim/Dockerfile

  - version: 19.3.6.12
    majorVersion: '19.3'
    prerelease: false
    date: '2019-01-09T13:00:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:19.3.6.12
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/8815a0c2ce5282dbf08553f602e5214e4e9631ce/19/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:19.3.6.12-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/145d4a0002206e003cc76c8719b6264529165889/19/slim/Dockerfile

  - version: 19.3.6.11
    majorVersion: '19.3'
    prerelease: false
    date: '2018-09-25T18:49:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.11
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f0010bb16e7f56bdfbbc820572cc241c7272b131/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.11-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f0010bb16e7f56bdfbbc820572cc241c7272b131/19/slim/Dockerfile

  - version: 19.3.6.10
    majorVersion: '19.3'
    prerelease: false
    date: '2018-09-19T21:17:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.10
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/fe505cb6aa9afc509add31825b7f1734a0163c04/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.10-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/fe505cb6aa9afc509add31825b7f1734a0163c04/19/slim/Dockerfile

  - version: 19.3.6.9
    majorVersion: '19.3'
    prerelease: false
    date: '2018-08-10T21:56:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.9
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.9-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a7d4a8834c45f7e5af96ba237f2869def1eec442/19/slim/Dockerfile

  - version: 19.3.6.8
    majorVersion: '19.3'
    prerelease: false
    date: '2018-05-09T09:09:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.8
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a0b9e99ebacfa92a97224a657a88bd67b9877008/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.8-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a4b3ffe77b67f6330f72f5aef7c639c985fdad94/19/slim/Dockerfile

  - version: 19.3.6.7
    majorVersion: '19.3'
    prerelease: false
    date: '2018-03-23T01:03:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.7
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/583e51e3a8abf795a99b2613b1967469d4c1e18a/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.7-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/583e51e3a8abf795a99b2613b1967469d4c1e18a/19/slim/Dockerfile

  - version: 19.3.6.6
    majorVersion: '19.3'
    prerelease: false
    date: '2018-03-16T23:42:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.6
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/bede8199e3263e936687542a0492774b3512296a/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.6-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/bede8199e3263e936687542a0492774b3512296a/19/slim/Dockerfile

  - version: 19.3.6.5
    majorVersion: '19.3'
    prerelease: false
    date: '2018-02-23T01:36:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/f6606389b995d24dce8933e4ca4d6d46fce8612b/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/6e2088d493e6f50b82c0e416c72a2dd914e84fd2/19/slim/Dockerfile

  - version: 19.3.6.4
    majorVersion: '19.3'
    prerelease: false
    date: '2017-12-15T18:35:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/f2a72a89e764bfab03a9f6018f628c63ee7632b8/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.4-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/f2a72a89e764bfab03a9f6018f628c63ee7632b8/19/slim/Dockerfile

  - version: 19.3.6.3
    majorVersion: '19.3'
    prerelease: false
    date: '2017-11-22T03:03:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/0263180f32d4c3483c3b172137057f71076d60bd/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a9d7a0c3cc129f0e3d2f4ec0cf957a432b7d652e/19/slim/Dockerfile

  - version: 19.3.6.2
    majorVersion: '19.3'
    prerelease: false
    date: '2017-10-03T13:38:40'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/76e20aa4cedfb91c192759ef4e6c1164cc79aece/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/76e20aa4cedfb91c192759ef4e6c1164cc79aece/19/slim/Dockerfile

  - version: 19.3.6.1
    majorVersion: '19.3'
    prerelease: false
    date: '2017-07-26T00:14:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.6.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a9e5cdee4909cb1c9c2ea70595f5d32a46da885f/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.6.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/fd534c28f30861d8536fb0f7452051a17f452243/19/slim/Dockerfile

  - version: 19.3.5
    majorVersion: '19.3'
    prerelease: false
    date: '2017-06-06T10:44:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7b0e42e619b46d87fe6c41a018dcb7e065e6b0ed/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7b0e42e619b46d87fe6c41a018dcb7e065e6b0ed/19/slim/Dockerfile

  - version: 19.3.3
    majorVersion: '19.3'
    prerelease: false
    date: '2017-05-03T12:32:53'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/232e8eda4a1f00ffd9f417f86a4212fa4d39e441/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/232e8eda4a1f00ffd9f417f86a4212fa4d39e441/19/slim/Dockerfile

  - version: 19.3.1
    majorVersion: '19.3'
    prerelease: false
    date: '2017-04-05T22:41:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.3.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/3d50589fa66aedda3bf11419cd81fdadf5cc6ee3/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.3.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/3d50589fa66aedda3bf11419cd81fdadf5cc6ee3/19/slim/Dockerfile

  - version: 19.2.3
    majorVersion: '19.2'
    prerelease: false
    date: '2017-02-18T15:36:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.2.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/5962d4d7291b268eff8ff2513637eedabe9fe90f/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.2.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/5962d4d7291b268eff8ff2513637eedabe9fe90f/19/slim/Dockerfile

  - version: 19.2.2
    majorVersion: '19.2'
    prerelease: false
    date: '2017-02-02T23:30:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.2.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1b03fdd83ec769e7962ec0dce01e25613a46dacf/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.2.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/1b03fdd83ec769e7962ec0dce01e25613a46dacf/19/slim/Dockerfile

  - version: 19.1.6
    majorVersion: '19.1'
    prerelease: false
    date: '2016-11-14T13:59:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.1.6
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/02c1f6eaae350492bf74a9a261b9639b17ae524e/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.1.6-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/02c1f6eaae350492bf74a9a261b9639b17ae524e/19/slim/Dockerfile

  - version: 19.1.5
    majorVersion: '19.1'
    prerelease: false
    date: '2016-11-01T20:54:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.1.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/5e1399b65a48c81595b5ec58b0e3f70444c3067f/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.1.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/5e1399b65a48c81595b5ec58b0e3f70444c3067f/19/slim/Dockerfile

  - version: 19.0.7
    majorVersion: '19.0'
    prerelease: false
    date: '2016-09-15T14:34:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.0.7
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/6da7cea045b2603a42db5804cc15e6cffbb65e19/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.0.7-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/6da7cea045b2603a42db5804cc15e6cffbb65e19/19/slim/Dockerfile

  - version: 19.0.5
    majorVersion: '19.0'
    prerelease: false
    date: '2016-08-21T11:27:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.0.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7f5e7b4768136caa5f15e0b84d6b503fa430ef7b/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.0.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7f5e7b4768136caa5f15e0b84d6b503fa430ef7b/19/slim/Dockerfile

  - version: 19.0.3
    majorVersion: '19.0'
    prerelease: false
    date: '2016-08-10T13:38:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.0.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/d4b2a7c2bef381344ca28183d625e2db066be22b/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.0.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/d4b2a7c2bef381344ca28183d625e2db066be22b/19/slim/Dockerfile

  - version: 19.0.1
    majorVersion: '19.0'
    prerelease: false
    date: '2016-07-13T22:34:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:19.0.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01a4e03a5f1fd0ae7cf6d396ae6fe5695555645d/19/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:19.0.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01a4e03a5f1fd0ae7cf6d396ae6fe5695555645d/19/slim/Dockerfile

  - version: 18.3.4.11
    majorVersion: '18.3'
    prerelease: false
    date: '2019-05-15T23:06:18'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: erlang:18.3.4.11
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/8815a0c2ce5282dbf08553f602e5214e4e9631ce/18/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: erlang:18.3.4.11-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/145d4a0002206e003cc76c8719b6264529165889/18/slim/Dockerfile

  - version: 18.3.4.10
    majorVersion: '18.3'
    prerelease: false
    date: '2018-11-15T10:31:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.10
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4fe4caa8ebd01748b50bac745f5e96d872e1db4c/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.10-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/4fe4caa8ebd01748b50bac745f5e96d872e1db4c/18/slim/Dockerfile

  - version: 18.3.4.9
    majorVersion: '18.3'
    prerelease: false
    date: '2018-10-15T14:31:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.9
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/208f3d980b992c31d15343653c9b79f24690de09/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.9-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/f4198d6fc95719ebb3c2c3cd66407c78f4aa3f49/18/slim/Dockerfile

  - version: 18.3.4.8
    majorVersion: '18.3'
    prerelease: false
    date: '2018-04-21T09:05:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.8
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/354f85db09d403e3d970d0731b811c774086ef26/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.8-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/354f85db09d403e3d970d0731b811c774086ef26/18/slim/Dockerfile

  - version: 18.3.4.7
    majorVersion: '18.3'
    prerelease: false
    date: '2018-02-23T01:36:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.7
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/f6606389b995d24dce8933e4ca4d6d46fce8612b/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.7-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/572df91d94de857de661df30f33508e472c300a9/18/slim/Dockerfile

  - version: 18.3.4.6
    majorVersion: '18.3'
    prerelease: false
    date: '2017-11-22T03:03:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.6
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/0263180f32d4c3483c3b172137057f71076d60bd/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.6-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/edf38952cc361ff409f0117ea91581180a80a221/18/slim/Dockerfile

  - version: 18.3.4.5
    majorVersion: '18.3'
    prerelease: false
    date: '2017-11-14T01:37:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.5
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a75738f344af1f177f828cbaa6e8a44d15749d5a/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.5-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a75738f344af1f177f828cbaa6e8a44d15749d5a/18/slim/Dockerfile

  - version: 18.3.4.4
    majorVersion: '18.3'
    prerelease: false
    date: '2016-12-15T14:19:02'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7f5e7b4768136caa5f15e0b84d6b503fa430ef7b/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.4-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7f5e7b4768136caa5f15e0b84d6b503fa430ef7b/18/slim/Dockerfile

  - version: 18.3.4.3
    majorVersion: '18.3'
    prerelease: false
    date: '2016-08-10T13:38:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/d4b2a7c2bef381344ca28183d625e2db066be22b/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.3-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/d4b2a7c2bef381344ca28183d625e2db066be22b/18/slim/Dockerfile

  - version: 18.3.4.1
    majorVersion: '18.3'
    prerelease: false
    date: '2016-07-13T22:34:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.4.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01a4e03a5f1fd0ae7cf6d396ae6fe5695555645d/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.3.4.1-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/01a4e03a5f1fd0ae7cf6d396ae6fe5695555645d/18/slim/Dockerfile

  - version: 18.3.3
    majorVersion: '18.3'
    prerelease: false
    date: '2016-04-27T04:45:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/2daeab9ef204095169b3cc96def31ce08a5f7358/18/Dockerfile

  - version: 18.3.2
    majorVersion: '18.3'
    prerelease: false
    date: '2016-04-27T04:45:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.3.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a9f5121f34deb30cc61e21f0370aa8f16723aa14/18/Dockerfile

  - version: 18.2.3
    majorVersion: '18.2'
    prerelease: false
    date: '2016-02-03T11:13:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.2.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7b450cd7f43203d34c10ae0d35e9f8ea67257415/18/Dockerfile

  - version: 18.2.2
    majorVersion: '18.2'
    prerelease: false
    date: '2016-01-27T19:36:29'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.2.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/a44b506d60f417c1135257789244f9c3f7941118/18/Dockerfile

  - version: 18.2.1
    majorVersion: '18.2'
    prerelease: false
    date: '2015-12-28T18:15:07'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.2.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4ccaeb1b709c227bea0a712c25f974350242d6d6/18/Dockerfile

  - version: '18.2'
    majorVersion: '18.2'
    prerelease: false
    date: '2016-02-03T11:13:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.2
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7b450cd7f43203d34c10ae0d35e9f8ea67257415/18/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:18.2-slim
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7b450cd7f43203d34c10ae0d35e9f8ea67257415/18/slim/Dockerfile

  - version: 18.1.4
    majorVersion: '18.1'
    prerelease: false
    date: '2015-11-21T00:39:14'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.1.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/20e41464075dc0fc76709be77701530eddb6fe33/18/Dockerfile

  - version: 18.1.3
    majorVersion: '18.1'
    prerelease: false
    date: '2015-09-11T00:00:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.1.3
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/70fd1e32745cbc68e894d340b105f30b387966c8/18/Dockerfile

  - version: '18.1'
    majorVersion: '18.1'
    prerelease: false
    date: '2015-11-21T00:39:14'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:18.1
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/20e41464075dc0fc76709be77701530eddb6fe33/18/Dockerfile

  - version: 17.5.6.9
    majorVersion: '17.5'
    prerelease: false
    date: '2018-11-15T10:31:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:17.5.6.9
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a75738f344af1f177f828cbaa6e8a44d15749d5a/17/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: erlang:17.5.6.9-slim
        urlRepository: https://github.com/erlang/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/erlang/docker-erlang-otp/a75738f344af1f177f828cbaa6e8a44d15749d5a/17/slim/Dockerfile

  - version: 17.5.6.8
    majorVersion: '17.5'
    prerelease: false
    date: '2016-04-27T04:45:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:17.5.6.8
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/7b450cd7f43203d34c10ae0d35e9f8ea67257415/17/Dockerfile

  - version: 17.5.6.7
    majorVersion: '17.5'
    prerelease: false
    date: '2015-12-28T18:15:07'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:17.5.6.7
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/4ccaeb1b709c227bea0a712c25f974350242d6d6/17/Dockerfile

  - version: 17.5.6.4
    majorVersion: '17.5'
    prerelease: false
    date: '2015-11-21T00:39:14'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: erlang:17.5.6.4
        urlRepository: https://github.com/c0b/docker-erlang-otp
        urlDockerfile: https://raw.githubusercontent.com/c0b/docker-erlang-otp/70fd1e32745cbc68e894d340b105f30b387966c8/17/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/golang.yml", "\"
  - version: 1.12rc1
    majorVersion: '1.12'
    prerelease: true
    date: '2019-02-11T15:46:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.12rc1-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d9eeb1f6fa4d19f63dc1e845c01442738f22320f/1.12-rc/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12rc1-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d9eeb1f6fa4d19f63dc1e845c01442738f22320f/1.12-rc/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12rc1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d9eeb1f6fa4d19f63dc1e845c01442738f22320f/1.12-rc/stretch/Dockerfile

  - version: 1.12beta2
    majorVersion: '1.12'
    prerelease: true
    date: '2019-02-01T15:18:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.12beta2-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ad773d11d0bdf21d1f4bc4adf7ea580e71f49d10/1.12-rc/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12beta2-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7967b894abc1ff563e2d854afd9beabd37def26c/1.12-rc/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12beta2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ad773d11d0bdf21d1f4bc4adf7ea580e71f49d10/1.12-rc/stretch/Dockerfile

  - version: 1.12beta1
    majorVersion: '1.12'
    prerelease: true
    date: '2018-12-31T14:48:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.12beta1-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/0c8f21255b8c4b707901db4e5d77235b7a1b7159/1.12-rc/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12beta1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/0c8f21255b8c4b707901db4e5d77235b7a1b7159/1.12-rc/stretch/Dockerfile

  - version: 1.12.5
    majorVersion: '1.12'
    prerelease: false
    date: '2019-05-07T11:26:23'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12.5-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d6715f0733f5282836cad2867a0a2b107fc35147/1.12/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12.5-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d6715f0733f5282836cad2867a0a2b107fc35147/1.12/stretch/Dockerfile

  - version: 1.12.4
    majorVersion: '1.12'
    prerelease: false
    date: '2019-04-12T13:49:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12.4-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8f2f8502c173fbbcf33fcde5566ca53ad1070ae8/1.12/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12.4-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8f2f8502c173fbbcf33fcde5566ca53ad1070ae8/1.12/stretch/Dockerfile

  - version: 1.12.3
    majorVersion: '1.12'
    prerelease: false
    date: '2019-04-08T22:29:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12.3-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ec8ae35b2c40c81dcbce3d124e097df8c937d5cb/1.12/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12.3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ec8ae35b2c40c81dcbce3d124e097df8c937d5cb/1.12/stretch/Dockerfile

  - version: 1.12.2
    majorVersion: '1.12'
    prerelease: false
    date: '2019-04-05T22:16:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12.2-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/15ddde6bf4bbfff97af673d8c04d32a95eb60d3e/1.12/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12.2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/15ddde6bf4bbfff97af673d8c04d32a95eb60d3e/1.12/stretch/Dockerfile

  - version: 1.12.1
    majorVersion: '1.12'
    prerelease: false
    date: '2019-03-14T16:46:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12.1-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd272b2b72db82a0bd516ce3d09bba624651516c/1.12/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12.1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd272b2b72db82a0bd516ce3d09bba624651516c/1.12/stretch/Dockerfile

  - version: 1.12.0
    majorVersion: '1.12'
    prerelease: false
    date: '2019-03-08T19:14:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.12.0-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ff7c350f627c6724e9bffa19f519545a5997a924/1.12/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.12.0-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ff7c350f627c6724e9bffa19f519545a5997a924/1.12/stretch/Dockerfile

  - version: 1.11rc2
    majorVersion: '1.11'
    prerelease: true
    date: '2018-08-23T17:05:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11rc2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/870d14b02b4c226eb57beb5f44e1b22c12121641/1.11-rc/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11rc2-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/870d14b02b4c226eb57beb5f44e1b22c12121641/1.11-rc/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11rc2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/870d14b02b4c226eb57beb5f44e1b22c12121641/1.11-rc/stretch/Dockerfile

  - version: 1.11rc1
    majorVersion: '1.11'
    prerelease: true
    date: '2018-08-22T13:15:16'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11rc1-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd09bcfba2f2ec52318834df502b1a1907fa04f5/1.11-rc/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11rc1-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd09bcfba2f2ec52318834df502b1a1907fa04f5/1.11-rc/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11rc1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5d648be144af4fb0ffa29cc7f21d84c610901703/1.11-rc/stretch/Dockerfile

  - version: 1.11beta3
    majorVersion: '1.11'
    prerelease: true
    date: '2018-08-03T17:03:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11beta3-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/c45b9079fefae5aacf9f4ec16d01c27e85cccbdf/1.11-rc/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11beta3-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/c45b9079fefae5aacf9f4ec16d01c27e85cccbdf/1.11-rc/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11beta3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/c45b9079fefae5aacf9f4ec16d01c27e85cccbdf/1.11-rc/stretch/Dockerfile

  - version: 1.11beta2
    majorVersion: '1.11'
    prerelease: true
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11beta2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9d80ad8bdf0abe15bdd3fbc77f92b17e69fe9284/1.11-rc/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11beta2-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9d80ad8bdf0abe15bdd3fbc77f92b17e69fe9284/1.11-rc/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11beta2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9d80ad8bdf0abe15bdd3fbc77f92b17e69fe9284/1.11-rc/stretch/Dockerfile

  - version: 1.11beta1
    majorVersion: '1.11'
    prerelease: true
    date: '2018-07-12T19:22:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11beta1-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8fdde0724a5cbc43c05cd6817ab1161450a46dcc/1.11-rc/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11beta1-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b7a4a48a142ef2ada9c5794ba054fd008656c779/1.11-rc/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11beta1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8fdde0724a5cbc43c05cd6817ab1161450a46dcc/1.11-rc/stretch/Dockerfile

  - version: 1.11.10
    majorVersion: '1.11'
    prerelease: false
    date: '2019-05-07T11:26:23'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.10-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ea11276fbf2c81e2526ae675c80eb49623a31a04/1.11/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.11.10-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ea11276fbf2c81e2526ae675c80eb49623a31a04/1.11/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.10-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ea11276fbf2c81e2526ae675c80eb49623a31a04/1.11/stretch/Dockerfile

  - version: 1.11.9
    majorVersion: '1.11'
    prerelease: false
    date: '2019-04-12T13:49:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.9-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/631c9d2f3a2c2bbfa77cbc0b8824890ca7ab7bac/1.11/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.11.9-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/631c9d2f3a2c2bbfa77cbc0b8824890ca7ab7bac/1.11/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.9-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/631c9d2f3a2c2bbfa77cbc0b8824890ca7ab7bac/1.11/stretch/Dockerfile

  - version: 1.11.8
    majorVersion: '1.11'
    prerelease: false
    date: '2019-04-08T22:29:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.8-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7b5fdcbaf4d5de1a6711c7712a87a9b3a61a9f30/1.11/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.11.8-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7b5fdcbaf4d5de1a6711c7712a87a9b3a61a9f30/1.11/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.8-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7b5fdcbaf4d5de1a6711c7712a87a9b3a61a9f30/1.11/stretch/Dockerfile

  - version: 1.11.7
    majorVersion: '1.11'
    prerelease: false
    date: '2019-04-05T22:16:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.7-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e5da3ded3ae6e599b047bbb6218673b354944f10/1.11/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.11.7-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e5da3ded3ae6e599b047bbb6218673b354944f10/1.11/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.7-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e5da3ded3ae6e599b047bbb6218673b354944f10/1.11/stretch/Dockerfile

  - version: 1.11.6
    majorVersion: '1.11'
    prerelease: false
    date: '2019-03-14T16:46:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.6-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/3d4a6797603e2688369b556f61a29a470055a164/1.11/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.11.6-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/3d4a6797603e2688369b556f61a29a470055a164/1.11/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.6-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/3d4a6797603e2688369b556f61a29a470055a164/1.11/stretch/Dockerfile

  - version: 1.11.5
    majorVersion: '1.11'
    prerelease: false
    date: '2019-03-08T19:14:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11.5-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2e795f515357c575359f0720acaf7f5490f8bcf5/1.11/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.5-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2e795f515357c575359f0720acaf7f5490f8bcf5/1.11/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.11.5-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7967b894abc1ff563e2d854afd9beabd37def26c/1.11/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.5-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2e795f515357c575359f0720acaf7f5490f8bcf5/1.11/stretch/Dockerfile

  - version: 1.11.4
    majorVersion: '1.11'
    prerelease: false
    date: '2019-01-10T15:54:34'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11.4-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/304174c7c604cbb7dd445ab58f479efe98f3bbf4/1.11/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.4-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/304174c7c604cbb7dd445ab58f479efe98f3bbf4/1.11/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.4-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/304174c7c604cbb7dd445ab58f479efe98f3bbf4/1.11/stretch/Dockerfile

  - version: 1.11.3
    majorVersion: '1.11'
    prerelease: false
    date: '2018-12-13T14:45:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11.3-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b55a09cd54a0e1ecb2f4ea00764c07be6511d522/1.11/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.3-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b55a09cd54a0e1ecb2f4ea00764c07be6511d522/1.11/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b55a09cd54a0e1ecb2f4ea00764c07be6511d522/1.11/stretch/Dockerfile

  - version: 1.11.2
    majorVersion: '1.11'
    prerelease: false
    date: '2018-11-02T16:16:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11.2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f441baf15c3e7397c2c3f6f712b4d4ba374f1948/1.11/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.2-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f441baf15c3e7397c2c3f6f712b4d4ba374f1948/1.11/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f441baf15c3e7397c2c3f6f712b4d4ba374f1948/1.11/stretch/Dockerfile

  - version: 1.11.1
    majorVersion: '1.11'
    prerelease: false
    date: '2018-10-01T18:04:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11.1-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ed78459fac108dab72556146b759516cc65ee109/1.11/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.1-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ed78459fac108dab72556146b759516cc65ee109/1.11/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ed78459fac108dab72556146b759516cc65ee109/1.11/stretch/Dockerfile

  - version: 1.11.0
    majorVersion: '1.11'
    prerelease: false
    date: '2018-08-27T23:26:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.11.0-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e06b00cbe4974436ee00eaec215d7fbb123cbc24/1.11/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.11.0-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e06b00cbe4974436ee00eaec215d7fbb123cbc24/1.11/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.11.0-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e06b00cbe4974436ee00eaec215d7fbb123cbc24/1.11/stretch/Dockerfile

  - version: 1.10rc2
    majorVersion: '1.10'
    prerelease: true
    date: '2018-02-07T14:45:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10rc2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/75759d6b5bea61ea8347069221f2b03a48ee3f88/1.10-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10rc2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/75759d6b5bea61ea8347069221f2b03a48ee3f88/1.10-rc/stretch/Dockerfile

  - version: 1.10rc1
    majorVersion: '1.10'
    prerelease: true
    date: '2018-01-25T16:30:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10rc1-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ddb3ecbe839dfc9d6a3e321fec5ba41284201cec/1.10-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10rc1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ddb3ecbe839dfc9d6a3e321fec5ba41284201cec/1.10-rc/stretch/Dockerfile

  - version: 1.10beta2
    majorVersion: '1.10'
    prerelease: true
    date: '2018-01-25T11:58:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10beta2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fe39454becd30a04a8f398fc83bd19a8117eadab/1.10-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10beta2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fe39454becd30a04a8f398fc83bd19a8117eadab/1.10-rc/stretch/Dockerfile

  - version: 1.10beta1
    majorVersion: '1.10'
    prerelease: true
    date: '2017-12-19T13:25:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10beta1-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b177ea29af72ec40ea8a77e00cfddfcaf96be6d9/1.10-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10beta1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/01662edd98bfea507162776c08fbfb51aa8f1e3d/1.10-rc/stretch/Dockerfile

  - version: 1.10.8
    majorVersion: '1.10'
    prerelease: false
    date: '2019-02-11T15:46:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.8-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2e795f515357c575359f0720acaf7f5490f8bcf5/1.10/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.10.8-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2e795f515357c575359f0720acaf7f5490f8bcf5/1.10/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: golang:1.10.8-alpine3.9
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7967b894abc1ff563e2d854afd9beabd37def26c/1.10/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.8-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2e795f515357c575359f0720acaf7f5490f8bcf5/1.10/stretch/Dockerfile

  - version: 1.10.7
    majorVersion: '1.10'
    prerelease: false
    date: '2019-01-10T15:54:34'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.7-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/592ba6d666abe8698b915749723498451060a919/1.10/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.10.7-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/592ba6d666abe8698b915749723498451060a919/1.10/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.7-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/592ba6d666abe8698b915749723498451060a919/1.10/stretch/Dockerfile

  - version: 1.10.6
    majorVersion: '1.10'
    prerelease: false
    date: '2018-12-13T14:45:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.6-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f422f45cf334bc50a286047f4afb9c03de8ea325/1.10/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.10.6-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f422f45cf334bc50a286047f4afb9c03de8ea325/1.10/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.6-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f422f45cf334bc50a286047f4afb9c03de8ea325/1.10/stretch/Dockerfile

  - version: 1.10.5
    majorVersion: '1.10'
    prerelease: false
    date: '2018-11-02T16:16:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.5-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a98483988d5ebfc7710371c39306aae705544839/1.10/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.10.5-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a98483988d5ebfc7710371c39306aae705544839/1.10/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.5-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a98483988d5ebfc7710371c39306aae705544839/1.10/stretch/Dockerfile

  - version: 1.10.4
    majorVersion: '1.10'
    prerelease: false
    date: '2018-10-01T18:04:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.4-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/69f2d2a132565bf60afc91813801a3bdcc981526/1.10/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.10.4-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/69f2d2a132565bf60afc91813801a3bdcc981526/1.10/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.4-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1a7381c32220091f35bd76e34bc28af251954acb/1.10/stretch/Dockerfile

  - version: 1.10.3
    majorVersion: '1.10'
    prerelease: false
    date: '2018-08-23T17:05:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.3-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd09bcfba2f2ec52318834df502b1a1907fa04f5/1.10/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.10.3-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd09bcfba2f2ec52318834df502b1a1907fa04f5/1.10/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fa0223eaa427188e0c70025f557d515129a9973f/1.10/stretch/Dockerfile

  - version: 1.10.2
    majorVersion: '1.10'
    prerelease: false
    date: '2018-05-03T22:56:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/43f9c69e1bcb068bdb6883cd0fb2339e9b197510/1.10/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/329b6672949337c4469351b2e8b8575459a75c7f/1.10/stretch/Dockerfile

  - version: 1.10.1
    majorVersion: '1.10'
    prerelease: false
    date: '2018-04-10T13:00:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.1-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8dca7d74ac8797db0525fd4efa4c59fc3c0c5675/1.10/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/906e04de73168f643c5c2b40dca0877a14d2377c/1.10/stretch/Dockerfile

  - version: 1.10.0
    majorVersion: '1.10'
    prerelease: false
    date: '2018-02-16T14:36:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.10.0-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9bf6daddb324a4d8e82b0613cf348a6eff363f95/1.10/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.10.0-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9bf6daddb324a4d8e82b0613cf348a6eff363f95/1.10/stretch/Dockerfile

  - version: 1.9rc2
    majorVersion: '1.9'
    prerelease: true
    date: '2017-08-08T09:07:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9rc2-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cf5669b0a1d3411c32896075bfabebafda12adbf/1.9-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9rc2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cf5669b0a1d3411c32896075bfabebafda12adbf/1.9-rc/stretch/Dockerfile

  - version: 1.9rc1
    majorVersion: '1.9'
    prerelease: true
    date: '2017-07-25T10:43:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9rc1-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/347de3fe79db411821e841f782c156f6fe1d9704/1.9-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9rc1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/347de3fe79db411821e841f782c156f6fe1d9704/1.9-rc/stretch/Dockerfile

  - version: 1.9beta2
    majorVersion: '1.9'
    prerelease: true
    date: '2017-07-18T11:13:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9beta2-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2a15dfff04accfd31c2a45b3bb7423aa86aa2d60/1.9-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9beta2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2a15dfff04accfd31c2a45b3bb7423aa86aa2d60/1.9-rc/stretch/Dockerfile

  - version: 1.9beta1
    majorVersion: '1.9'
    prerelease: true
    date: '2017-06-15T16:47:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9beta1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cdeca62eb84c34680e2f4ec018d1d6cfaa818681/1.9-rc/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9beta1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e72fd691a065bfec94de67bf826e4ebe511c4d24/1.9-rc/Dockerfile

  - version: 1.9.7
    majorVersion: '1.9'
    prerelease: false
    date: '2018-08-23T17:05:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.7-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/4e30a6bb9f410004a8ecd2336e589f441b7398ec/1.9/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.9.7-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd09bcfba2f2ec52318834df502b1a1907fa04f5/1.9/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: golang:1.9.7-alpine3.8
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fd09bcfba2f2ec52318834df502b1a1907fa04f5/1.9/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.7-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/4e30a6bb9f410004a8ecd2336e589f441b7398ec/1.9/stretch/Dockerfile

  - version: 1.9.6
    majorVersion: '1.9'
    prerelease: false
    date: '2018-05-03T22:56:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.6-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/43f9c69e1bcb068bdb6883cd0fb2339e9b197510/1.9/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.9.6-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/43f9c69e1bcb068bdb6883cd0fb2339e9b197510/1.9/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.6-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a9ee01751149630d296d600cbbdea0ab37e5ab04/1.9/stretch/Dockerfile

  - version: 1.9.5
    majorVersion: '1.9'
    prerelease: false
    date: '2018-04-10T13:00:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.5-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8dca7d74ac8797db0525fd4efa4c59fc3c0c5675/1.9/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.9.5-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8dca7d74ac8797db0525fd4efa4c59fc3c0c5675/1.9/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.5-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/97535d47a7c8312b25fc98418771f943c0bbdfb3/1.9/stretch/Dockerfile

  - version: 1.9.4
    majorVersion: '1.9'
    prerelease: false
    date: '2018-02-16T14:36:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.4-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/366fe83ed839938cd04b2d546a06e2aee25a39a2/1.9/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.9.4-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/366fe83ed839938cd04b2d546a06e2aee25a39a2/1.9/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.4-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/366fe83ed839938cd04b2d546a06e2aee25a39a2/1.9/stretch/Dockerfile

  - version: 1.9.3
    majorVersion: '1.9'
    prerelease: false
    date: '2018-01-25T16:30:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.3-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2f2f3b620d61f533484f24a568c2ca46e4fda91c/1.9/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.9.3-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2f2f3b620d61f533484f24a568c2ca46e4fda91c/1.9/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2f2f3b620d61f533484f24a568c2ca46e4fda91c/1.9/stretch/Dockerfile

  - version: 1.9.2
    majorVersion: '1.9'
    prerelease: false
    date: '2018-01-15T10:27:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.2-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b177ea29af72ec40ea8a77e00cfddfcaf96be6d9/1.9/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: golang:1.9.2-alpine3.7
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1e2ddb8ec8c9f59a56ddfb343e1bd8e65440b6db/1.9/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cffcff7fce7f6b6b5c82fc8f7b3331a10590a661/1.9/stretch/Dockerfile

  - version: 1.9.1
    majorVersion: '1.9'
    prerelease: false
    date: '2017-10-25T16:21:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.1-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a69e233ce841ae9cf8986c103f58b877e294dcd0/1.9/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/stretch/Dockerfile

  - version: 1.9.0
    majorVersion: '1.9'
    prerelease: false
    date: '2017-08-29T10:39:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.9.0-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/94e49ca93c5bbf172e462cea8872c77f9bc08c10/1.9/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.9.0-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/94e49ca93c5bbf172e462cea8872c77f9bc08c10/1.9/stretch/Dockerfile

  - version: 1.8rc3
    majorVersion: '1.8'
    prerelease: true
    date: '2017-02-14T09:33:45'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8rc3-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f4a3691372cedcc546d7da35e30d961aec9ab04e/1.8-rc/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.8rc3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/0912df2945653aa6b03a136302b4f2556081a7e5/1.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8rc3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f4a3691372cedcc546d7da35e30d961aec9ab04e/1.8-rc/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8rc3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/8ee098f95a9b99552a157b5909e6916c9c181cc9/1.8-rc/stretch/Dockerfile

  - version: 1.8rc2
    majorVersion: '1.8'
    prerelease: true
    date: '2017-01-19T16:56:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8rc2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/da6e73b4fa5b3094a23202cca088dd11b74ed110/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.8rc2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/da6e73b4fa5b3094a23202cca088dd11b74ed110/1.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8rc2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/da6e73b4fa5b3094a23202cca088dd11b74ed110/1.8/Dockerfile

  - version: 1.8rc1
    majorVersion: '1.8'
    prerelease: true
    date: '2017-01-11T15:24:12'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8rc1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b819b526131d44c03f02942816f616067d389037/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.8rc1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b819b526131d44c03f02942816f616067d389037/1.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8rc1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b819b526131d44c03f02942816f616067d389037/1.8/Dockerfile

  - version: 1.8beta2
    majorVersion: '1.8'
    prerelease: true
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8beta2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/dcc5daf40298da271abb97677d5c78d4b5433b02/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.8beta2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f98d9b6d5d34efa8ba52426358d00d950f9daaec/1.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8beta2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f98d9b6d5d34efa8ba52426358d00d950f9daaec/1.8/Dockerfile

  - version: 1.8beta1
    majorVersion: '1.8'
    prerelease: true
    date: '2016-12-06T15:00:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.8beta1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7a5e33ec522b17dffa51c2763610a2967475529d/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.8beta1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7319cccdf0c2b8cbcb4ea214f310e8d15fe5c1dd/1.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8beta1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7319cccdf0c2b8cbcb4ea214f310e8d15fe5c1dd/1.8/Dockerfile

  - version: 1.8.7
    majorVersion: '1.8'
    prerelease: false
    date: '2018-02-07T14:45:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.7-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e63ba9c5efb040b35b71e16722b71b2931f29eb8/1.8/alpine3.5/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.8.7-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e63ba9c5efb040b35b71e16722b71b2931f29eb8/1.8/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.7-jessie
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e63ba9c5efb040b35b71e16722b71b2931f29eb8/1.8/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.7-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e63ba9c5efb040b35b71e16722b71b2931f29eb8/1.8/stretch/Dockerfile

  - version: 1.8.6
    majorVersion: '1.8'
    prerelease: false
    date: '2018-01-25T16:30:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.6-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ad742b941dc3e8aa0a5763c8f0c1d7102d7ac76e/1.8/alpine3.5/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.8.6-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ad742b941dc3e8aa0a5763c8f0c1d7102d7ac76e/1.8/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.6-jessie
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ad742b941dc3e8aa0a5763c8f0c1d7102d7ac76e/1.8/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.6-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ad742b941dc3e8aa0a5763c8f0c1d7102d7ac76e/1.8/stretch/Dockerfile

  - version: 1.8.5
    majorVersion: '1.8'
    prerelease: false
    date: '2018-01-15T10:27:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.5-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b177ea29af72ec40ea8a77e00cfddfcaf96be6d9/1.8/alpine3.5/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.8.5-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b177ea29af72ec40ea8a77e00cfddfcaf96be6d9/1.8/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.5-jessie
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/87aaffce8f74bc5bee1306539030ee413c32aee4/1.8/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.5-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/87aaffce8f74bc5bee1306539030ee413c32aee4/1.8/stretch/Dockerfile

  - version: 1.8.4
    majorVersion: '1.8'
    prerelease: false
    date: '2017-10-25T16:21:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.4-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1116b4262228428be20d7e9413ad277c716adb16/1.8/alpine3.5/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.8.4-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ada74f34261f8142b826961b4d0521c1c97b3371/1.8/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.4-jessie
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1116b4262228428be20d7e9413ad277c716adb16/1.8/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.4-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1116b4262228428be20d7e9413ad277c716adb16/1.8/stretch/Dockerfile

  - version: 1.8.3
    majorVersion: '1.8'
    prerelease: false
    date: '2017-08-29T10:39:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.3-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/94e49ca93c5bbf172e462cea8872c77f9bc08c10/1.8/alpine3.5/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.8.3-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/94e49ca93c5bbf172e462cea8872c77f9bc08c10/1.8/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.3-jessie
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/94e49ca93c5bbf172e462cea8872c77f9bc08c10/1.8/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.3-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/94e49ca93c5bbf172e462cea8872c77f9bc08c10/1.8/stretch/Dockerfile

  - version: 1.8.2
    majorVersion: '1.8'
    prerelease: false
    date: '2017-05-23T15:05:45'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f298814e6cb1f49a9aeb0a9d999553d05bbfe31/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f298814e6cb1f49a9aeb0a9d999553d05bbfe31/1.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.2-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f298814e6cb1f49a9aeb0a9d999553d05bbfe31/1.8/stretch/Dockerfile

  - version: 1.8.1
    majorVersion: '1.8'
    prerelease: false
    date: '2017-05-19T10:13:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a3b3abe48e2abec29bfea558b0916c8c682f88b0/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a3b3abe48e2abec29bfea558b0916c8c682f88b0/1.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.1-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a3b3abe48e2abec29bfea558b0916c8c682f88b0/1.8/stretch/Dockerfile

  - version: 1.8.0
    majorVersion: '1.8'
    prerelease: false
    date: '2017-03-01T14:54:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.8.0-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/132cd70768e3bc269902e4c7b579203f66dc9f64/1.8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.8.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/132cd70768e3bc269902e4c7b579203f66dc9f64/1.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 4
        image: buildpack-deps:stretch-scm
        imageRepository: golang:1.8.0-stretch
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/132cd70768e3bc269902e4c7b579203f66dc9f64/1.8/stretch/Dockerfile

  - version: 1.7rc6
    majorVersion: '1.7'
    prerelease: true
    date: '2016-08-12T16:36:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7rc6-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/14bd36d716dfedf39bce5a2ac0b06f09f1049985/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7rc6-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/14bd36d716dfedf39bce5a2ac0b06f09f1049985/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7rc6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/14bd36d716dfedf39bce5a2ac0b06f09f1049985/1.7/Dockerfile

  - version: 1.7rc5
    majorVersion: '1.7'
    prerelease: true
    date: '2016-08-05T14:08:20'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7rc5-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f4ffe5c0e7c5fa02c1be2fef051ada5128eb747e/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7rc5-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f4ffe5c0e7c5fa02c1be2fef051ada5128eb747e/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7rc5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f4ffe5c0e7c5fa02c1be2fef051ada5128eb747e/1.7/Dockerfile

  - version: 1.7rc4
    majorVersion: '1.7'
    prerelease: true
    date: '2016-08-02T15:10:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7rc4-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cdf73bb71f9a0c0f9aa22beb3d9d34274aaf1b03/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7rc4-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cdf73bb71f9a0c0f9aa22beb3d9d34274aaf1b03/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7rc4
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/cdf73bb71f9a0c0f9aa22beb3d9d34274aaf1b03/1.7/Dockerfile

  - version: 1.7rc3
    majorVersion: '1.7'
    prerelease: true
    date: '2016-07-22T13:01:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7rc3-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/42e12071d6b84da9abbeb1d0b9eaef59d7ad2f30/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7rc3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/42e12071d6b84da9abbeb1d0b9eaef59d7ad2f30/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7rc3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/42e12071d6b84da9abbeb1d0b9eaef59d7ad2f30/1.7/Dockerfile

  - version: 1.7rc2
    majorVersion: '1.7'
    prerelease: true
    date: '2016-07-18T09:57:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7rc2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f666dc2f4f51df564613f787d28b3a2353243e0/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7rc2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f666dc2f4f51df564613f787d28b3a2353243e0/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7rc2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f666dc2f4f51df564613f787d28b3a2353243e0/1.7/Dockerfile

  - version: 1.7rc1
    majorVersion: '1.7'
    prerelease: true
    date: '2016-07-08T11:25:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7rc1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ba6a0e7a5bc08ecf0f760cbbd32d1cb71f8da8b9/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7rc1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ba6a0e7a5bc08ecf0f760cbbd32d1cb71f8da8b9/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7rc1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ba6a0e7a5bc08ecf0f760cbbd32d1cb71f8da8b9/1.7/Dockerfile

  - version: 1.7beta2
    majorVersion: '1.7'
    prerelease: true
    date: '2016-07-01T10:30:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7beta2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5a84ebfbf3c55674dd6f36c66828c2e7461f2f0b/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7beta2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7fd2b76513e537343f088da671a51f5b2ea7d4c3/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7beta2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7fd2b76513e537343f088da671a51f5b2ea7d4c3/1.7/Dockerfile

  - version: 1.7beta1
    majorVersion: '1.7'
    prerelease: true
    date: '2016-06-09T12:08:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7beta1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/f3768925fd0ebeb966c30bc64206b0e6020de66e/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7beta1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2372c8cafe9cc958bade33ad0b8b54de8869c21f/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7beta1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2372c8cafe9cc958bade33ad0b8b54de8869c21f/1.7/Dockerfile

  - version: 1.7.6
    majorVersion: '1.7'
    prerelease: false
    date: '2017-08-08T09:07:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7.6-alpine3.4
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2a15dfff04accfd31c2a45b3bb7423aa86aa2d60/1.7/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.7.6-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9e519a8844c25e38fe67547e8f681ada486e473b/1.7/alpine3.5/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: golang:1.7.6-alpine3.6
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/495a742832974d434c6e3356e19c93b0e82543c8/1.7/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7.6-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/97b2ff201ec59b9a037197d132c64eb937370c64/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7.6-jessie
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/2a15dfff04accfd31c2a45b3bb7423aa86aa2d60/1.7/jessie/Dockerfile

  - version: 1.7.5
    majorVersion: '1.7'
    prerelease: false
    date: '2017-05-19T10:13:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7.5-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d8ff0dd77a4910759d7f6b11e2ec0169337e14d1/1.7/alpine/Dockerfile

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.7.5-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d8ff0dd77a4910759d7f6b11e2ec0169337e14d1/1.7/alpine3.5/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7.5-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/07253735ad448adf751e4f9ba4c71acdb735367f/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/07253735ad448adf751e4f9ba4c71acdb735367f/1.7/Dockerfile

  - version: 1.7.4
    majorVersion: '1.7'
    prerelease: false
    date: '2017-01-19T16:56:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7.4-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/bfbd521de2942d10d96b14f99c491536490db018/1.7/alpine/Dockerfile

      - name: Alpine
        releaseName: '3.5'
        release: 3.5
        weight: 1
        image: alpine:3.5
        imageRepository: golang:1.7.4-alpine3.5
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/6c5f2993c210854b077ad07c9a94334f8c82fbb1/1.7/alpine3.5/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7.4-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/18ee81a2ec649dd7b3d5126b24eef86bc9c86d80/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7.4
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/18ee81a2ec649dd7b3d5126b24eef86bc9c86d80/1.7/Dockerfile

  - version: 1.7.3
    majorVersion: '1.7'
    prerelease: false
    date: '2016-12-01T07:53:18'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7.3-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/4fd5df86eea53623b1009b3621b40a97f9f359e5/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7.3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/4fd5df86eea53623b1009b3621b40a97f9f359e5/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7.3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/4fd5df86eea53623b1009b3621b40a97f9f359e5/1.7/Dockerfile

  - version: 1.7.1
    majorVersion: '1.7'
    prerelease: false
    date: '2016-10-17T16:58:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7.1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/3a3e91c242b58a7d4e6022b3710b2e871f0ee5d6/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7.1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/85df9970e9548f38248d36f6f4341e2aea128515/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/85df9970e9548f38248d36f6f4341e2aea128515/1.7/Dockerfile

  - version: 1.7.0
    majorVersion: '1.7'
    prerelease: false
    date: '2016-08-16T09:14:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.7.0-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ba5f6a10dcc46edeb66377261f873e3b61af36f5/1.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.7.0-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ba5f6a10dcc46edeb66377261f873e3b61af36f5/1.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.7.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ba5f6a10dcc46edeb66377261f873e3b61af36f5/1.7/Dockerfile

  - version: 1.6rc2
    majorVersion: '1.6'
    prerelease: true
    date: '2016-02-04T12:41:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.6rc2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/79e2ef7426433df214a0592cc49b7544658811b2/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6rc2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/79e2ef7426433df214a0592cc49b7544658811b2/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6rc2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/79e2ef7426433df214a0592cc49b7544658811b2/1.6/Dockerfile

  - version: 1.6rc1
    majorVersion: '1.6'
    prerelease: true
    date: '2016-01-27T21:24:12'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.6rc1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/de005b1ff6dc41f6c0f18ae06bbd2ef36da964bb/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6rc1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/de005b1ff6dc41f6c0f18ae06bbd2ef36da964bb/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6rc1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/de005b1ff6dc41f6c0f18ae06bbd2ef36da964bb/1.6/Dockerfile

  - version: 1.6beta2
    majorVersion: '1.6'
    prerelease: true
    date: '2016-01-18T09:07:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.6beta2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1689df433a45bd787990f2982fb28345ec27f733/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6beta2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7f3d1ad6f1b658af7df616f9fd9b1fc90fd69402/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6beta2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7f3d1ad6f1b658af7df616f9fd9b1fc90fd69402/1.6/Dockerfile

  - version: 1.6beta1
    majorVersion: '1.6'
    prerelease: true
    date: '2016-01-13T13:03:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.6beta1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5fc9acac9ae394e055cdc2e80400bf78e360cd2c/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6beta1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ce284e14cdee73fbaa8fb680011a812f272eae2e/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6beta1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ce284e14cdee73fbaa8fb680011a812f272eae2e/1.6/Dockerfile

  - version: 1.6.4
    majorVersion: '1.6'
    prerelease: false
    date: '2017-02-16T15:00:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.6.4-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/bfbd521de2942d10d96b14f99c491536490db018/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6.4-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fddc8c18282871b554cb0d74780767690bdda3ec/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6.4
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/fddc8c18282871b554cb0d74780767690bdda3ec/1.6/Dockerfile

  - version: 1.6.3
    majorVersion: '1.6'
    prerelease: false
    date: '2016-12-01T07:53:18'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.6.3-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9f666dc2f4f51df564613f787d28b3a2353243e0/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6.3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/85df9970e9548f38248d36f6f4341e2aea128515/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6.3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/85df9970e9548f38248d36f6f4341e2aea128515/1.6/Dockerfile

  - version: 1.6.2
    majorVersion: '1.6'
    prerelease: false
    date: '2016-07-08T11:25:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.6.2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5a84ebfbf3c55674dd6f36c66828c2e7461f2f0b/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6.2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7fd2b76513e537343f088da671a51f5b2ea7d4c3/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7fd2b76513e537343f088da671a51f5b2ea7d4c3/1.6/Dockerfile

  - version: 1.6.1
    majorVersion: '1.6'
    prerelease: false
    date: '2016-04-12T19:32:07'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.6.1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d7e2a8d90a9b8f5dfd5bcd428e0c33b68c40cc19/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6.1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d7e2a8d90a9b8f5dfd5bcd428e0c33b68c40cc19/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/d7e2a8d90a9b8f5dfd5bcd428e0c33b68c40cc19/1.6/Dockerfile

  - version: 1.6.0
    majorVersion: '1.6'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.6.0-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/0f3ab4a3d2eba38991ab7b41941f1dc99f13dc3f/1.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.6.0-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/3cdd85183c0f3f6608588166410d24260cd8cb2f/1.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.6.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/3cdd85183c0f3f6608588166410d24260cd8cb2f/1.6/Dockerfile

  - version: 1.5rc1
    majorVersion: '1.5'
    prerelease: true
    date: '2015-08-06T15:47:16'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5rc1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/128a04e883b619d006ba07ea2ccae964b2efcf92/1.5/Dockerfile

  - version: 1.5beta3
    majorVersion: '1.5'
    prerelease: true
    date: '2015-07-30T09:42:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5beta3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/6a6c0b41d2dcf4697ef19bc4082092c3905fe436/1.5/Dockerfile

  - version: 1.5beta2
    majorVersion: '1.5'
    prerelease: true
    date: '2015-07-17T14:38:07'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5beta2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/9a3a1ca455a97585ff74267835bea05006833866/1.5/Dockerfile

  - version: 1.5beta1
    majorVersion: '1.5'
    prerelease: true
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5beta1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/6ea1f29b1fe7e6b0b8eb89493ed5e06bac454654/1.5/Dockerfile

  - version: 1.5.4
    majorVersion: '1.5'
    prerelease: false
    date: '2016-08-12T16:36:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: golang:1.5.4-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5a84ebfbf3c55674dd6f36c66828c2e7461f2f0b/1.5/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.5.4-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7fd2b76513e537343f088da671a51f5b2ea7d4c3/1.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5.4
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/7fd2b76513e537343f088da671a51f5b2ea7d4c3/1.5/Dockerfile

  - version: 1.5.3
    majorVersion: '1.5'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.5.3-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1689df433a45bd787990f2982fb28345ec27f733/1.5/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.5.3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1eab0db63794152b4516dbcb70270eb9dced4cbd/1.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5.3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1eab0db63794152b4516dbcb70270eb9dced4cbd/1.5/Dockerfile

  - version: 1.5.2
    majorVersion: '1.5'
    prerelease: false
    date: '2016-01-04T09:34:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.5.2-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5fc9acac9ae394e055cdc2e80400bf78e360cd2c/1.5/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.5.2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e5ff96b1ab32db028f608f89eacf2b827b85f69e/1.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/e5ff96b1ab32db028f608f89eacf2b827b85f69e/1.5/Dockerfile

  - version: 1.5.1
    majorVersion: '1.5'
    prerelease: false
    date: '2015-11-13T11:54:45'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.2'
        release: 3.2
        weight: 1
        image: alpine:3.2
        imageRepository: golang:1.5.1-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/63a33bf151190592eaf0540dd4b7027a9ca13f9b/1.5/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.5.1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/51d6eacd41fe80d41105142b9ad32f575082970f/1.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/51d6eacd41fe80d41105142b9ad32f575082970f/1.5/Dockerfile

  - version: 1.5.0
    majorVersion: '1.5'
    prerelease: false
    date: '2015-09-02T12:52:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.5.0-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/58111b7243e7fb03e20c93ec8f0946cbbf5e2fec/1.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.5.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/bcc3800fbed7f5116ff27ae82e0d881efd50aa69/1.5/Dockerfile

  - version: 1.4rc2
    majorVersion: '1.4'
    prerelease: true
    date: '2014-12-02T01:39:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.4rc2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ebb35315f1b0a48eb17eb9f17a7bd66132fd8813/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: golang:1.4rc2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/ebb35315f1b0a48eb17eb9f17a7bd66132fd8813/1.4/Dockerfile

  - version: 1.4rc1
    majorVersion: '1.4'
    prerelease: true
    date: '2014-11-26T12:48:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.4rc1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b13bdad8632705cd56f887ffe7320076b1b56754/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: golang:1.4rc1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b13bdad8632705cd56f887ffe7320076b1b56754/1.4/Dockerfile

  - version: 1.4.3
    majorVersion: '1.4'
    prerelease: false
    date: '2016-02-04T12:41:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.4.3-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5fc9acac9ae394e055cdc2e80400bf78e360cd2c/1.4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.4.3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a4f3927494b48c7bdb6ea6edac8f89818853b45b/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.4.3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a4f3927494b48c7bdb6ea6edac8f89818853b45b/1.4/Dockerfile

  - version: 1.4.2
    majorVersion: '1.4'
    prerelease: false
    date: '2015-09-16T22:22:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.4.2-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/51d6eacd41fe80d41105142b9ad32f575082970f/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.4.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/51d6eacd41fe80d41105142b9ad32f575082970f/1.4/Dockerfile

  - version: 1.4.1
    majorVersion: '1.4'
    prerelease: false
    date: '2015-01-26T14:51:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.4.1-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/304244cfe374d3477e746c057a5ec4dcf7a47657/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.4.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/304244cfe374d3477e746c057a5ec4dcf7a47657/1.4/Dockerfile

  - version: 1.4.0
    majorVersion: '1.4'
    prerelease: false
    date: '2014-12-11T14:04:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.4.0-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/dc0571dad14fc6ca163dbab21b88e51b3031b84c/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: golang:1.4.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/dc0571dad14fc6ca163dbab21b88e51b3031b84c/1.4/Dockerfile

  - version: '1.4'
    majorVersion: '1.4'
    prerelease: false
    date: '2016-02-04T12:41:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: golang:1.4-alpine
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/5fc9acac9ae394e055cdc2e80400bf78e360cd2c/1.4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.4-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a4f3927494b48c7bdb6ea6edac8f89818853b45b/1.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.4
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/a4f3927494b48c7bdb6ea6edac8f89818853b45b/1.4/Dockerfile

  - version: 1.3.3
    majorVersion: '1.3'
    prerelease: false
    date: '2015-08-19T11:51:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.3.3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1a422afd7db928a821e97906ed27ed606e2f072a/1.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.3.3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1a422afd7db928a821e97906ed27ed606e2f072a/1.3/Dockerfile

  - version: 1.3.2
    majorVersion: '1.3'
    prerelease: false
    date: '2014-10-01T15:59:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.3.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/83d3f38479896f8fe550300d6fd58134246bf071/1.3.2/Dockerfile

  - version: 1.3.1
    majorVersion: '1.3'
    prerelease: false
    date: '2014-10-01T15:59:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.3.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/435956495be76fd3c756240b7d147f507d36b22b/1.3.1/Dockerfile

  - version: 1.3.0
    majorVersion: '1.3'
    prerelease: false
    date: '2014-10-01T15:59:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.3.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/83d3f38479896f8fe550300d6fd58134246bf071/1.3.0/Dockerfile

  - version: '1.3'
    majorVersion: '1.3'
    prerelease: false
    date: '2015-08-19T11:51:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 4
        image: buildpack-deps:wheezy-scm
        imageRepository: golang:1.3-wheezy
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1a422afd7db928a821e97906ed27ed606e2f072a/1.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 4
        image: buildpack-deps:jessie-scm
        imageRepository: golang:1.3
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/1a422afd7db928a821e97906ed27ed606e2f072a/1.3/Dockerfile

  - version: 1.2.2
    majorVersion: '1.2'
    prerelease: false
    date: '2014-12-02T01:39:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: golang:1.2.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b13bdad8632705cd56f887ffe7320076b1b56754/1.2/Dockerfile

  - version: 1.2.1
    majorVersion: '1.2'
    prerelease: false
    date: '2014-10-01T15:59:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.2.1
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/435956495be76fd3c756240b7d147f507d36b22b/1.2.1/Dockerfile

  - version: 1.2.0
    majorVersion: '1.2'
    prerelease: false
    date: '2014-10-01T15:59:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: golang:1.2.0
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/83d3f38479896f8fe550300d6fd58134246bf071/1.2.0/Dockerfile

  - version: '1.2'
    majorVersion: '1.2'
    prerelease: false
    date: '2014-12-02T01:39:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: golang:1.2
        urlRepository: https://github.com/docker-library/golang
        urlDockerfile: https://raw.githubusercontent.com/docker-library/golang/b13bdad8632705cd56f887ffe7320076b1b56754/1.2/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/haskell.yml", "\"
  - version: 8.6.5
    majorVersion: '8.6'
    prerelease: false
    date: '2019-05-17T18:59:55'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: haskell:8.6.5
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/7fd359b8dab3bf543832eb1ff34e1a46eef262a7/8.6/Dockerfile

  - version: 8.6.3
    majorVersion: '8.6'
    prerelease: false
    date: '2019-01-07T07:42:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: haskell:8.6.3
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/03467e1a14543d83d33833e669249a3c42f7b7c8/8.6/Dockerfile

  - version: 8.6.2
    majorVersion: '8.6'
    prerelease: false
    date: '2018-11-28T23:24:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: haskell:8.6.2
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/5362898713c831feb18b57f106385cac2b5daa1a/8.6/Dockerfile

  - version: 8.4.4
    majorVersion: '8.4'
    prerelease: false
    date: '2019-05-17T18:59:55'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: haskell:8.4.4
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/03467e1a14543d83d33833e669249a3c42f7b7c8/8.4/Dockerfile

  - version: 8.4.3
    majorVersion: '8.4'
    prerelease: false
    date: '2018-06-04T11:01:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: haskell:8.4.3
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/af83447feb6ebeabbc0cbad27adb3895e6262951/8.4/Dockerfile

  - version: 8.2.2
    majorVersion: '8.2'
    prerelease: false
    date: '2018-06-04T11:01:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: haskell:8.2.2
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/af83447feb6ebeabbc0cbad27adb3895e6262951/8.2/Dockerfile

  - version: 8.2.1
    majorVersion: '8.2'
    prerelease: false
    date: '2017-09-18T14:38:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:8.2.1
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/ea501abb24273d6dab3121bb6373f6903f1a3c71/8.2/Dockerfile

  - version: 8.0.2
    majorVersion: '8.0'
    prerelease: false
    date: '2017-02-14T09:55:26'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:8.0.2
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/5f1ae82bd27501322100b915c9ae6cc9f9aea129/8.0/Dockerfile

  - version: 8.0.1
    majorVersion: '8.0'
    prerelease: false
    date: '2017-01-24T14:16:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:8.0.1
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/e0efde5504642864811a7697ab945067bb6a042e/8.0/Dockerfile

  - version: 7.10.3
    majorVersion: '7.10'
    prerelease: false
    date: '2016-01-28T19:35:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:7.10.3
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/a396f0d9b35cabeb60920abd87a8b2612530cb1b/7.10/Dockerfile

  - version: 7.10.2
    majorVersion: '7.10'
    prerelease: false
    date: '2015-06-06T15:30:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:7.10.2
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/da915d2dd59b7a9817606a2bb5d32d1d305bc1da/7.10/Dockerfile

  - version: 7.10.1
    majorVersion: '7.10'
    prerelease: false
    date: '2015-04-07T16:33:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:7.10.1
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/8ebd12bf273855afabc2d270b8c0a7aa233b0ea4/7.10/Dockerfile

  - version: '7.10'
    majorVersion: '7.10'
    prerelease: false
    date: '2016-01-28T19:35:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:7.10
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/a396f0d9b35cabeb60920abd87a8b2612530cb1b/7.10/Dockerfile

  - version: 7.8.4
    majorVersion: '7.8'
    prerelease: false
    date: '2015-06-06T15:30:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:7.8.4
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/da915d2dd59b7a9817606a2bb5d32d1d305bc1da/7.8/Dockerfile

  - version: '7.8'
    majorVersion: '7.8'
    prerelease: false
    date: '2015-06-06T15:30:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: haskell:7.8
        urlRepository: https://github.com/freebroccolo/docker-haskell
        urlDockerfile: https://raw.githubusercontent.com/freebroccolo/docker-haskell/da915d2dd59b7a9817606a2bb5d32d1d305bc1da/7.8/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/julia.yml", "\"
  - version: 1.1.1
    majorVersion: '1.1'
    prerelease: false
    date: '2019-05-17T05:59:09'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.1.1-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/36c40cb93c8ca5c717ab7395a775f5683f176e97/1.1/stretch/Dockerfile

  - version: 1.1.0
    majorVersion: '1.1'
    prerelease: false
    date: '2019-05-07T17:59:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.1.0-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/6e478029a0ccb80d4c86f516fdea3f80cb15dce9/1.1/stretch/Dockerfile

  - version: 1.0.4
    majorVersion: '1.0'
    prerelease: false
    date: '2019-05-17T05:59:09'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.0.4-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/092cb514a9994ee61ae883f53d56ea03c89a3c0c/1.0/stretch/Dockerfile

  - version: 1.0.3
    majorVersion: '1.0'
    prerelease: false
    date: '2019-05-07T17:59:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.0.3-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/60c9e91e86668dfd86f19034ebee211dfe3dd423/1.0/stretch/Dockerfile

  - version: 1.0.2
    majorVersion: '1.0'
    prerelease: false
    date: '2018-11-14T16:29:14'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.0.2-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/467c652ab40064be58ba83ed4448f139592c7525/1.0/stretch/Dockerfile

  - version: 1.0.1
    majorVersion: '1.0'
    prerelease: false
    date: '2018-10-01T16:44:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.0.1-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/bc6c8bde792335ec4b97ae58bbad10e965ecfaed/1.0/stretch/Dockerfile

  - version: 1.0.0
    majorVersion: '1.0'
    prerelease: false
    date: '2018-08-27T14:46:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:1.0.0-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/9e8bb3426385de28cfac6576baef9bf580fe0e33/1.0/stretch/Dockerfile

  - version: 0.7.0
    majorVersion: '0.7'
    prerelease: false
    date: '2018-12-19T16:51:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.7.0-jessie
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/467c652ab40064be58ba83ed4448f139592c7525/0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:0.7.0-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/467c652ab40064be58ba83ed4448f139592c7525/0/stretch/Dockerfile

  - version: 0.6.4
    majorVersion: '0.6'
    prerelease: false
    date: '2018-08-06T12:18:52'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.6.4-jessie
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/4b1b740df34a21fc0edb10770d5991cb3c92d9e8/0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:0.6.4-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/4b1b740df34a21fc0edb10770d5991cb3c92d9e8/0/stretch/Dockerfile

  - version: 0.6.3
    majorVersion: '0.6'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.6.3-jessie
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/3854279e1ffb49d9e34080d476ffdb7c00035455/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:0.6.3-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/3854279e1ffb49d9e34080d476ffdb7c00035455/stretch/Dockerfile

  - version: 0.6.2
    majorVersion: '0.6'
    prerelease: false
    date: '2018-05-14T12:46:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.6.2-jessie
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/3cb2698ed2475db46cc17d5d1cd309626ef87c1c/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: julia:0.6.2-stretch
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/3cb2698ed2475db46cc17d5d1cd309626ef87c1c/stretch/Dockerfile

  - version: 0.6.1
    majorVersion: '0.6'
    prerelease: false
    date: '2017-11-02T15:54:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.6.1
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/06148bd09222645c2996f50094d76aeeb9ed4556/Dockerfile

  - version: 0.6.0
    majorVersion: '0.6'
    prerelease: false
    date: '2017-08-24T16:31:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.6.0
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/4eff23fd0270ed08c727f1ddb10c497559732c22/Dockerfile

  - version: 0.5.2
    majorVersion: '0.5'
    prerelease: false
    date: '2017-05-30T09:19:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.5.2
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/0b6b28b5b0957cc491d406b798ece911a6fa5b26/Dockerfile

  - version: 0.5.1
    majorVersion: '0.5'
    prerelease: false
    date: '2017-03-06T14:42:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.5.1
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/8de8734c2f3547332bc1e8688ba0eff58b3a1a50/Dockerfile

  - version: 0.5.0
    majorVersion: '0.5'
    prerelease: false
    date: '2016-09-27T16:49:23'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.5.0
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/0f29b23863e4ff1c99b13a30e845b66c7468f79b/Dockerfile

  - version: 0.4.6
    majorVersion: '0.4'
    prerelease: false
    date: '2016-06-23T14:01:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.4.6
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/59a01cf8cdb0b0f9cc229aca415755a64226e4ed/Dockerfile

  - version: 0.4.5
    majorVersion: '0.4'
    prerelease: false
    date: '2016-06-09T12:08:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.4.5
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/2bb511d3378dec17ebbf417d5865ede353ba8e57/Dockerfile

  - version: 0.4.3
    majorVersion: '0.4'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.4.3
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/4c64514dc0f1aa0aed906af3a9a135d684c7d49e/Dockerfile

  - version: 0.4.2
    majorVersion: '0.4'
    prerelease: false
    date: '2015-12-08T13:02:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.4.2
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/a408dd5869f54f0adfc6b6950200f6781284d15e/Dockerfile

  - version: 0.4.1
    majorVersion: '0.4'
    prerelease: false
    date: '2015-11-09T13:56:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.4.1
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/52b372536c3dd5d01a7aacdd90a7246c5bf85a3d/Dockerfile

  - version: 0.4.0
    majorVersion: '0.4'
    prerelease: false
    date: '2015-10-14T14:24:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.4.0
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/c40ce9f16118c60bac5ce1db3e06c56d5b983d4a/Dockerfile

  - version: 0.3.11
    majorVersion: '0.3'
    prerelease: false
    date: '2015-07-28T10:04:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3.11
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/951fefea3d24b6d60f5e64447a1ee94f0b809448/Dockerfile

  - version: 0.3.10
    majorVersion: '0.3'
    prerelease: false
    date: '2015-06-26T16:04:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3.10
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/46509c3b9178016189872738ef7fb38946df970c/Dockerfile

  - version: 0.3.9
    majorVersion: '0.3'
    prerelease: false
    date: '2015-06-02T14:53:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3.9
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/d7222c1c8af09b75565ea89fd00658d712823120/Dockerfile

  - version: 0.3.8
    majorVersion: '0.3'
    prerelease: false
    date: '2015-05-22T16:50:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3.8
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/22d68e94ea5e4febf3fc6b2167e9a538e3cad4c1/Dockerfile

  - version: 0.3.7
    majorVersion: '0.3'
    prerelease: false
    date: '2015-04-01T15:16:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3.7
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/a85d92cbc1396ed7ba6007108412bea518271676/Dockerfile

  - version: 0.3.6
    majorVersion: '0.3'
    prerelease: false
    date: '2015-03-09T16:01:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3.6
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/3ebca9477c82374d1123574261b369387772de1b/Dockerfile

  - version: '0.3'
    majorVersion: '0.3'
    prerelease: false
    date: '2015-07-28T10:04:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: julia:0.3
        urlRepository: https://github.com/docker-library/julia
        urlDockerfile: https://raw.githubusercontent.com/docker-library/julia/951fefea3d24b6d60f5e64447a1ee94f0b809448/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/node.yml", "\"
  - version: 12.2.0
    majorVersion: '12.2'
    prerelease: false
    date: '2019-05-08T05:45:57'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:12.2.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8913f934470af3d775a31277e065b9853639e2b2/12/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:12.2.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8913f934470af3d775a31277e065b9853639e2b2/12/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:12.2.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8913f934470af3d775a31277e065b9853639e2b2/12/stretch-slim/Dockerfile

  - version: 12.1.0
    majorVersion: '12.1'
    prerelease: false
    date: '2019-05-01T16:23:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:12.1.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6ef8d23119e8d19d2b0da3d9d4127f64a8fa4338/12/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:12.1.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6ef8d23119e8d19d2b0da3d9d4127f64a8fa4338/12/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:12.1.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6ef8d23119e8d19d2b0da3d9d4127f64a8fa4338/12/stretch-slim/Dockerfile

  - version: 12.0.0
    majorVersion: '12.0'
    prerelease: false
    date: '2019-04-25T09:10:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:12.0.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/29e4ef051ed7a0d55554fc6df53d1be02089e307/12/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:12.0.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/29e4ef051ed7a0d55554fc6df53d1be02089e307/12/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:12.0.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/29e4ef051ed7a0d55554fc6df53d1be02089e307/12/stretch-slim/Dockerfile

  - version: 11.15.0
    majorVersion: '11.15'
    prerelease: false
    date: '2019-05-08T05:45:57'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.15.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e8c9f49af6d18100ecb0093cbea4bae18f1271d9/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.15.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e8c9f49af6d18100ecb0093cbea4bae18f1271d9/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.15.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e8c9f49af6d18100ecb0093cbea4bae18f1271d9/11/stretch-slim/Dockerfile

  - version: 11.14.0
    majorVersion: '11.14'
    prerelease: false
    date: '2019-04-30T04:20:13'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.14.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5a6a5e91999358c5b04fddd6c22a9a4eb0bf3fbf/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.14.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/974b70c72e027365003bc1d6e47c8cf6ec46a54d/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.14.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/974b70c72e027365003bc1d6e47c8cf6ec46a54d/11/stretch-slim/Dockerfile

  - version: 11.13.0
    majorVersion: '11.13'
    prerelease: false
    date: '2019-04-03T21:39:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.13.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed4cf449b40da125d4a5991fc12db20be51e6d4a/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.13.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed4cf449b40da125d4a5991fc12db20be51e6d4a/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.13.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed4cf449b40da125d4a5991fc12db20be51e6d4a/11/stretch-slim/Dockerfile

  - version: 11.12.0
    majorVersion: '11.12'
    prerelease: false
    date: '2019-03-16T08:37:07'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.12.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/716a6ea32b3a797884c95b838b57ace41f83e96a/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.12.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/716a6ea32b3a797884c95b838b57ace41f83e96a/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.12.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/716a6ea32b3a797884c95b838b57ace41f83e96a/11/stretch-slim/Dockerfile

  - version: 11.11.0
    majorVersion: '11.11'
    prerelease: false
    date: '2019-03-07T06:21:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.11.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/687152bceb3cd50fb7c044cc4ca403e5696d2554/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.11.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/687152bceb3cd50fb7c044cc4ca403e5696d2554/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.11.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/687152bceb3cd50fb7c044cc4ca403e5696d2554/11/stretch-slim/Dockerfile

  - version: 11.10.1
    majorVersion: '11.10'
    prerelease: false
    date: '2019-02-28T08:06:30'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.10.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926bddb46b98edf3e1cf75d128afc7cb3b06fb54/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.10.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926bddb46b98edf3e1cf75d128afc7cb3b06fb54/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.10.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926bddb46b98edf3e1cf75d128afc7cb3b06fb54/11/stretch-slim/Dockerfile

  - version: 11.10.0
    majorVersion: '11.10'
    prerelease: false
    date: '2019-02-18T14:31:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:11.10.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7b643da4aeb3d77f1c26c9f6fadd32b04f8d7bc9/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.10.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7b643da4aeb3d77f1c26c9f6fadd32b04f8d7bc9/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.10.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7b643da4aeb3d77f1c26c9f6fadd32b04f8d7bc9/11/stretch-slim/Dockerfile

  - version: 11.9.0
    majorVersion: '11.9'
    prerelease: false
    date: '2019-01-31T08:19:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.9.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/08789f4981b86a38cbd2b614a6ccefa5f4be3a4b/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.9.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/08789f4981b86a38cbd2b614a6ccefa5f4be3a4b/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.9.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/08789f4981b86a38cbd2b614a6ccefa5f4be3a4b/11/stretch-slim/Dockerfile

  - version: 11.8.0
    majorVersion: '11.8'
    prerelease: false
    date: '2019-01-29T21:31:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.8.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f9b80051e434ecfc9e8ae992b93716272aaf3961/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.8.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f9b80051e434ecfc9e8ae992b93716272aaf3961/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.8.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f9b80051e434ecfc9e8ae992b93716272aaf3961/11/stretch-slim/Dockerfile

  - version: 11.7.0
    majorVersion: '11.7'
    prerelease: false
    date: '2019-01-18T15:47:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.7.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1656ace58dc5c913d8780e27a6c7478bbf1cb72f/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.7.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1656ace58dc5c913d8780e27a6c7478bbf1cb72f/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.7.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1656ace58dc5c913d8780e27a6c7478bbf1cb72f/11/stretch-slim/Dockerfile

  - version: 11.6.0
    majorVersion: '11.6'
    prerelease: false
    date: '2018-12-27T01:50:54'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.6.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e9d9c1ce0f4e87b11d7b0ecff529b715038782ae/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.6.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e9d9c1ce0f4e87b11d7b0ecff529b715038782ae/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.6.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e9d9c1ce0f4e87b11d7b0ecff529b715038782ae/11/stretch-slim/Dockerfile

  - version: 11.5.0
    majorVersion: '11.5'
    prerelease: false
    date: '2018-12-19T04:23:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.5.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/33feb454563058f4d543149956dee373c7b938e4/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.5.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/33feb454563058f4d543149956dee373c7b938e4/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.5.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/33feb454563058f4d543149956dee373c7b938e4/11/stretch-slim/Dockerfile

  - version: 11.4.0
    majorVersion: '11.4'
    prerelease: false
    date: '2018-12-19T04:22:34'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.4.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/438f5dead5a7432dd72fe8946f4faf3942d89a21/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.4.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/438f5dead5a7432dd72fe8946f4faf3942d89a21/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.4.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/438f5dead5a7432dd72fe8946f4faf3942d89a21/11/stretch-slim/Dockerfile

  - version: 11.3.0
    majorVersion: '11.3'
    prerelease: false
    date: '2018-12-04T00:11:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.3.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.3.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.3.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8c0a9f2c144904631cf783bdd57b4a19300e6b1f/11/stretch-slim/Dockerfile

  - version: 11.2.0
    majorVersion: '11.2'
    prerelease: false
    date: '2018-11-25T20:06:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.2.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/77c2d0850a520de5e202757f54e5bc9b142f9adf/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.2.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/11/slim/Dockerfile

  - version: 11.1.0
    majorVersion: '11.1'
    prerelease: false
    date: '2018-11-02T21:56:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.1.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/120b465c249cf08d7939a3a0c07fec897cfcf91d/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.1.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/120b465c249cf08d7939a3a0c07fec897cfcf91d/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/120b465c249cf08d7939a3a0c07fec897cfcf91d/11/slim/Dockerfile

  - version: 11.0.0
    majorVersion: '11.0'
    prerelease: false
    date: '2018-11-02T03:58:12'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:11.0.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e007863a848ca34221bb24549293567e2336445b/11/alpine/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:11.0.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e007863a848ca34221bb24549293567e2336445b/11/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:11.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/daf910e1241580d468375380649239a87dd65e74/11/slim/Dockerfile

  - version: 10.15.3
    majorVersion: '10.15'
    prerelease: false
    date: '2019-05-08T05:45:57'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:10.15.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5a6a5e91999358c5b04fddd6c22a9a4eb0bf3fbf/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.15.3-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/170ed2092d4925971f9cd3ad5dfc416e820f90fd/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.15.3-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/170ed2092d4925971f9cd3ad5dfc416e820f90fd/10/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.15.3-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/170ed2092d4925971f9cd3ad5dfc416e820f90fd/10/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:10.15.3-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/170ed2092d4925971f9cd3ad5dfc416e820f90fd/10/stretch-slim/Dockerfile

  - version: 10.15.2
    majorVersion: '10.15'
    prerelease: false
    date: '2019-02-28T08:06:30'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.15.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d01380b9fa115e26df9430f7c6c591a1643f798/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.15.2-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d01380b9fa115e26df9430f7c6c591a1643f798/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.15.2-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d01380b9fa115e26df9430f7c6c591a1643f798/10/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.15.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d01380b9fa115e26df9430f7c6c591a1643f798/10/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:10.15.2-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d01380b9fa115e26df9430f7c6c591a1643f798/10/stretch-slim/Dockerfile

  - version: 10.15.1
    majorVersion: '10.15'
    prerelease: false
    date: '2019-02-18T14:31:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.15.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90043cdde5057865b94fec447ce193fb46b69e18/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.15.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90043cdde5057865b94fec447ce193fb46b69e18/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.15.1-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90043cdde5057865b94fec447ce193fb46b69e18/10/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.15.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90043cdde5057865b94fec447ce193fb46b69e18/10/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:10.15.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90043cdde5057865b94fec447ce193fb46b69e18/10/stretch-slim/Dockerfile

  - version: 10.15.0
    majorVersion: '10.15'
    prerelease: false
    date: '2019-01-25T04:07:07'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.15.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f8c22aeb318ec3df876f8271b9b8a86005f0f53d/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.15.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f8c22aeb318ec3df876f8271b9b8a86005f0f53d/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.15.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f8c22aeb318ec3df876f8271b9b8a86005f0f53d/10/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.15.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f8c22aeb318ec3df876f8271b9b8a86005f0f53d/10/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:10.15.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f8c22aeb318ec3df876f8271b9b8a86005f0f53d/10/stretch-slim/Dockerfile

  - version: 10.14.2
    majorVersion: '10.14'
    prerelease: false
    date: '2018-12-19T04:23:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.14.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e539e6925a524bf4fda47ea33ed33d0d4fb0e20/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.14.2-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e539e6925a524bf4fda47ea33ed33d0d4fb0e20/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.14.2-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e539e6925a524bf4fda47ea33ed33d0d4fb0e20/10/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.14.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e539e6925a524bf4fda47ea33ed33d0d4fb0e20/10/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:10.14.2-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e539e6925a524bf4fda47ea33ed33d0d4fb0e20/10/stretch-slim/Dockerfile

  - version: 10.14.1
    majorVersion: '10.14'
    prerelease: false
    date: '2018-12-08T03:21:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.14.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1f2520c7a5f29dc5896edc3816357c0267cb931/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.14.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1f2520c7a5f29dc5896edc3816357c0267cb931/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.14.1-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1f2520c7a5f29dc5896edc3816357c0267cb931/10/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.14.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1f2520c7a5f29dc5896edc3816357c0267cb931/10/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:10.14.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1f2520c7a5f29dc5896edc3816357c0267cb931/10/stretch-slim/Dockerfile

  - version: 10.14.0
    majorVersion: '10.14'
    prerelease: false
    date: '2018-11-28T06:59:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.14.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed3e8825b01649d43188e1f606243396a0b995de/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.14.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed3e8825b01649d43188e1f606243396a0b995de/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.14.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed3e8825b01649d43188e1f606243396a0b995de/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.14.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ed3e8825b01649d43188e1f606243396a0b995de/10/stretch/Dockerfile

  - version: 10.13.0
    majorVersion: '10.13'
    prerelease: false
    date: '2018-11-25T20:06:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.13.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/77c2d0850a520de5e202757f54e5bc9b142f9adf/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.13.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.13.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.13.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/10/stretch/Dockerfile

  - version: 10.12.0
    majorVersion: '10.12'
    prerelease: false
    date: '2018-11-01T11:45:45'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.12.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/45fa3ebe94598758b9c9e4a382236fc7e879e2e6/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.12.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/45fa3ebe94598758b9c9e4a382236fc7e879e2e6/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.12.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/45fa3ebe94598758b9c9e4a382236fc7e879e2e6/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.12.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/45fa3ebe94598758b9c9e4a382236fc7e879e2e6/10/stretch/Dockerfile

  - version: 10.11.0
    majorVersion: '10.11'
    prerelease: false
    date: '2018-09-20T17:05:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.11.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/11d4e7fb83a52801e177a08c12eeacaf41498a54/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.11.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/11d4e7fb83a52801e177a08c12eeacaf41498a54/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.11.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/11d4e7fb83a52801e177a08c12eeacaf41498a54/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.11.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/11d4e7fb83a52801e177a08c12eeacaf41498a54/10/stretch/Dockerfile

  - version: 10.10.0
    majorVersion: '10.10'
    prerelease: false
    date: '2018-09-11T15:34:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.10.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4aab5a6c7663f6823fdd2277fd2d47dce223011/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.10.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4aab5a6c7663f6823fdd2277fd2d47dce223011/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.10.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4aab5a6c7663f6823fdd2277fd2d47dce223011/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.10.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4aab5a6c7663f6823fdd2277fd2d47dce223011/10/stretch/Dockerfile

  - version: 10.9.0
    majorVersion: '10.9'
    prerelease: false
    date: '2018-08-16T15:16:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.9.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.9.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.9.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/10/stretch/Dockerfile

  - version: 10.8.0
    majorVersion: '10.8'
    prerelease: false
    date: '2018-08-02T13:45:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.8.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/387d4d9182566d0e10236d32f60d7a5b23196653/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.8.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/387d4d9182566d0e10236d32f60d7a5b23196653/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/387d4d9182566d0e10236d32f60d7a5b23196653/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.8.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/387d4d9182566d0e10236d32f60d7a5b23196653/10/stretch/Dockerfile

  - version: 10.7.0
    majorVersion: '10.7'
    prerelease: false
    date: '2018-07-21T09:16:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:10.7.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/58dbead97e921ff0497863d2cbbcc714f97e1d93/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.7.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/58dbead97e921ff0497863d2cbbcc714f97e1d93/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/58dbead97e921ff0497863d2cbbcc714f97e1d93/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.7.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/58dbead97e921ff0497863d2cbbcc714f97e1d93/10/stretch/Dockerfile

  - version: 10.6.0
    majorVersion: '10.6'
    prerelease: false
    date: '2018-07-05T03:25:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.6.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e179a85703a6688a26486729b4466a92e818a84/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.6.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e179a85703a6688a26486729b4466a92e818a84/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e179a85703a6688a26486729b4466a92e818a84/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.6.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e179a85703a6688a26486729b4466a92e818a84/10/stretch/Dockerfile

  - version: 10.5.0
    majorVersion: '10.5'
    prerelease: false
    date: '2018-06-20T22:11:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.5.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/65ba769f403f8c188d9be0b1ffb8a9cfc31bf703/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.5.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/65ba769f403f8c188d9be0b1ffb8a9cfc31bf703/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/65ba769f403f8c188d9be0b1ffb8a9cfc31bf703/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.5.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/65ba769f403f8c188d9be0b1ffb8a9cfc31bf703/10/stretch/Dockerfile

  - version: 10.4.1
    majorVersion: '10.4'
    prerelease: false
    date: '2018-06-12T20:40:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.4.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.4.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.4.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.4.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/10/stretch/Dockerfile

  - version: 10.4.0
    majorVersion: '10.4'
    prerelease: false
    date: '2018-06-08T16:52:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.4.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.4.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.4.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/10/stretch/Dockerfile

  - version: 10.3.0
    majorVersion: '10.3'
    prerelease: false
    date: '2018-05-29T19:24:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.3.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbae51a013b0ebef90afcd6d2ea2ac49697d3823/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.3.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbae51a013b0ebef90afcd6d2ea2ac49697d3823/10/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbae51a013b0ebef90afcd6d2ea2ac49697d3823/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.3.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbae51a013b0ebef90afcd6d2ea2ac49697d3823/10/stretch/Dockerfile

  - version: 10.2.1
    majorVersion: '10.2'
    prerelease: false
    date: '2018-05-24T22:11:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.2.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bd74777e9e5c89685146d4963b6bb78970dd2133/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.2.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bd74777e9e5c89685146d4963b6bb78970dd2133/10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.2.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bd74777e9e5c89685146d4963b6bb78970dd2133/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.2.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bd74777e9e5c89685146d4963b6bb78970dd2133/10/stretch/Dockerfile

  - version: 10.2.0
    majorVersion: '10.2'
    prerelease: false
    date: '2018-05-23T22:47:07'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.2.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/772f98bd6e293078722cbdef5dea3b6b6fa69a3f/10/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/772f98bd6e293078722cbdef5dea3b6b6fa69a3f/10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:10.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/772f98bd6e293078722cbdef5dea3b6b6fa69a3f/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.2.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/772f98bd6e293078722cbdef5dea3b6b6fa69a3f/10/stretch/Dockerfile

  - version: 10.1.0
    majorVersion: '10.1'
    prerelease: false
    date: '2018-05-16T01:23:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.1.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2ecc9e8579f519ae3d267b5b497b8c04d6c7040d/10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:10.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2ecc9e8579f519ae3d267b5b497b8c04d6c7040d/10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/773be66016fd1ff4a860529a80af61277f75c7e2/10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:10.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2ecc9e8579f519ae3d267b5b497b8c04d6c7040d/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.1.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2ecc9e8579f519ae3d267b5b497b8c04d6c7040d/10/stretch/Dockerfile

  - version: 10.0.0
    majorVersion: '10.0'
    prerelease: false
    date: '2018-05-01T06:33:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: node:10.0.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/80814e984e9faa5e9195f9a61632e1898f6633d9/10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:10.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/80814e984e9faa5e9195f9a61632e1898f6633d9/10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:10.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/80814e984e9faa5e9195f9a61632e1898f6633d9/10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:10.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/80814e984e9faa5e9195f9a61632e1898f6633d9/10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:10.0.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/80814e984e9faa5e9195f9a61632e1898f6633d9/10/stretch/Dockerfile

  - version: 9.11.2
    majorVersion: '9.11'
    prerelease: false
    date: '2018-07-05T03:25:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.11.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/9/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.11.2-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/9/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:9.11.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.11.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/9/stretch/Dockerfile

  - version: 9.11.1
    majorVersion: '9.11'
    prerelease: false
    date: '2018-06-08T16:52:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.11.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.11.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9023f588717d236a92d91a8483ff0582484c22d1/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.11.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/9/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:9.11.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.11.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/9/stretch/Dockerfile

  - version: 9.10.1
    majorVersion: '9.10'
    prerelease: false
    date: '2018-03-30T13:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.10.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d5badac9d19e01d12d446a556c344aba66ed6b96/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.10.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d5badac9d19e01d12d446a556c344aba66ed6b96/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.10.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d5badac9d19e01d12d446a556c344aba66ed6b96/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.10.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d5badac9d19e01d12d446a556c344aba66ed6b96/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.10.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d5badac9d19e01d12d446a556c344aba66ed6b96/9/stretch/Dockerfile

  - version: 9.10.0
    majorVersion: '9.10'
    prerelease: false
    date: '2018-03-29T01:27:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.10.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab66de01f88284c5226ebb963ac70f038f97fab9/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.10.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab66de01f88284c5226ebb963ac70f038f97fab9/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.10.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab66de01f88284c5226ebb963ac70f038f97fab9/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.10.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab66de01f88284c5226ebb963ac70f038f97fab9/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.10.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab66de01f88284c5226ebb963ac70f038f97fab9/9/stretch/Dockerfile

  - version: 9.9.0
    majorVersion: '9.9'
    prerelease: false
    date: '2018-03-22T03:05:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.9.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a79c59b7b3e81c1fedb419531fce01f1a4726a39/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.9.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a79c59b7b3e81c1fedb419531fce01f1a4726a39/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.9.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a79c59b7b3e81c1fedb419531fce01f1a4726a39/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a79c59b7b3e81c1fedb419531fce01f1a4726a39/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.9.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a79c59b7b3e81c1fedb419531fce01f1a4726a39/9/stretch/Dockerfile

  - version: 9.8.0
    majorVersion: '9.8'
    prerelease: false
    date: '2018-03-16T16:42:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.8.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.8.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.8.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.8.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/9/stretch/Dockerfile

  - version: 9.7.1
    majorVersion: '9.7'
    prerelease: false
    date: '2018-03-07T13:48:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.7.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8306bec7750d0574217e807957096186dcb9f12f/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.7.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8306bec7750d0574217e807957096186dcb9f12f/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.7.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8306bec7750d0574217e807957096186dcb9f12f/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.7.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8306bec7750d0574217e807957096186dcb9f12f/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.7.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8306bec7750d0574217e807957096186dcb9f12f/9/stretch/Dockerfile

  - version: 9.7.0
    majorVersion: '9.7'
    prerelease: false
    date: '2018-03-02T06:24:58'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.7.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d7fb330d4c838b7be25e2906a92eee3b28f54a3/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.7.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d7fb330d4c838b7be25e2906a92eee3b28f54a3/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.7.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d7fb330d4c838b7be25e2906a92eee3b28f54a3/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d7fb330d4c838b7be25e2906a92eee3b28f54a3/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.7.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d7fb330d4c838b7be25e2906a92eee3b28f54a3/9/stretch/Dockerfile

  - version: 9.6.1
    majorVersion: '9.6'
    prerelease: false
    date: '2018-02-23T17:38:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.6.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cd2bb38947e51a60df45b71f8637852caffb1c1d/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.6.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cd2bb38947e51a60df45b71f8637852caffb1c1d/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.6.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cd2bb38947e51a60df45b71f8637852caffb1c1d/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.6.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cd2bb38947e51a60df45b71f8637852caffb1c1d/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.6.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cd2bb38947e51a60df45b71f8637852caffb1c1d/9/stretch/Dockerfile

  - version: 9.6.0
    majorVersion: '9.6'
    prerelease: false
    date: '2018-02-23T02:38:16'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.6.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/97ce772b3a2c62ab66f8ef3f069440a81413d7cf/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/97ce772b3a2c62ab66f8ef3f069440a81413d7cf/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/97ce772b3a2c62ab66f8ef3f069440a81413d7cf/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/97ce772b3a2c62ab66f8ef3f069440a81413d7cf/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.6.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/97ce772b3a2c62ab66f8ef3f069440a81413d7cf/9/stretch/Dockerfile

  - version: 9.5.0
    majorVersion: '9.5'
    prerelease: false
    date: '2018-02-23T02:37:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.5.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.5.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/9/stretch/Dockerfile

  - version: 9.4.0
    majorVersion: '9.4'
    prerelease: false
    date: '2018-01-11T04:15:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.4.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/df8782dfddf8c70663f0a7d19942120b1d6977a5/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/df8782dfddf8c70663f0a7d19942120b1d6977a5/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/df8782dfddf8c70663f0a7d19942120b1d6977a5/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/df8782dfddf8c70663f0a7d19942120b1d6977a5/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.4.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/df8782dfddf8c70663f0a7d19942120b1d6977a5/9/stretch/Dockerfile

  - version: 9.3.0
    majorVersion: '9.3'
    prerelease: false
    date: '2018-01-03T10:02:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.3.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a7e88f1dd2102689180f485c51133212f45fa064/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.3.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a7e88f1dd2102689180f485c51133212f45fa064/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.3.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a7e88f1dd2102689180f485c51133212f45fa064/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a7e88f1dd2102689180f485c51133212f45fa064/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.3.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a7e88f1dd2102689180f485c51133212f45fa064/9/stretch/Dockerfile

  - version: 9.2.1
    majorVersion: '9.2'
    prerelease: false
    date: '2017-12-08T20:13:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.2.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3779ff3b516feb666742cc391f5a36de2ed6bf4d/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.2.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3779ff3b516feb666742cc391f5a36de2ed6bf4d/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.2.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3779ff3b516feb666742cc391f5a36de2ed6bf4d/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.2.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3779ff3b516feb666742cc391f5a36de2ed6bf4d/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.2.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3779ff3b516feb666742cc391f5a36de2ed6bf4d/9/stretch/Dockerfile

  - version: 9.2.0
    majorVersion: '9.2'
    prerelease: false
    date: '2017-12-06T08:54:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.2.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c75cc560e2642755c6fbb2a53b8716063c0b3806/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.2.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c75cc560e2642755c6fbb2a53b8716063c0b3806/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c75cc560e2642755c6fbb2a53b8716063c0b3806/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c75cc560e2642755c6fbb2a53b8716063c0b3806/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.2.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c75cc560e2642755c6fbb2a53b8716063c0b3806/9/stretch/Dockerfile

  - version: 9.1.0
    majorVersion: '9.1'
    prerelease: false
    date: '2017-11-15T13:53:54'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.1.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.1.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/9/stretch/Dockerfile

  - version: 9.0.0
    majorVersion: '9.0'
    prerelease: false
    date: '2017-11-05T16:41:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:9.0.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/092306f6d035d53d7f087a1a671915aabc946c6f/9.0/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:9.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/092306f6d035d53d7f087a1a671915aabc946c6f/9.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:9.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/9.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:9.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/9.0/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:9.0.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/9.0/stretch/Dockerfile

  - version: 8.16.0
    majorVersion: '8.16'
    prerelease: false
    date: '2019-05-08T05:45:57'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:8.16.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8dbfa5c7cac9dca9145c6f429cd2c4f11176707/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.16.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8dbfa5c7cac9dca9145c6f429cd2c4f11176707/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.16.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8dbfa5c7cac9dca9145c6f429cd2c4f11176707/8/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.16.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8dbfa5c7cac9dca9145c6f429cd2c4f11176707/8/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:8.16.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8dbfa5c7cac9dca9145c6f429cd2c4f11176707/8/stretch-slim/Dockerfile

  - version: 8.15.1
    majorVersion: '8.15'
    prerelease: false
    date: '2019-04-11T19:40:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:8.15.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/de76fb48b532d6be012098dc3538bd15329a27d0/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.15.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/de76fb48b532d6be012098dc3538bd15329a27d0/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.15.1-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/de76fb48b532d6be012098dc3538bd15329a27d0/8/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.15.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/de76fb48b532d6be012098dc3538bd15329a27d0/8/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:8.15.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/de76fb48b532d6be012098dc3538bd15329a27d0/8/stretch-slim/Dockerfile

  - version: 8.15.0
    majorVersion: '8.15'
    prerelease: false
    date: '2019-02-18T14:31:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:8.15.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/86b9618674b01fc5549f83696a90d5bc21f38af0/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.15.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/86b9618674b01fc5549f83696a90d5bc21f38af0/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.15.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/86b9618674b01fc5549f83696a90d5bc21f38af0/8/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.15.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/86b9618674b01fc5549f83696a90d5bc21f38af0/8/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:8.15.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/86b9618674b01fc5549f83696a90d5bc21f38af0/8/stretch-slim/Dockerfile

  - version: 8.14.1
    majorVersion: '8.14'
    prerelease: false
    date: '2018-12-19T04:23:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:8.14.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d595cd0d4e0be708a48f0fee63dd1e29dff3b67/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.14.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d595cd0d4e0be708a48f0fee63dd1e29dff3b67/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.14.1-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d595cd0d4e0be708a48f0fee63dd1e29dff3b67/8/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.14.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6d595cd0d4e0be708a48f0fee63dd1e29dff3b67/8/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:8.14.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/594f25e585bfcebaa150e4650d3de5cbd51a1e55/8/stretch-slim/Dockerfile

  - version: 8.14.0
    majorVersion: '8.14'
    prerelease: false
    date: '2018-12-12T14:17:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:8.14.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.14.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.14.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8c0a9f2c144904631cf783bdd57b4a19300e6b1f/8/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.14.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/8/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:8.14.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8c0a9f2c144904631cf783bdd57b4a19300e6b1f/8/stretch-slim/Dockerfile

  - version: 8.13.0
    majorVersion: '8.13'
    prerelease: false
    date: '2018-11-25T20:06:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:8.13.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/77c2d0850a520de5e202757f54e5bc9b142f9adf/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.13.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0ceefee0745a078709c60d92e4229f5eb6a3df42/8/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.13.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0ceefee0745a078709c60d92e4229f5eb6a3df42/8/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:8.13.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0ceefee0745a078709c60d92e4229f5eb6a3df42/8/slim/Dockerfile

  - version: 8.12.0
    majorVersion: '8.12'
    prerelease: false
    date: '2018-11-20T04:10:45'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:8.12.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/526c6e618300bdda0da4b3159df682cae83e14aa/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.12.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/526c6e618300bdda0da4b3159df682cae83e14aa/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.12.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/526c6e618300bdda0da4b3159df682cae83e14aa/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.12.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/526c6e618300bdda0da4b3159df682cae83e14aa/8/stretch/Dockerfile

  - version: 8.11.4
    majorVersion: '8.11'
    prerelease: false
    date: '2018-09-07T11:44:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.11.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.11.4-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.11.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.11.4-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/72dd945d29dee5afa73956ebc971bf3a472442f7/8/stretch/Dockerfile

  - version: 8.11.3
    majorVersion: '8.11'
    prerelease: false
    date: '2018-08-02T13:45:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.11.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.11.3-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.11.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.11.3-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/8/stretch/Dockerfile

  - version: 8.11.2
    majorVersion: '8.11'
    prerelease: false
    date: '2018-06-08T16:52:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.11.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/8/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.11.2-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/8/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:8.11.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.11.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/8/stretch/Dockerfile

  - version: 8.11.1
    majorVersion: '8.11'
    prerelease: false
    date: '2018-05-11T11:32:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.11.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3ca6573b5c179148b446107386ae96ac6204ad3/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.11.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3ca6573b5c179148b446107386ae96ac6204ad3/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.11.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/773be66016fd1ff4a860529a80af61277f75c7e2/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.11.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3ca6573b5c179148b446107386ae96ac6204ad3/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.11.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3ca6573b5c179148b446107386ae96ac6204ad3/8/stretch/Dockerfile

  - version: 8.11.0
    majorVersion: '8.11'
    prerelease: false
    date: '2018-03-29T01:27:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.11.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2b11af24b4bf75cc051ce2fc21e796e7e9425fd0/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.11.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2b11af24b4bf75cc051ce2fc21e796e7e9425fd0/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.11.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2b11af24b4bf75cc051ce2fc21e796e7e9425fd0/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.11.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2b11af24b4bf75cc051ce2fc21e796e7e9425fd0/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.11.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2b11af24b4bf75cc051ce2fc21e796e7e9425fd0/8/stretch/Dockerfile

  - version: 8.10.0
    majorVersion: '8.10'
    prerelease: false
    date: '2018-03-22T03:05:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.10.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.10.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.10.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.10.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.10.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/8/stretch/Dockerfile

  - version: 8.9.4
    majorVersion: '8.9'
    prerelease: false
    date: '2018-03-02T18:59:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.9.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.9.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.9.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.9.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.9.4-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/8/stretch/Dockerfile

  - version: 8.9.3
    majorVersion: '8.9'
    prerelease: false
    date: '2017-12-13T12:58:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.9.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.9.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.9.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.9.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.9.3-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/stretch/Dockerfile

  - version: 8.9.2
    majorVersion: '8.9'
    prerelease: false
    date: '2017-12-06T08:54:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.9.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/95506b2a681ca3d0b1df168a85f12b0ee7d27e5f/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.9.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/95506b2a681ca3d0b1df168a85f12b0ee7d27e5f/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.9.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/95506b2a681ca3d0b1df168a85f12b0ee7d27e5f/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.9.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/95506b2a681ca3d0b1df168a85f12b0ee7d27e5f/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.9.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/95506b2a681ca3d0b1df168a85f12b0ee7d27e5f/8/stretch/Dockerfile

  - version: 8.9.1
    majorVersion: '8.9'
    prerelease: false
    date: '2017-12-06T00:35:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.9.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.9.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.9.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.9.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.9.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/8/stretch/Dockerfile

  - version: 8.9.0
    majorVersion: '8.9'
    prerelease: false
    date: '2017-11-05T16:41:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.9.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/39a5c8a3be7fff2ddc67a2e72919d0a3841b235f/8.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.9.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/39a5c8a3be7fff2ddc67a2e72919d0a3841b235f/8.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.9.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/8.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/8.9/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.9.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/8.9/stretch/Dockerfile

  - version: 8.8.1
    majorVersion: '8.8'
    prerelease: false
    date: '2017-10-26T10:37:12'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.8.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9eedeaba3b58f15b9ad2eb8035d48c502e868be6/8.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.8.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9eedeaba3b58f15b9ad2eb8035d48c502e868be6/8.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.8.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9eedeaba3b58f15b9ad2eb8035d48c502e868be6/8.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.8.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9eedeaba3b58f15b9ad2eb8035d48c502e868be6/8.8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.8.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9eedeaba3b58f15b9ad2eb8035d48c502e868be6/8.8/stretch/Dockerfile

  - version: 8.8.0
    majorVersion: '8.8'
    prerelease: false
    date: '2017-10-25T10:44:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.8.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7701eea6fe125530894b3e83f1e9d385e9ee509f/8.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.8.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7701eea6fe125530894b3e83f1e9d385e9ee509f/8.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.8.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7701eea6fe125530894b3e83f1e9d385e9ee509f/8.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7701eea6fe125530894b3e83f1e9d385e9ee509f/8.8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.8.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7701eea6fe125530894b3e83f1e9d385e9ee509f/8.8/stretch/Dockerfile

  - version: 8.7.0
    majorVersion: '8.7'
    prerelease: false
    date: '2017-10-12T01:06:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.7.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/15d780e932fc8cd4a145a36cff405610c8c71b0c/8.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.7.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/15d780e932fc8cd4a145a36cff405610c8c71b0c/8.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.7.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/15d780e932fc8cd4a145a36cff405610c8c71b0c/8.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/15d780e932fc8cd4a145a36cff405610c8c71b0c/8.7/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.7.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/15d780e932fc8cd4a145a36cff405610c8c71b0c/8.7/stretch/Dockerfile

  - version: 8.6.0
    majorVersion: '8.6'
    prerelease: false
    date: '2017-10-04T08:02:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.6.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c37d5e87fa6d46c0e387f73161b056bbf90b83aa/8.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c37d5e87fa6d46c0e387f73161b056bbf90b83aa/8.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c37d5e87fa6d46c0e387f73161b056bbf90b83aa/8.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c37d5e87fa6d46c0e387f73161b056bbf90b83aa/8.6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.6.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c37d5e87fa6d46c0e387f73161b056bbf90b83aa/8.6/stretch/Dockerfile

  - version: 8.5.0
    majorVersion: '8.5'
    prerelease: false
    date: '2017-09-14T14:13:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.5.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b1d4ff57bc3347818a0977b772d44f8f0753868a/8.5/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b1d4ff57bc3347818a0977b772d44f8f0753868a/8.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b1d4ff57bc3347818a0977b772d44f8f0753868a/8.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b1d4ff57bc3347818a0977b772d44f8f0753868a/8.5/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.5.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b1d4ff57bc3347818a0977b772d44f8f0753868a/8.5/stretch/Dockerfile

  - version: 8.4.0
    majorVersion: '8.4'
    prerelease: false
    date: '2017-09-06T07:56:50'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.4.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c044d61e6d02756bb8ed1557b2f0c7a0d7fead6f/8.4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c044d61e6d02756bb8ed1557b2f0c7a0d7fead6f/8.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/8.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/8.4/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.4.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/8.4/stretch/Dockerfile

  - version: 8.3.0
    majorVersion: '8.3'
    prerelease: false
    date: '2017-08-15T15:47:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.3.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cc495dbadbd5eb80978faafe4b43c35bace6c2c0/8.3/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.3.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cc495dbadbd5eb80978faafe4b43c35bace6c2c0/8.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.3.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9312dc99801f8da64f8c0fc970dc4b6083fa71f1/8.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9312dc99801f8da64f8c0fc970dc4b6083fa71f1/8.3/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.3.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/35dbf01b344f08903574c39ce69866e2e7cb11af/8.3/stretch/Dockerfile

  - version: 8.2.1
    majorVersion: '8.2'
    prerelease: false
    date: '2017-08-09T19:23:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.2.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f547c4c7281027d5d90f4665815140126e1f70d5/8.2/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.2.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/8.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.2.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9b863beddf7dee9b8a6eba0dd8334b1d7980f958/8.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.2.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9b863beddf7dee9b8a6eba0dd8334b1d7980f958/8.2/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:8.2.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9b863beddf7dee9b8a6eba0dd8334b1d7980f958/8.2/stretch/Dockerfile

  - version: 8.2.0
    majorVersion: '8.2'
    prerelease: false
    date: '2017-07-20T04:18:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.2.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4f2354e558a0cd93ae53278f83f5f0a35af23be0/8.2/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.2.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4f2354e558a0cd93ae53278f83f5f0a35af23be0/8.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4f2354e558a0cd93ae53278f83f5f0a35af23be0/8.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4f2354e558a0cd93ae53278f83f5f0a35af23be0/8.2/slim/Dockerfile

  - version: 8.1.4
    majorVersion: '8.1'
    prerelease: false
    date: '2017-07-11T23:36:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.1.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5e2d0fab5b14773e0fdc460c0b96d0f93a80ba2/8.1/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.1.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5e2d0fab5b14773e0fdc460c0b96d0f93a80ba2/8.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.1.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5e2d0fab5b14773e0fdc460c0b96d0f93a80ba2/8.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.1.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5e2d0fab5b14773e0fdc460c0b96d0f93a80ba2/8.1/slim/Dockerfile

  - version: 8.1.3
    majorVersion: '8.1'
    prerelease: false
    date: '2017-07-04T16:30:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.1.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f131cc81c04968f1a60092c5efef54ea276d8b20/8.1/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.1.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f131cc81c04968f1a60092c5efef54ea276d8b20/8.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.1.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f131cc81c04968f1a60092c5efef54ea276d8b20/8.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.1.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f131cc81c04968f1a60092c5efef54ea276d8b20/8.1/slim/Dockerfile

  - version: 8.1.2
    majorVersion: '8.1'
    prerelease: false
    date: '2017-06-15T18:14:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.1.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.1.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.1.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.1.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/slim/Dockerfile

  - version: 8.1.1
    majorVersion: '8.1'
    prerelease: false
    date: '2017-06-14T14:18:07'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.1.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31cfb8b96b69351b3552592dd1e2d62e73a5c5b9/8.1/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.1.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31cfb8b96b69351b3552592dd1e2d62e73a5c5b9/8.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.1.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31cfb8b96b69351b3552592dd1e2d62e73a5c5b9/8.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.1.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31cfb8b96b69351b3552592dd1e2d62e73a5c5b9/8.1/slim/Dockerfile

  - version: 8.1.0
    majorVersion: '8.1'
    prerelease: false
    date: '2017-06-09T15:35:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.1.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8eef541ef29ae81f53f0fdd177ec20bbead3ed2/8.1/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8eef541ef29ae81f53f0fdd177ec20bbead3ed2/8.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8eef541ef29ae81f53f0fdd177ec20bbead3ed2/8.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a8eef541ef29ae81f53f0fdd177ec20bbead3ed2/8.1/slim/Dockerfile

  - version: 8.0.0
    majorVersion: '8.0'
    prerelease: false
    date: '2017-06-08T01:44:34'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: node:8.0.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/09e42c172ffd6f8631fb1cb7a0785fd890c0f11a/8.0/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:8.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/09e42c172ffd6f8631fb1cb7a0785fd890c0f11a/8.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:8.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0a3a6dbbef745e908dbf83ca38e0fd06f869e061/8.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:8.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/09e42c172ffd6f8631fb1cb7a0785fd890c0f11a/8.0/slim/Dockerfile

  - version: 7.10.1
    majorVersion: '7.10'
    prerelease: false
    date: '2017-08-18T21:22:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.10.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0aadad9c44ff26afc81469d77df9b948be47c312/7.10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.10.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/7.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.10.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/7.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.10.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/7.10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:7.10.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/7.10/stretch/Dockerfile

  - version: 7.10.0
    majorVersion: '7.10'
    prerelease: false
    date: '2017-05-13T14:23:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.10.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/581eebd097343c9f1c1ceb5260cd2ec770410e29/7.10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.10.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/581eebd097343c9f1c1ceb5260cd2ec770410e29/7.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.10.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/581eebd097343c9f1c1ceb5260cd2ec770410e29/7.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.10.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/581eebd097343c9f1c1ceb5260cd2ec770410e29/7.10/slim/Dockerfile

  - version: 7.9.0
    majorVersion: '7.9'
    prerelease: false
    date: '2017-05-03T03:57:06'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.9.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b328087a2e63a327ab421a754559fb61864d4345/7.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.9.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b328087a2e63a327ab421a754559fb61864d4345/7.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.9.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b328087a2e63a327ab421a754559fb61864d4345/7.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b328087a2e63a327ab421a754559fb61864d4345/7.9/slim/Dockerfile

  - version: 7.8.0
    majorVersion: '7.8'
    prerelease: false
    date: '2017-04-06T21:37:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.8.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4fa0c90f383880b8c03f6e2c07e8d46a0ae9075f/7.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.8.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4fa0c90f383880b8c03f6e2c07e8d46a0ae9075f/7.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.8.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4fa0c90f383880b8c03f6e2c07e8d46a0ae9075f/7.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4fa0c90f383880b8c03f6e2c07e8d46a0ae9075f/7.8/slim/Dockerfile

  - version: 7.7.4
    majorVersion: '7.7'
    prerelease: false
    date: '2017-03-22T10:55:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.7.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6f9f865df604e72ad2cabe2d78ab12c8f61640cb/7.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.7.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6f9f865df604e72ad2cabe2d78ab12c8f61640cb/7.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.7.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6f9f865df604e72ad2cabe2d78ab12c8f61640cb/7.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.7.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6f9f865df604e72ad2cabe2d78ab12c8f61640cb/7.7/slim/Dockerfile

  - version: 7.7.3
    majorVersion: '7.7'
    prerelease: false
    date: '2017-03-15T08:37:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.7.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/66084ef79197a4fd1198568fb41bd547ee62b8ae/7.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.7.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/66084ef79197a4fd1198568fb41bd547ee62b8ae/7.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.7.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/66084ef79197a4fd1198568fb41bd547ee62b8ae/7.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.7.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/66084ef79197a4fd1198568fb41bd547ee62b8ae/7.7/slim/Dockerfile

  - version: 7.7.2
    majorVersion: '7.7'
    prerelease: false
    date: '2017-03-08T20:33:26'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.7.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/74265fec6d203678fabfa6939abb629dd45553b7/7.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.7.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/74265fec6d203678fabfa6939abb629dd45553b7/7.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.7.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/74265fec6d203678fabfa6939abb629dd45553b7/7.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.7.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/74265fec6d203678fabfa6939abb629dd45553b7/7.7/slim/Dockerfile

  - version: 7.7.1
    majorVersion: '7.7'
    prerelease: false
    date: '2017-03-01T21:27:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.7.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/203044fdbf6ceaebd7db52137df102c01c5b6b0d/7.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.7.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/203044fdbf6ceaebd7db52137df102c01c5b6b0d/7.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.7.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/203044fdbf6ceaebd7db52137df102c01c5b6b0d/7.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.7.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/203044fdbf6ceaebd7db52137df102c01c5b6b0d/7.7/slim/Dockerfile

  - version: 7.7.0
    majorVersion: '7.7'
    prerelease: false
    date: '2017-03-01T11:37:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.7.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d328d2d967bd3a8d9b0260566383775d1a4aecc/7.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.7.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d328d2d967bd3a8d9b0260566383775d1a4aecc/7.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.7.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d328d2d967bd3a8d9b0260566383775d1a4aecc/7.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1d328d2d967bd3a8d9b0260566383775d1a4aecc/7.7/slim/Dockerfile

  - version: 7.6.0
    majorVersion: '7.6'
    prerelease: false
    date: '2017-03-01T02:46:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.6.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/7.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/7.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/7.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/7.6/slim/Dockerfile

  - version: 7.5.0
    majorVersion: '7.5'
    prerelease: false
    date: '2017-02-01T10:03:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.5.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90d5e3df903b830d039d3fe8f30e3a62395db37e/7.5/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90d5e3df903b830d039d3fe8f30e3a62395db37e/7.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90d5e3df903b830d039d3fe8f30e3a62395db37e/7.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/90d5e3df903b830d039d3fe8f30e3a62395db37e/7.5/slim/Dockerfile

  - version: 7.4.0
    majorVersion: '7.4'
    prerelease: false
    date: '2017-01-06T09:51:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.4.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/28425ed95cebaea2ff589c1516d79c60181983b2/7.4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/28425ed95cebaea2ff589c1516d79c60181983b2/7.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/28425ed95cebaea2ff589c1516d79c60181983b2/7.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/28425ed95cebaea2ff589c1516d79c60181983b2/7.4/slim/Dockerfile

  - version: 7.3.0
    majorVersion: '7.3'
    prerelease: false
    date: '2016-12-21T12:57:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.3.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/57f7537d35c0988bd0e74abbf16989557c1481ad/7.3/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.3.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/57f7537d35c0988bd0e74abbf16989557c1481ad/7.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.3.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/57f7537d35c0988bd0e74abbf16989557c1481ad/7.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/57f7537d35c0988bd0e74abbf16989557c1481ad/7.3/slim/Dockerfile

  - version: 7.2.1
    majorVersion: '7.2'
    prerelease: false
    date: '2016-12-07T15:33:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.2.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ac624bae8adf7f20314b503f8592760a683d935/7.2/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.2.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ac624bae8adf7f20314b503f8592760a683d935/7.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.2.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ac624bae8adf7f20314b503f8592760a683d935/7.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.2.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ac624bae8adf7f20314b503f8592760a683d935/7.2/slim/Dockerfile

  - version: 7.2.0
    majorVersion: '7.2'
    prerelease: false
    date: '2016-12-06T17:00:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.2.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a3489450fcd506538ab84174ebedb3cc5c908bc7/7.2/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.2.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/718102a587e7f02748402551b51407332384c1b3/7.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a3489450fcd506538ab84174ebedb3cc5c908bc7/7.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/718102a587e7f02748402551b51407332384c1b3/7.2/slim/Dockerfile

  - version: 7.1.0
    majorVersion: '7.1'
    prerelease: false
    date: '2016-11-15T15:30:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:7.1.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d20d305f0bf5935385a32558501f3a5c65e34878/7.1/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2c1bba840c6c64869755f67dafe2cd8f608dfc75/7.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d20d305f0bf5935385a32558501f3a5c65e34878/7.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2c1bba840c6c64869755f67dafe2cd8f608dfc75/7.1/slim/Dockerfile

  - version: 7.0.0
    majorVersion: '7.0'
    prerelease: false
    date: '2016-11-03T16:32:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:7.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/7.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:7.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/7.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:7.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/7.0/slim/Dockerfile

  - version: 6.17.1
    majorVersion: '6.17'
    prerelease: false
    date: '2019-05-01T16:23:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: node:6.17.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5a6a5e91999358c5b04fddd6c22a9a4eb0bf3fbf/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.17.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/53fd280cdd46a4caf63b82f8c269dfbb84895546/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.17.1-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/53fd280cdd46a4caf63b82f8c269dfbb84895546/6/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.17.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/53fd280cdd46a4caf63b82f8c269dfbb84895546/6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:6.17.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/53fd280cdd46a4caf63b82f8c269dfbb84895546/6/stretch-slim/Dockerfile

  - version: 6.17.0
    majorVersion: '6.17'
    prerelease: false
    date: '2019-03-29T04:48:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:6.17.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6833ee622c5a1d4c054ffaf96115f2a20714f5f3/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.17.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6833ee622c5a1d4c054ffaf96115f2a20714f5f3/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.17.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6833ee622c5a1d4c054ffaf96115f2a20714f5f3/6/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.17.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6833ee622c5a1d4c054ffaf96115f2a20714f5f3/6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:6.17.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6833ee622c5a1d4c054ffaf96115f2a20714f5f3/6/stretch-slim/Dockerfile

  - version: 6.16.0
    majorVersion: '6.16'
    prerelease: false
    date: '2019-02-18T14:31:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:6.16.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/daa131d713cf42ae181292471766879f750b5230/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.16.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/daa131d713cf42ae181292471766879f750b5230/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.16.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/daa131d713cf42ae181292471766879f750b5230/6/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.16.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/daa131d713cf42ae181292471766879f750b5230/6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:6.16.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/daa131d713cf42ae181292471766879f750b5230/6/stretch-slim/Dockerfile

  - version: 6.15.1
    majorVersion: '6.15'
    prerelease: false
    date: '2018-12-19T04:23:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: node:6.15.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50ee09688e28b138b1454a74deaa710d558b6b58/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.15.1-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50ee09688e28b138b1454a74deaa710d558b6b58/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.15.1-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50ee09688e28b138b1454a74deaa710d558b6b58/6/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.15.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50ee09688e28b138b1454a74deaa710d558b6b58/6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:6.15.1-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50ee09688e28b138b1454a74deaa710d558b6b58/6/stretch-slim/Dockerfile

  - version: 6.15.0
    majorVersion: '6.15'
    prerelease: false
    date: '2018-11-29T13:13:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.15.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.15.0-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.15.0-jessie-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8c0a9f2c144904631cf783bdd57b4a19300e6b1f/6/jessie-slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.15.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd2bad889b28587d4722f69c4a51d025df2ae624/6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: node:6.15.0-stretch-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8c0a9f2c144904631cf783bdd57b4a19300e6b1f/6/stretch-slim/Dockerfile

  - version: 6.14.4
    majorVersion: '6.14'
    prerelease: false
    date: '2018-11-25T20:06:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.14.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/77c2d0850a520de5e202757f54e5bc9b142f9adf/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.14.4-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.14.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.14.4-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8ccd57c1457a1b47adc4d82f9fed9ad51ccef3c5/6/stretch/Dockerfile

  - version: 6.14.3
    majorVersion: '6.14'
    prerelease: false
    date: '2018-08-02T13:45:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.14.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.14.3-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.14.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.14.3-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ec2111af089e31321e76641697e154b3b6a6c3/6/stretch/Dockerfile

  - version: 6.14.2
    majorVersion: '6.14'
    prerelease: false
    date: '2018-06-08T16:52:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.14.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.14.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb49c321f761c333ba87b18770121651f0a3004c/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.14.2-jessie
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: node:6.14.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.14.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5b5e7b6f28da1256846b9d500c98a8b4cf48130d/6/stretch/Dockerfile

  - version: 6.14.1
    majorVersion: '6.14'
    prerelease: false
    date: '2018-04-28T10:06:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.14.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/987139fc2385fc985aaa2545f7aeeef255eced79/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.14.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/987139fc2385fc985aaa2545f7aeeef255eced79/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.14.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/987139fc2385fc985aaa2545f7aeeef255eced79/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.14.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/987139fc2385fc985aaa2545f7aeeef255eced79/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.14.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/987139fc2385fc985aaa2545f7aeeef255eced79/6/stretch/Dockerfile

  - version: 6.14.0
    majorVersion: '6.14'
    prerelease: false
    date: '2018-03-29T01:27:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.14.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ebb4816d0d1424fcabe30f41c4d7c38b8db1f426/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.14.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ebb4816d0d1424fcabe30f41c4d7c38b8db1f426/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.14.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ebb4816d0d1424fcabe30f41c4d7c38b8db1f426/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.14.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ebb4816d0d1424fcabe30f41c4d7c38b8db1f426/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.14.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ebb4816d0d1424fcabe30f41c4d7c38b8db1f426/6/stretch/Dockerfile

  - version: 6.13.1
    majorVersion: '6.13'
    prerelease: false
    date: '2018-03-22T03:05:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.13.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.13.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.13.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.13.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.13.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/6/stretch/Dockerfile

  - version: 6.13.0
    majorVersion: '6.13'
    prerelease: false
    date: '2018-03-02T18:59:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.13.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.13.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.13.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.13.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.13.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/8498ff5302c19506c9edc3ce152f2bd4aa6b26b3/6/stretch/Dockerfile

  - version: 6.12.3
    majorVersion: '6.12'
    prerelease: false
    date: '2018-02-12T10:11:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.12.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4e5eda8fedf7fa355de6037f01d5699d414c1da3/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.12.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4e5eda8fedf7fa355de6037f01d5699d414c1da3/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.12.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/25f26146ac5b9f74add731b0b078e34411ae5831/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.12.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4e5eda8fedf7fa355de6037f01d5699d414c1da3/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.12.3-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4e5eda8fedf7fa355de6037f01d5699d414c1da3/6/stretch/Dockerfile

  - version: 6.12.2
    majorVersion: '6.12'
    prerelease: false
    date: '2017-12-13T12:58:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.12.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/632df638ab53acc1e4608cc9c9dd6cac539cbb23/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.12.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/632df638ab53acc1e4608cc9c9dd6cac539cbb23/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.12.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/632df638ab53acc1e4608cc9c9dd6cac539cbb23/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.12.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/632df638ab53acc1e4608cc9c9dd6cac539cbb23/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.12.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/632df638ab53acc1e4608cc9c9dd6cac539cbb23/6/stretch/Dockerfile

  - version: 6.12.1
    majorVersion: '6.12'
    prerelease: false
    date: '2017-12-06T08:54:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.12.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/698232de1e0a7bcdc52958b6bd6bf2816a31648b/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.12.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/698232de1e0a7bcdc52958b6bd6bf2816a31648b/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.12.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/698232de1e0a7bcdc52958b6bd6bf2816a31648b/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.12.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/698232de1e0a7bcdc52958b6bd6bf2816a31648b/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.12.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/698232de1e0a7bcdc52958b6bd6bf2816a31648b/6/stretch/Dockerfile

  - version: 6.12.0
    majorVersion: '6.12'
    prerelease: false
    date: '2017-11-15T13:54:49'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.12.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.12.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.12.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.12.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/6/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.12.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf84a38aeacb4f6aad34e07c79fd3a0084da5cd2/6/stretch/Dockerfile

  - version: 6.11.5
    majorVersion: '6.11'
    prerelease: false
    date: '2017-11-05T16:41:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.11.5-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/94a739297fcd60ef969b478d4e581a6d8299a94d/6.11/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.11.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/94a739297fcd60ef969b478d4e581a6d8299a94d/6.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.11.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/6.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.11.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/6.11/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.11.5-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/6.11/stretch/Dockerfile

  - version: 6.11.4
    majorVersion: '6.11'
    prerelease: false
    date: '2017-10-12T01:06:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.11.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36585913a2776f7f72afcdbf0d39d54625716916/6.11/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.11.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36585913a2776f7f72afcdbf0d39d54625716916/6.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.11.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36585913a2776f7f72afcdbf0d39d54625716916/6.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.11.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36585913a2776f7f72afcdbf0d39d54625716916/6.11/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.11.4-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36585913a2776f7f72afcdbf0d39d54625716916/6.11/stretch/Dockerfile

  - version: 6.11.3
    majorVersion: '6.11'
    prerelease: false
    date: '2017-09-27T01:09:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.11.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/17c50cb300581280805a4183524fbf57840f3a7e/6.11/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.11.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/17c50cb300581280805a4183524fbf57840f3a7e/6.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.11.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/17c50cb300581280805a4183524fbf57840f3a7e/6.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.11.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/17c50cb300581280805a4183524fbf57840f3a7e/6.11/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.11.3-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/17c50cb300581280805a4183524fbf57840f3a7e/6.11/stretch/Dockerfile

  - version: 6.11.2
    majorVersion: '6.11'
    prerelease: false
    date: '2017-08-22T09:47:20'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.11.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d77913eb25c2b98a241344d79c6397e431c298a8/6.11/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.11.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d77913eb25c2b98a241344d79c6397e431c298a8/6.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.11.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/6.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.11.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/6.11/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.11.2-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/6.11/stretch/Dockerfile

  - version: 6.11.1
    majorVersion: '6.11'
    prerelease: false
    date: '2017-07-26T18:04:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.11.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb200caf20280e436dedc56a5f194fd21e684758/6.11/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.11.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/6.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.11.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/6.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.11.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/6.11/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:6.11.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/6.11/stretch/Dockerfile

  - version: 6.11.0
    majorVersion: '6.11'
    prerelease: false
    date: '2017-07-04T16:30:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.11.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e2b78b4bde9440f2189007004a2ae4880f3eb030/6.11/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.11.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e2b78b4bde9440f2189007004a2ae4880f3eb030/6.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.11.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e2b78b4bde9440f2189007004a2ae4880f3eb030/6.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.11.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e2b78b4bde9440f2189007004a2ae4880f3eb030/6.11/slim/Dockerfile

  - version: 6.10.3
    majorVersion: '6.10'
    prerelease: false
    date: '2017-05-31T09:47:02'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.10.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/6.10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.10.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/6.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.10.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/6.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.10.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/6.10/slim/Dockerfile

  - version: 6.10.2
    majorVersion: '6.10'
    prerelease: false
    date: '2017-04-20T09:39:20'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.10.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/6.10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.10.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/6.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.10.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/6.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.10.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/6.10/slim/Dockerfile

  - version: 6.10.1
    majorVersion: '6.10'
    prerelease: false
    date: '2017-03-30T09:06:30'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.10.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5141d841167d109bcad542c9fb636607dabc8b1/6.10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.10.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/14681db8e89c0493e8af20657883fa21488a7766/6.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.10.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5141d841167d109bcad542c9fb636607dabc8b1/6.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.10.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/14681db8e89c0493e8af20657883fa21488a7766/6.10/slim/Dockerfile

  - version: 6.10.0
    majorVersion: '6.10'
    prerelease: false
    date: '2017-03-15T08:37:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.10.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/6.10/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.10.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/6.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.10.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/6.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.10.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/6.10/slim/Dockerfile

  - version: 6.9.5
    majorVersion: '6.9'
    prerelease: false
    date: '2017-02-01T10:03:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.9.5-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/6.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.9.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/6.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.9.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/6.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.9.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/6.9/slim/Dockerfile

  - version: 6.9.4
    majorVersion: '6.9'
    prerelease: false
    date: '2017-01-06T09:51:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.9.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/6.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.9.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/6.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.9.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/6.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.9.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/6.9/slim/Dockerfile

  - version: 6.9.3
    majorVersion: '6.9'
    prerelease: false
    date: '2017-01-04T15:37:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.9.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/6.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.9.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/6.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.9.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/6.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.9.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/6.9/slim/Dockerfile

  - version: 6.9.2
    majorVersion: '6.9'
    prerelease: false
    date: '2016-12-21T12:57:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.9.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6948057bbd9cc1469ca0e5e64d3bd5f000d4dc97/6.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.9.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6948057bbd9cc1469ca0e5e64d3bd5f000d4dc97/6.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.9.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6948057bbd9cc1469ca0e5e64d3bd5f000d4dc97/6.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.9.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6948057bbd9cc1469ca0e5e64d3bd5f000d4dc97/6.9/slim/Dockerfile

  - version: 6.9.1
    majorVersion: '6.9'
    prerelease: false
    date: '2016-11-28T09:18:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:6.9.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a3489450fcd506538ab84174ebedb3cc5c908bc7/6.9/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.9.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/6.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.9.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a3489450fcd506538ab84174ebedb3cc5c908bc7/6.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.9.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/6.9/slim/Dockerfile

  - version: 6.9.0
    majorVersion: '6.9'
    prerelease: false
    date: '2016-10-18T14:33:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.9.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e7f85f2b285be63ed06fda8b8e8d8b2915fed12/6.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.9.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e7f85f2b285be63ed06fda8b8e8d8b2915fed12/6.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3e7f85f2b285be63ed06fda8b8e8d8b2915fed12/6.9/slim/Dockerfile

  - version: 6.8.1
    majorVersion: '6.8'
    prerelease: false
    date: '2016-10-14T21:23:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.8.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a21c91d04b001525be8879f3f04b5451175af17c/6.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.8.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a21c91d04b001525be8879f3f04b5451175af17c/6.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.8.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a21c91d04b001525be8879f3f04b5451175af17c/6.8/slim/Dockerfile

  - version: 6.8.0
    majorVersion: '6.8'
    prerelease: false
    date: '2016-10-12T17:22:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.8.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f3c3821591765ad0727bdde2cb98f41dc1b9b4b9/6.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.8.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f3c3821591765ad0727bdde2cb98f41dc1b9b4b9/6.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f3c3821591765ad0727bdde2cb98f41dc1b9b4b9/6.8/slim/Dockerfile

  - version: 6.7.0
    majorVersion: '6.7'
    prerelease: false
    date: '2016-09-27T22:20:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.7.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/6.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.7.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/6.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/6.7/slim/Dockerfile

  - version: 6.6.0
    majorVersion: '6.6'
    prerelease: false
    date: '2016-09-23T19:31:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/62a39d8d527a8992734ba2d066c3983fe560ee44/6.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1c65c4ed3785432fe9e9fa71a26799d86df10de4/6.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/62a39d8d527a8992734ba2d066c3983fe560ee44/6.6/slim/Dockerfile

  - version: 6.5.0
    majorVersion: '6.5'
    prerelease: false
    date: '2016-08-29T16:36:34'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/910443c39c80291f0bf24712d8d94279cf15b7b5/6.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/910443c39c80291f0bf24712d8d94279cf15b7b5/6.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/910443c39c80291f0bf24712d8d94279cf15b7b5/6.5/slim/Dockerfile

  - version: '6.5'
    majorVersion: '6.5'
    prerelease: false
    date: '2016-08-29T16:36:34'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/910443c39c80291f0bf24712d8d94279cf15b7b5/6.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/910443c39c80291f0bf24712d8d94279cf15b7b5/6.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/910443c39c80291f0bf24712d8d94279cf15b7b5/6.5/slim/Dockerfile

  - version: 6.4.0
    majorVersion: '6.4'
    prerelease: false
    date: '2016-08-16T15:22:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/be9abca6b1be7657fd0f00f005b867393184d19c/6.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/be9abca6b1be7657fd0f00f005b867393184d19c/6.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/be9abca6b1be7657fd0f00f005b867393184d19c/6.4/slim/Dockerfile

  - version: '6.4'
    majorVersion: '6.4'
    prerelease: false
    date: '2016-08-16T15:22:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/be9abca6b1be7657fd0f00f005b867393184d19c/6.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/be9abca6b1be7657fd0f00f005b867393184d19c/6.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/be9abca6b1be7657fd0f00f005b867393184d19c/6.4/slim/Dockerfile

  - version: 6.3.1
    majorVersion: '6.3'
    prerelease: false
    date: '2016-07-21T20:55:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.3.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ae9e2d4f04a0fa82261df86fd9556a76cefc020d/6.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.3.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ae9e2d4f04a0fa82261df86fd9556a76cefc020d/6.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.3.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ae9e2d4f04a0fa82261df86fd9556a76cefc020d/6.3/slim/Dockerfile

  - version: 6.3.0
    majorVersion: '6.3'
    prerelease: false
    date: '2016-07-06T23:27:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.3.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6a984d5b1f27b0344cbbab20019e77e6c0420b91/6.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.3.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6a984d5b1f27b0344cbbab20019e77e6c0420b91/6.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6a984d5b1f27b0344cbbab20019e77e6c0420b91/6.3/slim/Dockerfile

  - version: '6.3'
    majorVersion: '6.3'
    prerelease: false
    date: '2016-07-21T20:55:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ae9e2d4f04a0fa82261df86fd9556a76cefc020d/6.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ae9e2d4f04a0fa82261df86fd9556a76cefc020d/6.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ae9e2d4f04a0fa82261df86fd9556a76cefc020d/6.3/slim/Dockerfile

  - version: 6.2.2
    majorVersion: '6.2'
    prerelease: false
    date: '2016-06-28T19:28:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.2.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.2.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.2.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/slim/Dockerfile

  - version: 6.2.1
    majorVersion: '6.2'
    prerelease: false
    date: '2016-06-02T21:10:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.2.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/466e418a117f33c1cd550414ae1b39423319a265/6.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.2.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/466e418a117f33c1cd550414ae1b39423319a265/6.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.2.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/466e418a117f33c1cd550414ae1b39423319a265/6.2/slim/Dockerfile

  - version: 6.2.0
    majorVersion: '6.2'
    prerelease: false
    date: '2016-05-24T12:26:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.2.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9a4e5a31df1e7d1df8b3a2d74f23f340d5210ada/6.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9a4e5a31df1e7d1df8b3a2d74f23f340d5210ada/6.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9a4e5a31df1e7d1df8b3a2d74f23f340d5210ada/6.2/slim/Dockerfile

  - version: '6.2'
    majorVersion: '6.2'
    prerelease: false
    date: '2016-06-28T19:28:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/slim/Dockerfile

  - version: 6.1.0
    majorVersion: '6.1'
    prerelease: false
    date: '2016-05-06T10:12:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/10940306b6ae14f9d2fb0d9a7327e768eadc039a/6.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/10940306b6ae14f9d2fb0d9a7327e768eadc039a/6.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/10940306b6ae14f9d2fb0d9a7327e768eadc039a/6.1/slim/Dockerfile

  - version: '6.1'
    majorVersion: '6.1'
    prerelease: false
    date: '2016-05-06T10:12:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/10940306b6ae14f9d2fb0d9a7327e768eadc039a/6.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/10940306b6ae14f9d2fb0d9a7327e768eadc039a/6.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/10940306b6ae14f9d2fb0d9a7327e768eadc039a/6.1/slim/Dockerfile

  - version: 6.0.0
    majorVersion: '6.0'
    prerelease: false
    date: '2016-05-03T14:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5367524ce658e9a9d4ba6191801e86d6e942a16a/6.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5367524ce658e9a9d4ba6191801e86d6e942a16a/6.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5367524ce658e9a9d4ba6191801e86d6e942a16a/6.0/slim/Dockerfile

  - version: '6.0'
    majorVersion: '6.0'
    prerelease: false
    date: '2016-05-03T14:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5367524ce658e9a9d4ba6191801e86d6e942a16a/6.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5367524ce658e9a9d4ba6191801e86d6e942a16a/6.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5367524ce658e9a9d4ba6191801e86d6e942a16a/6.0/slim/Dockerfile

  - version: 5.12.0
    majorVersion: '5.12'
    prerelease: false
    date: '2016-09-16T12:04:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.12.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/5.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.12.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/5.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.12.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/5.12/slim/Dockerfile

  - version: '5.12'
    majorVersion: '5.12'
    prerelease: false
    date: '2016-09-16T12:04:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.12-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/5.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.12
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/5.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.12-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/5.12/slim/Dockerfile

  - version: 5.11.1
    majorVersion: '5.11'
    prerelease: false
    date: '2016-06-17T12:44:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.11.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cbdacad677bafa044140610f851bed00254de1ca/5.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.11.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cbdacad677bafa044140610f851bed00254de1ca/5.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.11.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cbdacad677bafa044140610f851bed00254de1ca/5.11/slim/Dockerfile

  - version: 5.11.0
    majorVersion: '5.11'
    prerelease: false
    date: '2016-05-03T14:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.11.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/5.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.11.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/5.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.11.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/5.11/slim/Dockerfile

  - version: '5.11'
    majorVersion: '5.11'
    prerelease: false
    date: '2016-06-17T12:44:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.11-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cbdacad677bafa044140610f851bed00254de1ca/5.11/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.11
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cbdacad677bafa044140610f851bed00254de1ca/5.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.11-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cbdacad677bafa044140610f851bed00254de1ca/5.11/slim/Dockerfile

  - version: 5.10.1
    majorVersion: '5.10'
    prerelease: false
    date: '2016-04-12T18:37:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.10.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/baad247b9df8087d4c13a3a9bfb3c65833f424bb/5.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.10.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/baad247b9df8087d4c13a3a9bfb3c65833f424bb/5.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.10.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/baad247b9df8087d4c13a3a9bfb3c65833f424bb/5.10/slim/Dockerfile

  - version: 5.10.0
    majorVersion: '5.10'
    prerelease: false
    date: '2016-04-01T08:05:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.10.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/78c9ef30b3ddb81464ffd04d3df95c51224029a1/5.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.10.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/78c9ef30b3ddb81464ffd04d3df95c51224029a1/5.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.10.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/78c9ef30b3ddb81464ffd04d3df95c51224029a1/5.10/slim/Dockerfile

  - version: '5.10'
    majorVersion: '5.10'
    prerelease: false
    date: '2016-04-12T18:37:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.10-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/baad247b9df8087d4c13a3a9bfb3c65833f424bb/5.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.10
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/baad247b9df8087d4c13a3a9bfb3c65833f424bb/5.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.10-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/baad247b9df8087d4c13a3a9bfb3c65833f424bb/5.10/slim/Dockerfile

  - version: 5.9.1
    majorVersion: '5.9'
    prerelease: false
    date: '2016-03-23T14:38:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.9.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9dfa3cbd5ca0133d3c111e4624e3452169b4fef9/5.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.9.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9dfa3cbd5ca0133d3c111e4624e3452169b4fef9/5.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.9.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9dfa3cbd5ca0133d3c111e4624e3452169b4fef9/5.9/slim/Dockerfile

  - version: 5.9.0
    majorVersion: '5.9'
    prerelease: false
    date: '2016-03-16T21:46:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.9.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c415d0802c101079f10e1da3518d2555e4b03013/5.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.9.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c415d0802c101079f10e1da3518d2555e4b03013/5.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c415d0802c101079f10e1da3518d2555e4b03013/5.9/slim/Dockerfile

  - version: '5.9'
    majorVersion: '5.9'
    prerelease: false
    date: '2016-03-23T14:38:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.9-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9dfa3cbd5ca0133d3c111e4624e3452169b4fef9/5.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.9
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9dfa3cbd5ca0133d3c111e4624e3452169b4fef9/5.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.9-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9dfa3cbd5ca0133d3c111e4624e3452169b4fef9/5.9/slim/Dockerfile

  - version: 5.8.0
    majorVersion: '5.8'
    prerelease: false
    date: '2016-03-09T14:58:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.8.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a0e795b24770de9a72c2054ac0a8244c0fee015c/5.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.8.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a0e795b24770de9a72c2054ac0a8244c0fee015c/5.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a0e795b24770de9a72c2054ac0a8244c0fee015c/5.8/slim/Dockerfile

  - version: '5.8'
    majorVersion: '5.8'
    prerelease: false
    date: '2016-03-09T14:58:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.8-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a0e795b24770de9a72c2054ac0a8244c0fee015c/5.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.8
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a0e795b24770de9a72c2054ac0a8244c0fee015c/5.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.8-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a0e795b24770de9a72c2054ac0a8244c0fee015c/5.8/slim/Dockerfile

  - version: 5.7.1
    majorVersion: '5.7'
    prerelease: false
    date: '2016-03-09T08:52:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.7.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b2c7f6e357359b7b8f30caada05f1d412d926d7b/5.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.7.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b2c7f6e357359b7b8f30caada05f1d412d926d7b/5.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.7.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b2c7f6e357359b7b8f30caada05f1d412d926d7b/5.7/slim/Dockerfile

  - version: 5.7.0
    majorVersion: '5.7'
    prerelease: false
    date: '2016-03-02T18:12:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.7.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/5.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.7.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/5.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/5.7/slim/Dockerfile

  - version: '5.7'
    majorVersion: '5.7'
    prerelease: false
    date: '2016-03-09T08:52:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.7-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b2c7f6e357359b7b8f30caada05f1d412d926d7b/5.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.7
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b2c7f6e357359b7b8f30caada05f1d412d926d7b/5.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.7-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b2c7f6e357359b7b8f30caada05f1d412d926d7b/5.7/slim/Dockerfile

  - version: 5.6.0
    majorVersion: '5.6'
    prerelease: false
    date: '2016-02-16T20:56:02'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/5.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/5.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/5.6/slim/Dockerfile

  - version: '5.6'
    majorVersion: '5.6'
    prerelease: false
    date: '2016-02-16T20:56:02'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.6-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/5.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.6
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/5.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.6-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/5.6/slim/Dockerfile

  - version: 5.5.0
    majorVersion: '5.5'
    prerelease: false
    date: '2016-01-22T21:03:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31bb0d89ab3d67ddb9a998e4bf655c3cd98f445c/5.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31bb0d89ab3d67ddb9a998e4bf655c3cd98f445c/5.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31bb0d89ab3d67ddb9a998e4bf655c3cd98f445c/5.5/slim/Dockerfile

  - version: '5.5'
    majorVersion: '5.5'
    prerelease: false
    date: '2016-01-22T21:03:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31bb0d89ab3d67ddb9a998e4bf655c3cd98f445c/5.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31bb0d89ab3d67ddb9a998e4bf655c3cd98f445c/5.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/31bb0d89ab3d67ddb9a998e4bf655c3cd98f445c/5.5/slim/Dockerfile

  - version: 5.4.1
    majorVersion: '5.4'
    prerelease: false
    date: '2016-01-21T01:49:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.4.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/5.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.4.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/5.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.4.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/5.4/slim/Dockerfile

  - version: 5.4.0
    majorVersion: '5.4'
    prerelease: false
    date: '2016-01-07T20:17:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4868ce25f75d47e3ec75e6479664d8c46fc990e/5.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4868ce25f75d47e3ec75e6479664d8c46fc990e/5.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c4868ce25f75d47e3ec75e6479664d8c46fc990e/5.4/slim/Dockerfile

  - version: '5.4'
    majorVersion: '5.4'
    prerelease: false
    date: '2016-01-21T01:49:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/5.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/5.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/5.4/slim/Dockerfile

  - version: 5.3.0
    majorVersion: '5.3'
    prerelease: false
    date: '2015-12-25T22:49:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.3.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/87993b5bb5b47a6dfc9f27b553406a4cb60f7050/5.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.3.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/87993b5bb5b47a6dfc9f27b553406a4cb60f7050/5.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/87993b5bb5b47a6dfc9f27b553406a4cb60f7050/5.3/slim/Dockerfile

  - version: '5.3'
    majorVersion: '5.3'
    prerelease: false
    date: '2015-12-25T22:49:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/87993b5bb5b47a6dfc9f27b553406a4cb60f7050/5.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/87993b5bb5b47a6dfc9f27b553406a4cb60f7050/5.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/87993b5bb5b47a6dfc9f27b553406a4cb60f7050/5.3/slim/Dockerfile

  - version: 5.2.0
    majorVersion: '5.2'
    prerelease: false
    date: '2015-12-09T08:29:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.2.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5d433ece4d221fac7e38efbec25ffea2dea56286/5.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5d433ece4d221fac7e38efbec25ffea2dea56286/5.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5d433ece4d221fac7e38efbec25ffea2dea56286/5.2/slim/Dockerfile

  - version: '5.2'
    majorVersion: '5.2'
    prerelease: false
    date: '2015-12-09T08:29:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5d433ece4d221fac7e38efbec25ffea2dea56286/5.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5d433ece4d221fac7e38efbec25ffea2dea56286/5.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5d433ece4d221fac7e38efbec25ffea2dea56286/5.2/slim/Dockerfile

  - version: 5.1.1
    majorVersion: '5.1'
    prerelease: false
    date: '2015-12-03T22:24:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.1.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb89224e0f2572e4894c50abfa8174ca65d6b28f/5.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.1.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/444da1d3492d12d1e174b2764b7c06105c0e407a/5.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.1.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/444da1d3492d12d1e174b2764b7c06105c0e407a/5.1/slim/Dockerfile

  - version: 5.1.0
    majorVersion: '5.1'
    prerelease: false
    date: '2015-11-24T22:21:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3622304ad09a84826521e81cb7ddf253c020d89e/5.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3622304ad09a84826521e81cb7ddf253c020d89e/5.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3622304ad09a84826521e81cb7ddf253c020d89e/5.1/slim/Dockerfile

  - version: '5.1'
    majorVersion: '5.1'
    prerelease: false
    date: '2015-12-03T22:24:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb89224e0f2572e4894c50abfa8174ca65d6b28f/5.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/444da1d3492d12d1e174b2764b7c06105c0e407a/5.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/444da1d3492d12d1e174b2764b7c06105c0e407a/5.1/slim/Dockerfile

  - version: 5.0.0
    majorVersion: '5.0'
    prerelease: false
    date: '2015-11-04T09:45:24'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2445743c1453941f787b0aa22cca51c62a1a3f09/5.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2445743c1453941f787b0aa22cca51c62a1a3f09/5.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2445743c1453941f787b0aa22cca51c62a1a3f09/5.0/slim/Dockerfile

  - version: '5.0'
    majorVersion: '5.0'
    prerelease: false
    date: '2015-11-04T09:45:24'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2445743c1453941f787b0aa22cca51c62a1a3f09/5.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2445743c1453941f787b0aa22cca51c62a1a3f09/5.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/2445743c1453941f787b0aa22cca51c62a1a3f09/5.0/slim/Dockerfile

  - version: 4.9.1
    majorVersion: '4.9'
    prerelease: false
    date: '2018-05-01T06:33:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.9.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f56c21260109ad432ec3ea5ba96dbd3b9daa4ea7/4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.9.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f56c21260109ad432ec3ea5ba96dbd3b9daa4ea7/4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.9.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f56c21260109ad432ec3ea5ba96dbd3b9daa4ea7/4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.9.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f56c21260109ad432ec3ea5ba96dbd3b9daa4ea7/4/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:4.9.1-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f56c21260109ad432ec3ea5ba96dbd3b9daa4ea7/4/stretch/Dockerfile

  - version: 4.9.0
    majorVersion: '4.9'
    prerelease: false
    date: '2018-03-29T01:27:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.9.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9d428986bacceaadd98bc774a443c873a5baebdb/4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.9.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9d428986bacceaadd98bc774a443c873a5baebdb/4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.9.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9d428986bacceaadd98bc774a443c873a5baebdb/4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.9.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9d428986bacceaadd98bc774a443c873a5baebdb/4/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:4.9.0-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9d428986bacceaadd98bc774a443c873a5baebdb/4/stretch/Dockerfile

  - version: 4.8.7
    majorVersion: '4.8'
    prerelease: false
    date: '2018-03-22T03:05:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.7-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.7-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.7
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.7-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/4/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:4.8.7-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ab12e9bab43bde5efd2e9fa278d941e4062c6f4a/4/stretch/Dockerfile

  - version: 4.8.6
    majorVersion: '4.8'
    prerelease: false
    date: '2017-12-06T08:54:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.6-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f941101d4d706cea27fab3b628c19e870a78d194/4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.6-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f941101d4d706cea27fab3b628c19e870a78d194/4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.6
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f941101d4d706cea27fab3b628c19e870a78d194/4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.6-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f941101d4d706cea27fab3b628c19e870a78d194/4/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:4.8.6-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/f941101d4d706cea27fab3b628c19e870a78d194/4/stretch/Dockerfile

  - version: 4.8.5
    majorVersion: '4.8'
    prerelease: false
    date: '2017-11-05T16:41:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.5-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/94a739297fcd60ef969b478d4e581a6d8299a94d/4.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/94a739297fcd60ef969b478d4e581a6d8299a94d/4.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/4.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/4.8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:4.8.5-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/001cfa3930ef8fb02865daaecbe35a3822bec15c/4.8/stretch/Dockerfile

  - version: 4.8.4
    majorVersion: '4.8'
    prerelease: false
    date: '2017-10-12T01:06:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.4-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3ffba881ad5a78d33b8edf888d5406222b60686e/4.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9c25cbe93f9108fd1e506d14228afe4a3d04108f/4.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/4.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/4.8/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: node:4.8.4-stretch
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b502aa016335c81a586b430328d8fee4897ee440/4.8/stretch/Dockerfile

  - version: 4.8.3
    majorVersion: '4.8'
    prerelease: false
    date: '2017-07-04T16:30:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/4.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/4.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/4.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b10c352085bbb7933d22bba1215ada9d266dd365/4.8/slim/Dockerfile

  - version: 4.8.2
    majorVersion: '4.8'
    prerelease: false
    date: '2017-04-20T09:39:20'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/4.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/4.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/4.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e1103db1e7330f620ec4b5961b93936da11becdf/4.8/slim/Dockerfile

  - version: 4.8.1
    majorVersion: '4.8'
    prerelease: false
    date: '2017-03-30T09:06:30'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5141d841167d109bcad542c9fb636607dabc8b1/4.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/14681db8e89c0493e8af20657883fa21488a7766/4.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a5141d841167d109bcad542c9fb636607dabc8b1/4.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/14681db8e89c0493e8af20657883fa21488a7766/4.8/slim/Dockerfile

  - version: 4.8.0
    majorVersion: '4.8'
    prerelease: false
    date: '2017-03-15T08:37:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.8.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/4.8/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.8.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/4.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.8.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/4.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.8.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/debf4ea17cee8c078df632e975ea69f1969094c0/4.8/slim/Dockerfile

  - version: 4.7.3
    majorVersion: '4.7'
    prerelease: false
    date: '2017-02-01T10:03:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.7.3-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/4.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.7.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/4.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.7.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/4.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.7.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3b038b8a1ac8f65e3d368bedb9f979884342fdcb/4.7/slim/Dockerfile

  - version: 4.7.2
    majorVersion: '4.7'
    prerelease: false
    date: '2017-01-06T09:51:14'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.7.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/4.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.7.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/4.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.7.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/4.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.7.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/ad54b39ef23e0c7e0df3ac4234c3ee77b58c3f5d/4.7/slim/Dockerfile

  - version: 4.7.1
    majorVersion: '4.7'
    prerelease: false
    date: '2017-01-04T15:37:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.7.1-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/4.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.7.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/4.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.7.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/4.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.7.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/369c41c80fc5312625ad61175814b93dc24d0939/4.7/slim/Dockerfile

  - version: 4.7.0
    majorVersion: '4.7'
    prerelease: false
    date: '2016-12-21T12:57:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.7.0-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926106f27e3a6961191d7b802af6896a1ac892e3/4.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.7.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926106f27e3a6961191d7b802af6896a1ac892e3/4.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.7.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926106f27e3a6961191d7b802af6896a1ac892e3/4.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.7.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/926106f27e3a6961191d7b802af6896a1ac892e3/4.7/slim/Dockerfile

  - version: 4.6.2
    majorVersion: '4.6'
    prerelease: false
    date: '2016-12-06T17:00:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: node:4.6.2-alpine
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a3489450fcd506538ab84174ebedb3cc5c908bc7/4.6/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.6.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/4.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.6.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/a3489450fcd506538ab84174ebedb3cc5c908bc7/4.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.6.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/4.6/slim/Dockerfile

  - version: 4.6.1
    majorVersion: '4.6'
    prerelease: false
    date: '2016-11-03T16:32:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.6.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/4.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.6.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/4.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.6.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/4.6/slim/Dockerfile

  - version: 4.6.0
    majorVersion: '4.6'
    prerelease: false
    date: '2016-10-14T21:23:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.6.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/4.6/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.6.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/4.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.6.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/4.6/slim/Dockerfile

  - version: 4.5.0
    majorVersion: '4.5'
    prerelease: false
    date: '2016-09-23T19:31:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.5.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/4.5/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.5.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1c65c4ed3785432fe9e9fa71a26799d86df10de4/4.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.5.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/4.5/slim/Dockerfile

  - version: 4.4.7
    majorVersion: '4.4'
    prerelease: false
    date: '2016-08-16T12:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.7-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf93fccf8e127824cd2478f491502c7d3ad0e1aa/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.7
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf93fccf8e127824cd2478f491502c7d3ad0e1aa/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.7-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf93fccf8e127824cd2478f491502c7d3ad0e1aa/4.4/slim/Dockerfile

  - version: 4.4.6
    majorVersion: '4.4'
    prerelease: false
    date: '2016-06-23T21:09:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.6-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50b56d39a236fd519eda2231757aa2173e270807/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.6
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50b56d39a236fd519eda2231757aa2173e270807/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.6-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/50b56d39a236fd519eda2231757aa2173e270807/4.4/slim/Dockerfile

  - version: 4.4.5
    majorVersion: '4.4'
    prerelease: false
    date: '2016-06-17T12:44:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fdcbbd6445c70290c50396cba2b2b67357a00629/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fdcbbd6445c70290c50396cba2b2b67357a00629/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fdcbbd6445c70290c50396cba2b2b67357a00629/4.4/slim/Dockerfile

  - version: 4.4.4
    majorVersion: '4.4'
    prerelease: false
    date: '2016-05-17T19:17:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/06cd6a984ed5d2c4edb7d4513791614ce7cd0c30/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/06cd6a984ed5d2c4edb7d4513791614ce7cd0c30/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/06cd6a984ed5d2c4edb7d4513791614ce7cd0c30/4.4/slim/Dockerfile

  - version: 4.4.3
    majorVersion: '4.4'
    prerelease: false
    date: '2016-05-03T14:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/4.4/slim/Dockerfile

  - version: 4.4.2
    majorVersion: '4.4'
    prerelease: false
    date: '2016-04-05T21:27:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd8e6c3434e58796003826fed262071d27a77cc9/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd8e6c3434e58796003826fed262071d27a77cc9/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fd8e6c3434e58796003826fed262071d27a77cc9/4.4/slim/Dockerfile

  - version: 4.4.1
    majorVersion: '4.4'
    prerelease: false
    date: '2016-03-23T14:38:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/88077364f7612b1f0e4bdd81db286886cf516958/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/88077364f7612b1f0e4bdd81db286886cf516958/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/88077364f7612b1f0e4bdd81db286886cf516958/4.4/slim/Dockerfile

  - version: 4.4.0
    majorVersion: '4.4'
    prerelease: false
    date: '2016-03-16T21:46:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12b7be1a82f2366a798c618f40c0a2402dd5b509/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12b7be1a82f2366a798c618f40c0a2402dd5b509/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/12b7be1a82f2366a798c618f40c0a2402dd5b509/4.4/slim/Dockerfile

  - version: '4.4'
    majorVersion: '4.4'
    prerelease: false
    date: '2016-08-16T12:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf93fccf8e127824cd2478f491502c7d3ad0e1aa/4.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf93fccf8e127824cd2478f491502c7d3ad0e1aa/4.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bf93fccf8e127824cd2478f491502c7d3ad0e1aa/4.4/slim/Dockerfile

  - version: 4.3.2
    majorVersion: '4.3'
    prerelease: false
    date: '2016-03-08T22:46:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.3.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5934cfb183f13fec7ef17c5d185dbfe444d1da0f/4.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.3.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5934cfb183f13fec7ef17c5d185dbfe444d1da0f/4.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.3.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5934cfb183f13fec7ef17c5d185dbfe444d1da0f/4.3/slim/Dockerfile

  - version: 4.3.1
    majorVersion: '4.3'
    prerelease: false
    date: '2016-02-23T10:28:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.3.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f898d6da852108defeab98780f1945cecce9465/4.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.3.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f898d6da852108defeab98780f1945cecce9465/4.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.3.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f898d6da852108defeab98780f1945cecce9465/4.3/slim/Dockerfile

  - version: 4.3.0
    majorVersion: '4.3'
    prerelease: false
    date: '2016-02-12T10:20:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.3.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/4.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.3.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/4.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.3.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0c722500f66fb5f606a57824babe9798ae98667b/4.3/slim/Dockerfile

  - version: '4.3'
    majorVersion: '4.3'
    prerelease: false
    date: '2016-03-08T22:46:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5934cfb183f13fec7ef17c5d185dbfe444d1da0f/4.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5934cfb183f13fec7ef17c5d185dbfe444d1da0f/4.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5934cfb183f13fec7ef17c5d185dbfe444d1da0f/4.3/slim/Dockerfile

  - version: 4.2.6
    majorVersion: '4.2'
    prerelease: false
    date: '2016-01-22T21:03:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.6-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c161bc491adf9efd1ccea40d9cd4c239a497bfc4/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.6
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c161bc491adf9efd1ccea40d9cd4c239a497bfc4/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.6-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c161bc491adf9efd1ccea40d9cd4c239a497bfc4/4.2/slim/Dockerfile

  - version: 4.2.5
    majorVersion: '4.2'
    prerelease: false
    date: '2016-01-21T14:38:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.5-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36abbd4f4bf2e7d5f17f894b69d6c80ca876d311/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.5
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36abbd4f4bf2e7d5f17f894b69d6c80ca876d311/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.5-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/36abbd4f4bf2e7d5f17f894b69d6c80ca876d311/4.2/slim/Dockerfile

  - version: 4.2.4
    majorVersion: '4.2'
    prerelease: false
    date: '2016-01-13T10:46:24'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.4-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7cbea391f22678de5d828b1a38c27a25c951795f/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.4
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7cbea391f22678de5d828b1a38c27a25c951795f/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.4-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/7cbea391f22678de5d828b1a38c27a25c951795f/4.2/slim/Dockerfile

  - version: 4.2.3
    majorVersion: '4.2'
    prerelease: false
    date: '2015-12-17T19:05:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.3-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb89224e0f2572e4894c50abfa8174ca65d6b28f/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.3
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb89224e0f2572e4894c50abfa8174ca65d6b28f/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.3-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bb89224e0f2572e4894c50abfa8174ca65d6b28f/4.2/slim/Dockerfile

  - version: 4.2.2
    majorVersion: '4.2'
    prerelease: false
    date: '2015-11-24T22:21:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9992908b275546d9dc1b6063a4d0b7bc500e8b3b/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9992908b275546d9dc1b6063a4d0b7bc500e8b3b/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/9992908b275546d9dc1b6063a4d0b7bc500e8b3b/4.2/slim/Dockerfile

  - version: 4.2.1
    majorVersion: '4.2'
    prerelease: false
    date: '2015-10-30T19:53:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/04df8682a438b0ced8f530ab562f5197595e0cbb/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/04df8682a438b0ced8f530ab562f5197595e0cbb/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/04df8682a438b0ced8f530ab562f5197595e0cbb/4.2/slim/Dockerfile

  - version: 4.2.0
    majorVersion: '4.2'
    prerelease: false
    date: '2015-10-13T09:37:49'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/184653e68db98e20ced684383ef9e3d4d091c381/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/184653e68db98e20ced684383ef9e3d4d091c381/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/184653e68db98e20ced684383ef9e3d4d091c381/4.2/slim/Dockerfile

  - version: '4.2'
    majorVersion: '4.2'
    prerelease: false
    date: '2016-01-22T21:03:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c161bc491adf9efd1ccea40d9cd4c239a497bfc4/4.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c161bc491adf9efd1ccea40d9cd4c239a497bfc4/4.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c161bc491adf9efd1ccea40d9cd4c239a497bfc4/4.2/slim/Dockerfile

  - version: 4.1.2
    majorVersion: '4.1'
    prerelease: false
    date: '2015-10-06T01:38:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.1.2-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f41e58217f19b7c65161b7850e86df51b75efac/4.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.1.2
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f41e58217f19b7c65161b7850e86df51b75efac/4.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.1.2-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f41e58217f19b7c65161b7850e86df51b75efac/4.1/slim/Dockerfile

  - version: 4.1.1
    majorVersion: '4.1'
    prerelease: false
    date: '2015-09-23T14:19:29'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.1.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3136e8429bd4017cf55a09761faf866c2cb8b104/4.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.1.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3136e8429bd4017cf55a09761faf866c2cb8b104/4.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.1.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3136e8429bd4017cf55a09761faf866c2cb8b104/4.1/slim/Dockerfile

  - version: 4.1.0
    majorVersion: '4.1'
    prerelease: false
    date: '2015-09-18T09:41:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.1.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cfc9c3b0dbcbbd3211aec6d525b80ca5e7d1e9ad/4.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.1.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cfc9c3b0dbcbbd3211aec6d525b80ca5e7d1e9ad/4.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.1.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/cfc9c3b0dbcbbd3211aec6d525b80ca5e7d1e9ad/4.1/slim/Dockerfile

  - version: '4.1'
    majorVersion: '4.1'
    prerelease: false
    date: '2015-10-06T01:38:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.1-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f41e58217f19b7c65161b7850e86df51b75efac/4.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.1
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f41e58217f19b7c65161b7850e86df51b75efac/4.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.1-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/0f41e58217f19b7c65161b7850e86df51b75efac/4.1/slim/Dockerfile

  - version: 4.0.0
    majorVersion: '4.0'
    prerelease: false
    date: '2015-09-16T14:12:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.0.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/abade3a2ce359068516dc4f84ec0824b2393cfbb/4.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.0.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c2a8075f1e3155577c071bf1178c59370bb76d1a/4.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.0.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/abade3a2ce359068516dc4f84ec0824b2393cfbb/4.0/slim/Dockerfile

  - version: '4.0'
    majorVersion: '4.0'
    prerelease: false
    date: '2015-09-16T14:12:18'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:4.0-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/abade3a2ce359068516dc4f84ec0824b2393cfbb/4.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:4.0
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/c2a8075f1e3155577c071bf1178c59370bb76d1a/4.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:4.0-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/abade3a2ce359068516dc4f84ec0824b2393cfbb/4.0/slim/Dockerfile

  - version: 0.12.18
    majorVersion: '0.12'
    prerelease: false
    date: '2016-12-21T12:57:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.18-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/38829d6654a9da4bb6fdb140286b5a47737cb1f3/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.18
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/38829d6654a9da4bb6fdb140286b5a47737cb1f3/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.12.18-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/38829d6654a9da4bb6fdb140286b5a47737cb1f3/0.12/slim/Dockerfile

  - version: 0.12.17
    majorVersion: '0.12'
    prerelease: false
    date: '2016-12-07T15:33:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.17-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.17
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.12.17-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4a722c29c0e52624af8b72b4711ebeba8ea39463/0.12/slim/Dockerfile

  - version: 0.12.16
    majorVersion: '0.12'
    prerelease: false
    date: '2016-10-14T21:23:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.16-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.16
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.12.16-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/0.12/slim/Dockerfile

  - version: 0.12.15
    majorVersion: '0.12'
    prerelease: false
    date: '2016-09-23T19:31:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.15-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.15
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1c65c4ed3785432fe9e9fa71a26799d86df10de4/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.12.15-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/0.12/slim/Dockerfile

  - version: 0.12.14
    majorVersion: '0.12'
    prerelease: false
    date: '2016-06-17T12:44:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.14-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6778e14c0c1ae53cc413f77a94c21c7cf05f651f/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.14
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6778e14c0c1ae53cc413f77a94c21c7cf05f651f/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.12.14-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/6778e14c0c1ae53cc413f77a94c21c7cf05f651f/0.12/slim/Dockerfile

  - version: 0.12.13
    majorVersion: '0.12'
    prerelease: false
    date: '2016-05-03T14:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.13-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.13
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.12.13-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/0.12/slim/Dockerfile

  - version: 0.12.12
    majorVersion: '0.12'
    prerelease: false
    date: '2016-03-23T14:38:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.12-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbdb1dc2ed5e1a0e57ec9d59f9a0cbdd104ff090/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.12
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbdb1dc2ed5e1a0e57ec9d59f9a0cbdd104ff090/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.12-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/bbdb1dc2ed5e1a0e57ec9d59f9a0cbdd104ff090/0.12/slim/Dockerfile

  - version: 0.12.11
    majorVersion: '0.12'
    prerelease: false
    date: '2016-03-03T22:50:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.11-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fa1d51c9b9bfab27e48f8c6c740fb702661089e8/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.11
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fa1d51c9b9bfab27e48f8c6c740fb702661089e8/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.11-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/fa1d51c9b9bfab27e48f8c6c740fb702661089e8/0.12/slim/Dockerfile

  - version: 0.12.10
    majorVersion: '0.12'
    prerelease: false
    date: '2016-03-02T18:50:34'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.10-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.10
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.10-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/0.12/slim/Dockerfile

  - version: 0.12.9
    majorVersion: '0.12'
    prerelease: false
    date: '2016-01-22T21:03:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.9-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.9
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.9-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/0.12/slim/Dockerfile

  - version: 0.12.8
    majorVersion: '0.12'
    prerelease: false
    date: '2015-11-24T22:21:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.8-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ebe31f6cd0d61d2756c08e232d3583e2543079/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.8
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ebe31f6cd0d61d2756c08e232d3583e2543079/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.8-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/e3ebe31f6cd0d61d2756c08e232d3583e2543079/0.12/slim/Dockerfile

  - version: 0.12.7
    majorVersion: '0.12'
    prerelease: false
    date: '2015-11-18T11:55:07'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.7-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d798690bdae91174715ac083e31198674f044b68/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.7
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d798690bdae91174715ac083e31198674f044b68/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.7-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d798690bdae91174715ac083e31198674f044b68/0.12/slim/Dockerfile

  - version: 0.12.6
    majorVersion: '0.12'
    prerelease: false
    date: '2015-07-04T00:03:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.6-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/4654fb4bd58a36ae016a907c10b75daf9251a15d/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.6
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/4654fb4bd58a36ae016a907c10b75daf9251a15d/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.6-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/4654fb4bd58a36ae016a907c10b75daf9251a15d/0.12/slim/Dockerfile

  - version: 0.12.5
    majorVersion: '0.12'
    prerelease: false
    date: '2015-06-24T15:39:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.5-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/3e0d2b62fa8524e05ef512564613863ee7f13255/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.5
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/3e0d2b62fa8524e05ef512564613863ee7f13255/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.5-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/3e0d2b62fa8524e05ef512564613863ee7f13255/0.12/slim/Dockerfile

  - version: 0.12.4
    majorVersion: '0.12'
    prerelease: false
    date: '2015-06-22T12:46:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.4-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/95a86848466834d2170740c12c337f1145bb6d39/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.4
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/95a86848466834d2170740c12c337f1145bb6d39/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.4-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/95a86848466834d2170740c12c337f1145bb6d39/0.12/slim/Dockerfile

  - version: 0.12.3
    majorVersion: '0.12'
    prerelease: false
    date: '2015-05-16T21:04:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.3-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/530696ff3003a169521a61a0e04bbf980b7228d5/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.3
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/530696ff3003a169521a61a0e04bbf980b7228d5/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.3-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/530696ff3003a169521a61a0e04bbf980b7228d5/0.12/slim/Dockerfile

  - version: 0.12.2
    majorVersion: '0.12'
    prerelease: false
    date: '2015-05-08T15:31:14'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.2-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/413687b73f1f3d43286bfda1ea8008509538d8bd/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.2
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/413687b73f1f3d43286bfda1ea8008509538d8bd/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.2-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/413687b73f1f3d43286bfda1ea8008509538d8bd/0.12/slim/Dockerfile

  - version: 0.12.1
    majorVersion: '0.12'
    prerelease: false
    date: '2015-03-24T08:56:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.1-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/c2dd5e419816ecc760a2ffc18ea762111b87f092/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.1
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/c2dd5e419816ecc760a2ffc18ea762111b87f092/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.1-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/c2dd5e419816ecc760a2ffc18ea762111b87f092/0.12/slim/Dockerfile

  - version: 0.12.0
    majorVersion: '0.12'
    prerelease: false
    date: '2015-03-23T21:20:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.12.0-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/1a414011089f16390800995f469f5f08446baf7f/0.12/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.12.0
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/1a414011089f16390800995f469f5f08446baf7f/0.12/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.12.0-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/1a414011089f16390800995f469f5f08446baf7f/0.12/slim/Dockerfile

  - version: 0.11.16
    majorVersion: '0.11'
    prerelease: false
    date: '2015-02-06T23:32:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.11.16
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/a1aefc91ac380239998a9f8521bf233ee524d8d0/0.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.11.16-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/a1aefc91ac380239998a9f8521bf233ee524d8d0/0.11/slim/Dockerfile

  - version: 0.11.15
    majorVersion: '0.11'
    prerelease: false
    date: '2015-01-30T17:01:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.11.15
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/181c14e55927b5eb3fc40c0a59af60eee8402734/0.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.11.15-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/181c14e55927b5eb3fc40c0a59af60eee8402734/0.11/slim/Dockerfile

  - version: 0.11.14
    majorVersion: '0.11'
    prerelease: false
    date: '2015-01-13T14:46:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: node:0.11.14-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/21e69d768f26da8aade316a573673a2bf5bfeab7/0.11/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.11.14
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/21e69d768f26da8aade316a573673a2bf5bfeab7/0.11/Dockerfile

  - version: 0.11.13
    majorVersion: '0.11'
    prerelease: false
    date: '2014-09-22T10:51:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.11.13
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/d017d679e92e84a810c580cdb29fcdbba23c2bb9/0.11/Dockerfile

  - version: '0.11'
    majorVersion: '0.11'
    prerelease: false
    date: '2015-02-06T23:32:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.11
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/a1aefc91ac380239998a9f8521bf233ee524d8d0/0.11/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.11-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/a1aefc91ac380239998a9f8521bf233ee524d8d0/0.11/slim/Dockerfile

  - version: 0.10.48
    majorVersion: '0.10'
    prerelease: false
    date: '2016-11-10T11:23:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.48-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.48
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.10.48-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b18c441de44515015f7670d7be0186503ae156ec/0.10/slim/Dockerfile

  - version: 0.10.47
    majorVersion: '0.10'
    prerelease: false
    date: '2016-10-14T21:23:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.47-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.47
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.10.47-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4029a8f71920e1e23efa79602167014f9c325ba0/0.10/slim/Dockerfile

  - version: 0.10.46
    majorVersion: '0.10'
    prerelease: false
    date: '2016-09-23T19:31:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.46-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.46
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/1c65c4ed3785432fe9e9fa71a26799d86df10de4/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.10.46-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5ad063e3ba340743e394114d3038d0fd4e0fe570/0.10/slim/Dockerfile

  - version: 0.10.45
    majorVersion: '0.10'
    prerelease: false
    date: '2016-06-17T12:44:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.45-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5e058d36cc69303d1f62d424615fa03e050f20ef/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.45
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5e058d36cc69303d1f62d424615fa03e050f20ef/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.10.45-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/5e058d36cc69303d1f62d424615fa03e050f20ef/0.10/slim/Dockerfile

  - version: 0.10.44
    majorVersion: '0.10'
    prerelease: false
    date: '2016-05-03T14:05:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.44-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.44
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 3
        image: buildpack-deps:jessie-curl
        imageRepository: node:0.10.44-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/b3367b8845a0a059af00d75d401ecf83d8e57d57/0.10/slim/Dockerfile

  - version: 0.10.43
    majorVersion: '0.10'
    prerelease: false
    date: '2016-03-23T14:38:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.43-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/03d0a92fc4a52087d3bd414b49a977325a7ac4ff/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.43
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/03d0a92fc4a52087d3bd414b49a977325a7ac4ff/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.43-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/03d0a92fc4a52087d3bd414b49a977325a7ac4ff/0.10/slim/Dockerfile

  - version: 0.10.42
    majorVersion: '0.10'
    prerelease: false
    date: '2016-03-02T18:50:34'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.42-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.42
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.42-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/3626d29b1e3e0f9d0c62ce9e261e57dd1b785356/0.10/slim/Dockerfile

  - version: 0.10.41
    majorVersion: '0.10'
    prerelease: false
    date: '2016-01-22T21:03:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.41-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.41
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.41-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/4b1b5052db3d6bc462103fac2671175d447b102e/0.10/slim/Dockerfile

  - version: 0.10.40
    majorVersion: '0.10'
    prerelease: false
    date: '2015-11-24T22:21:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.40-wheezy
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d798690bdae91174715ac083e31198674f044b68/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.40
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d798690bdae91174715ac083e31198674f044b68/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.40-slim
        urlRepository: https://github.com/nodejs/docker-node
        urlDockerfile: https://raw.githubusercontent.com/nodejs/docker-node/d798690bdae91174715ac083e31198674f044b68/0.10/slim/Dockerfile

  - version: 0.10.39
    majorVersion: '0.10'
    prerelease: false
    date: '2015-07-04T00:03:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.39-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/3e0d2b62fa8524e05ef512564613863ee7f13255/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.39
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/3e0d2b62fa8524e05ef512564613863ee7f13255/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.39-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/3e0d2b62fa8524e05ef512564613863ee7f13255/0.10/slim/Dockerfile

  - version: 0.10.38
    majorVersion: '0.10'
    prerelease: false
    date: '2015-06-06T20:52:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.38-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/cb1434d434ca52b31e81452d887e76fc7b24cbef/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.38
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/cb1434d434ca52b31e81452d887e76fc7b24cbef/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.38-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/cb1434d434ca52b31e81452d887e76fc7b24cbef/0.10/slim/Dockerfile

  - version: 0.10.37
    majorVersion: '0.10'
    prerelease: false
    date: '2015-03-14T14:44:47'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.37-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/e7ed4f7f25b68ccc2321bd752529cbdb65feb3ea/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.37
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/e7ed4f7f25b68ccc2321bd752529cbdb65feb3ea/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.37-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/e7ed4f7f25b68ccc2321bd752529cbdb65feb3ea/0.10/slim/Dockerfile

  - version: 0.10.36
    majorVersion: '0.10'
    prerelease: false
    date: '2015-03-09T09:23:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.10.36-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/37b4beab21c1c57f87449b6ea349362e71a0b80a/0.10/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.10.36
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/37b4beab21c1c57f87449b6ea349362e71a0b80a/0.10/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.10.36-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/37b4beab21c1c57f87449b6ea349362e71a0b80a/0.10/slim/Dockerfile

  - version: 0.10.35
    majorVersion: '0.10'
    prerelease: false
    date: '2015-01-21T17:48:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: node:0.10.35-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/ab7e765e3d0f8bb0fefa333faae90f8ea6b72677/0.10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.35
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/ab7e765e3d0f8bb0fefa333faae90f8ea6b72677/0.10/Dockerfile

  - version: 0.10.34
    majorVersion: '0.10'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: node:0.10.34-slim
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/70741d88bf688389bfac7b147573f3b761f9ede9/0.10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.34
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/70741d88bf688389bfac7b147573f3b761f9ede9/0.10/Dockerfile

  - version: 0.10.33
    majorVersion: '0.10'
    prerelease: false
    date: '2014-12-11T14:04:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: node:0.10.33-slim
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/4536d595f06e654f0b41d1afb85c2ddf113be883/0.10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.33
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/4536d595f06e654f0b41d1afb85c2ddf113be883/0.10/Dockerfile

  - version: 0.10.32
    majorVersion: '0.10'
    prerelease: false
    date: '2014-10-20T10:37:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 2
        image: debian:wheezy
        imageRepository: node:0.10.32-slim
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/907d2001dc2d6d592f9ff5432ecd2f7e6cdca6ec/0.10/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.32
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/907d2001dc2d6d592f9ff5432ecd2f7e6cdca6ec/0.10/Dockerfile

  - version: 0.10.31
    majorVersion: '0.10'
    prerelease: false
    date: '2014-09-04T11:18:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.31
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/9cb7597ec2e5e4885e29bff9b2ab0a9cfb9c6b83/0.10/Dockerfile

  - version: 0.10.30
    majorVersion: '0.10'
    prerelease: false
    date: '2014-08-12T10:28:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.30
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/d017d679e92e84a810c580cdb29fcdbba23c2bb9/0.10/Dockerfile

  - version: 0.10.28
    majorVersion: '0.10'
    prerelease: false
    date: '2014-06-04T10:43:30'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: node:0.10.28
        urlRepository: https://github.com/docker-library/node
        urlDockerfile: https://raw.githubusercontent.com/docker-library/node/26fa58fdf7e9f6bc3ce65abfd9fde641a8e61cc8/Dockerfile

  - version: 0.8.28
    majorVersion: '0.8'
    prerelease: false
    date: '2015-08-06T09:31:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.8.28-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/787d816f90dc1bf933b6503b876bdeb752b24f96/0.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.8.28
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/787d816f90dc1bf933b6503b876bdeb752b24f96/0.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.8.28-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/787d816f90dc1bf933b6503b876bdeb752b24f96/0.8/slim/Dockerfile

  - version: '0.8'
    majorVersion: '0.8'
    prerelease: false
    date: '2015-08-06T09:31:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: node:0.8-wheezy
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/787d816f90dc1bf933b6503b876bdeb752b24f96/0.8/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: node:0.8
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/787d816f90dc1bf933b6503b876bdeb752b24f96/0.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: node:0.8-slim
        urlRepository: https://github.com/joyent/docker-node
        urlDockerfile: https://raw.githubusercontent.com/joyent/docker-node/787d816f90dc1bf933b6503b876bdeb752b24f96/0.8/slim/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/perl.yml", "\"
  - version: 5.28.2
    majorVersion: '5.28'
    prerelease: false
    date: '2019-04-27T13:48:34'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.28.2
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/9c264844428eaef70ec0c8eefc213cae53fdf12f/5.028.002-main/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: perl:5.28.2-slim
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/9c264844428eaef70ec0c8eefc213cae53fdf12f/5.028.002-slim/Dockerfile

  - version: 5.28.1
    majorVersion: '5.28'
    prerelease: false
    date: '2019-01-28T14:26:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.28.1
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/65ea3a9754a5b99ffbc84fde515cfa289cffee45/5.028.001-main/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: perl:5.28.1-slim-threaded
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/65ea3a9754a5b99ffbc84fde515cfa289cffee45/5.028.001-slim,threaded/Dockerfile

  - version: 5.28.0
    majorVersion: '5.28'
    prerelease: false
    date: '2019-01-28T14:26:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.28.0
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/892e2b4fbb58c48ee802cd13b34017300c630f18/5.028.000-main/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: perl:5.28.0-slim
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/65ea3a9754a5b99ffbc84fde515cfa289cffee45/5.028.001-slim/Dockerfile

  - version: 5.26.3
    majorVersion: '5.26'
    prerelease: false
    date: '2019-04-27T13:48:34'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.26.3
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/9c264844428eaef70ec0c8eefc213cae53fdf12f/5.026.003-main/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: perl:5.26.3-slim
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/9c264844428eaef70ec0c8eefc213cae53fdf12f/5.026.003-slim/Dockerfile

  - version: 5.26.2
    majorVersion: '5.26'
    prerelease: false
    date: '2018-08-12T15:54:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.26.2
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/892e2b4fbb58c48ee802cd13b34017300c630f18/5.026.002-main/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: perl:5.26.2-slim
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/892e2b4fbb58c48ee802cd13b34017300c630f18/5.026.002-slim/Dockerfile

  - version: 5.26.1
    majorVersion: '5.26'
    prerelease: false
    date: '2017-12-04T12:08:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.26.1
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/a5c2d6c896807e9c1beec4ebac01c7f30c075bf0/5.026.001-64bit/Dockerfile

  - version: 5.26.0
    majorVersion: '5.26'
    prerelease: false
    date: '2017-08-27T01:54:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.26.0
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/8044d4ba7627712b6fbed84e544d2d78ca805f96/5.026.000-64bit/Dockerfile

  - version: 5.24.4
    majorVersion: '5.24'
    prerelease: false
    date: '2019-04-27T13:48:34'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.24.4
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/9c264844428eaef70ec0c8eefc213cae53fdf12f/5.024.004-main/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: perl:5.24.4-slim
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/9c264844428eaef70ec0c8eefc213cae53fdf12f/5.024.004-slim/Dockerfile

  - version: 5.24.3
    majorVersion: '5.24'
    prerelease: false
    date: '2017-12-04T12:08:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.24.3
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/a5c2d6c896807e9c1beec4ebac01c7f30c075bf0/5.024.003-64bit/Dockerfile

  - version: 5.24.2
    majorVersion: '5.24'
    prerelease: false
    date: '2017-08-27T01:54:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.24.2
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/8044d4ba7627712b6fbed84e544d2d78ca805f96/5.024.002-64bit/Dockerfile

  - version: 5.24.1
    majorVersion: '5.24'
    prerelease: false
    date: '2017-03-04T09:36:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: perl:5.24.1
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/8b57a74dbc745fb2723bc60ba98768846dae37f6/5.024.001-64bit/Dockerfile

  - version: 5.22.4
    majorVersion: '5.22'
    prerelease: false
    date: '2018-04-19T23:31:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: perl:5.22.4
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/1c201e950ebe90f35c449f69df6ca7151cb0068d/5.022.004-64bit/Dockerfile

  - version: 5.22.3
    majorVersion: '5.22'
    prerelease: false
    date: '2017-03-04T09:36:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: perl:5.22.3
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/8b57a74dbc745fb2723bc60ba98768846dae37f6/5.022.003-64bit/Dockerfile

  - version: 5.20.0
    majorVersion: '5.20'
    prerelease: false
    date: '2014-07-08T00:26:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: perl:5.20.0
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/34796bd21f9f48816e0dbb2e5126593d83588f78/5.020.000-64bit/Dockerfile

  - version: '5.20'
    majorVersion: '5.20'
    prerelease: false
    date: '2014-07-08T00:26:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: perl:5.20
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/34796bd21f9f48816e0dbb2e5126593d83588f78/5.020.000-64bit/Dockerfile

  - version: 5.18.2
    majorVersion: '5.18'
    prerelease: false
    date: '2014-07-08T00:26:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: perl:5.18.2
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/34796bd21f9f48816e0dbb2e5126593d83588f78/5.018.002-64bit/Dockerfile

  - version: '5.18'
    majorVersion: '5.18'
    prerelease: false
    date: '2014-07-08T00:26:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: perl:5.18
        urlRepository: https://github.com/perl/docker-perl
        urlDockerfile: https://raw.githubusercontent.com/perl/docker-perl/34796bd21f9f48816e0dbb2e5126593d83588f78/5.018.002-64bit/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/php.yml", "\"
  - version: 7.3.5-zts
    majorVersion: '7.3'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.5-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.5-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.5-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/stretch/zts/Dockerfile

  - version: 7.3.5-fpm
    majorVersion: '7.3'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.5-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.5-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.5-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/stretch/fpm/Dockerfile

  - version: 7.3.5-cli
    majorVersion: '7.3'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.5-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.5-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.5-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/stretch/cli/Dockerfile

  - version: 7.3.5-apache
    majorVersion: '7.3'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.5-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85b2af63546309c3c7b895524db10ef02aa4edba/7.3/stretch/apache/Dockerfile

  - version: 7.3.4-zts
    majorVersion: '7.3'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.4-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.4-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.4-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/stretch/zts/Dockerfile

  - version: 7.3.4-fpm
    majorVersion: '7.3'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.4-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.3/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.4-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.3/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.4-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.3/stretch/fpm/Dockerfile

  - version: 7.3.4-cli
    majorVersion: '7.3'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.4-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.4-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.4-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/stretch/cli/Dockerfile

  - version: 7.3.4-apache
    majorVersion: '7.3'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.4-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5c895da277a71578af9561b0e282e6cb0764434/7.3/stretch/apache/Dockerfile

  - version: 7.3.3-zts
    majorVersion: '7.3'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.3-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.3-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.3-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/stretch/zts/Dockerfile

  - version: 7.3.3-fpm
    majorVersion: '7.3'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.3-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.3-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.3-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/stretch/fpm/Dockerfile

  - version: 7.3.3-cli
    majorVersion: '7.3'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.3-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.3-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.3-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/stretch/cli/Dockerfile

  - version: 7.3.3-apache
    majorVersion: '7.3'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.3-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bb16de8a711d1ba1dc76adf4665b3b1c06a06922/7.3/stretch/apache/Dockerfile

  - version: 7.3.2-zts
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.2-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.2-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.2-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/stretch/zts/Dockerfile

  - version: 7.3.2-fpm
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.2-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.2-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.2-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/stretch/fpm/Dockerfile

  - version: 7.3.2-cli
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.2-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.2-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.2-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/stretch/cli/Dockerfile

  - version: 7.3.2-apache
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.2-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.3/stretch/apache/Dockerfile

  - version: 7.3.1-zts
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.1-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.3/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.1-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.3/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.1-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.3/stretch/zts/Dockerfile

  - version: 7.3.1-fpm
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.1-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.3/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.1-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.3/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.1-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.3/stretch/fpm/Dockerfile

  - version: 7.3.1-cli
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.1-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.3/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.3.1-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.3/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.1-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.3/stretch/cli/Dockerfile

  - version: 7.3.1-apache
    majorVersion: '7.3'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.1-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.3/stretch/apache/Dockerfile

  - version: 7.3.0-zts
    majorVersion: '7.3'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.0-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a280ab8e8790052338ce59a1fee739df8f831f16/7.3/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.0-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a280ab8e8790052338ce59a1fee739df8f831f16/7.3/stretch/zts/Dockerfile

  - version: 7.3.0-fpm
    majorVersion: '7.3'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.0-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/26ab6801ff1fafc04a972f63e5c963c7225614c1/7.3/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.0-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/26ab6801ff1fafc04a972f63e5c963c7225614c1/7.3/stretch/fpm/Dockerfile

  - version: 7.3.0-cli
    majorVersion: '7.3'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.3.0-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a280ab8e8790052338ce59a1fee739df8f831f16/7.3/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.0-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a280ab8e8790052338ce59a1fee739df8f831f16/7.3/stretch/cli/Dockerfile

  - version: 7.3.0-apache
    majorVersion: '7.3'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.3.0-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a280ab8e8790052338ce59a1fee739df8f831f16/7.3/stretch/apache/Dockerfile

  - version: 7.2.18-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.18-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.18-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.18-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/stretch/zts/Dockerfile

  - version: 7.2.18-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.18-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.18-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.18-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/stretch/fpm/Dockerfile

  - version: 7.2.18-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.18-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.18-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.18-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/stretch/cli/Dockerfile

  - version: 7.2.18-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.18-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d9352e08aa39f699cfedb2b564aeb60955b06469/7.2/stretch/apache/Dockerfile

  - version: 7.2.17-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.17-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.17-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.17-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/stretch/zts/Dockerfile

  - version: 7.2.17-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.17-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.2/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.17-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.2/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.17-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.2/stretch/fpm/Dockerfile

  - version: 7.2.17-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.17-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.17-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.17-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/stretch/cli/Dockerfile

  - version: 7.2.17-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.17-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf02ea0f79cf7cff3853f6d4254b95b65d44cc12/7.2/stretch/apache/Dockerfile

  - version: 7.2.16-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.16-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.16-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.16-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/stretch/zts/Dockerfile

  - version: 7.2.16-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.16-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.16-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.16-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/stretch/fpm/Dockerfile

  - version: 7.2.16-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.16-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.16-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.16-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/stretch/cli/Dockerfile

  - version: 7.2.16-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.16-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/873725e57ec2fc5f2642dc0023676597bcc4bea9/7.2/stretch/apache/Dockerfile

  - version: 7.2.15-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.15-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.15-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.15-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/stretch/zts/Dockerfile

  - version: 7.2.15-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.15-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.15-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.15-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/stretch/fpm/Dockerfile

  - version: 7.2.15-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.15-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.15-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.15-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/stretch/cli/Dockerfile

  - version: 7.2.15-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.15-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.2/stretch/apache/Dockerfile

  - version: 7.2.14-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.14-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.2/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.14-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.2/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.14-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.2/stretch/zts/Dockerfile

  - version: 7.2.14-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.14-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.2/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.14-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.2/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.14-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.2/stretch/fpm/Dockerfile

  - version: 7.2.14-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.14-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.2/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.2.14-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/90beb19f3889260f6f622012218e33bd643f08a9/7.2/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.14-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.2/stretch/cli/Dockerfile

  - version: 7.2.14-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2019-02-05T13:59:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.14-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ea377551f7527c4e5602bea716c4ba0011dbaee9/7.2/stretch/apache/Dockerfile

  - version: 7.2.13-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.13-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.13-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/stretch/zts/Dockerfile

  - version: 7.2.13-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.13-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.13-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/stretch/fpm/Dockerfile

  - version: 7.2.13-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.13-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.13-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/stretch/cli/Dockerfile

  - version: 7.2.13-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2019-01-04T16:12:23'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.13-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c88c3d52f41a370f3a62e3ded62b7b223b4cb846/7.2/stretch/apache/Dockerfile

  - version: 7.2.12-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.12-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.2/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.12-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.2/stretch/zts/Dockerfile

  - version: 7.2.12-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.12-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.2/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.12-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.2/stretch/fpm/Dockerfile

  - version: 7.2.12-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.12-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.2/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.12-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.2/stretch/cli/Dockerfile

  - version: 7.2.12-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.12-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/7.2/stretch/apache/Dockerfile

  - version: 7.2.11-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-25T13:16:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.11-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.11-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.11-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.11-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/stretch/zts/Dockerfile

  - version: 7.2.11-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-25T13:16:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.11-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.11-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.11-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.11-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/stretch/fpm/Dockerfile

  - version: 7.2.11-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-25T13:16:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.11-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.11-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.11-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.11-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/stretch/cli/Dockerfile

  - version: 7.2.11-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-25T13:16:53'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.11-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f363b9f8a0e23e79faaa624ff5bf160b9dec18f4/7.2/stretch/apache/Dockerfile

  - version: 7.2.10-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.10-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.10-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.10-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.10-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/stretch/zts/Dockerfile

  - version: 7.2.10-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.10-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.10-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.10-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.10-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/stretch/fpm/Dockerfile

  - version: 7.2.10-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.10-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.10-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.10-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.10-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/stretch/cli/Dockerfile

  - version: 7.2.10-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.10-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d97098c8c6af46ae1211e65ff052278ab39ba45c/7.2/stretch/apache/Dockerfile

  - version: 7.2.9-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.9-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.9-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.9-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.9-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/stretch/zts/Dockerfile

  - version: 7.2.9-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.9-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.9-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.9-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.9-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/stretch/fpm/Dockerfile

  - version: 7.2.9-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.9-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.9-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.2.9-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.9-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/stretch/cli/Dockerfile

  - version: 7.2.9-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.9-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.2/stretch/apache/Dockerfile

  - version: 7.2.8-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.8-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.8-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.8-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/stretch/zts/Dockerfile

  - version: 7.2.8-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.8-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.8-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.8-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/stretch/fpm/Dockerfile

  - version: 7.2.8-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.8-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.8-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.8-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/stretch/cli/Dockerfile

  - version: 7.2.8-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.8-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85af0c14e3f23689f0851d3164ab3b630e7f016f/7.2/stretch/apache/Dockerfile

  - version: 7.2.7-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.7-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.7-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.7-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/stretch/zts/Dockerfile

  - version: 7.2.7-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.7-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.7-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.7-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/stretch/fpm/Dockerfile

  - version: 7.2.7-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.7-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.7-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.7-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/stretch/cli/Dockerfile

  - version: 7.2.7-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.7-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4af0a8734a48ab84ee96de513aabc45418b63dc5/7.2/stretch/apache/Dockerfile

  - version: 7.2.6-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.6-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.6-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.6-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/stretch/zts/Dockerfile

  - version: 7.2.6-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.6-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.6-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.6-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/stretch/fpm/Dockerfile

  - version: 7.2.6-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.6-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.6-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.6-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/stretch/cli/Dockerfile

  - version: 7.2.6-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.6-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.2/stretch/apache/Dockerfile

  - version: 7.2.5-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-05-23T10:13:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.5-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.5-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.5-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/stretch/zts/Dockerfile

  - version: 7.2.5-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-05-23T10:13:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.5-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.5-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.5-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/stretch/fpm/Dockerfile

  - version: 7.2.5-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-05-23T10:13:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.5-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.5-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.5-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/stretch/cli/Dockerfile

  - version: 7.2.5-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-05-23T10:13:17'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.5-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.2/stretch/apache/Dockerfile

  - version: 7.2.4-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.4-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.4-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.4-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/stretch/zts/Dockerfile

  - version: 7.2.4-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.4-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.4-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.4-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/stretch/fpm/Dockerfile

  - version: 7.2.4-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.4-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.4-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.4-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/stretch/cli/Dockerfile

  - version: 7.2.4-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.4-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.2/stretch/apache/Dockerfile

  - version: 7.2.3-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.3-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.3-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.3-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/stretch/zts/Dockerfile

  - version: 7.2.3-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.3-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.3-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.3-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/stretch/fpm/Dockerfile

  - version: 7.2.3-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.3-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.3-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.3-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/stretch/cli/Dockerfile

  - version: 7.2.3-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.3-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7707290c53077c0fbdbe8c768e98c51ba06025f1/7.2/stretch/apache/Dockerfile

  - version: 7.2.2-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.2-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.2-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.2-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/stretch/zts/Dockerfile

  - version: 7.2.2-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.2-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.2-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.2-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/stretch/fpm/Dockerfile

  - version: 7.2.2-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.2-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.2-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.2-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/stretch/cli/Dockerfile

  - version: 7.2.2-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.2-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fd8e15250a0c7667b161c34a25f7916b01f72367/7.2/stretch/apache/Dockerfile

  - version: 7.2.1-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.1-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.1-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.1-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/stretch/zts/Dockerfile

  - version: 7.2.1-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.1-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.1-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.1-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.2/stretch/fpm/Dockerfile

  - version: 7.2.1-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.1-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.1-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.1-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/stretch/cli/Dockerfile

  - version: 7.2.1-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.1-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f4baf0edbc4e05e241938c68bcc7c9635707583d/7.2/stretch/apache/Dockerfile

  - version: 7.2.0-zts
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.0-zts-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.2/alpine3.6/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.0-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.2/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.0-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.2/stretch/zts/Dockerfile

  - version: 7.2.0-fpm
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.0-fpm-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.2/alpine3.6/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.0-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.2/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.0-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.2/stretch/fpm/Dockerfile

  - version: 7.2.0-cli
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: php:7.2.0-cli-alpine3.6
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.2/alpine3.6/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.2.0-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.2/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.0-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.2/stretch/cli/Dockerfile

  - version: 7.2.0-apache
    majorVersion: '7.2'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.2.0-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.2/stretch/apache/Dockerfile

  - version: 7.1.29-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.29-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.29-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.29-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.29-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/stretch/zts/Dockerfile

  - version: 7.1.29-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.29-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.29-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.29-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.29-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/stretch/fpm/Dockerfile

  - version: 7.1.29-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.29-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.29-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.29-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.29-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/stretch/cli/Dockerfile

  - version: 7.1.29-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2019-05-03T06:46:11'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.29-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.29-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e63194a0006848edb13b7eff5a7f9d790d679428/7.1/stretch/apache/Dockerfile

  - version: 7.1.28-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.28-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.28-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.28-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.28-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/stretch/zts/Dockerfile

  - version: 7.1.28-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.28-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.1/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.28-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.1/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.28-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.28-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/545a73c9704c5f74b79f4373ffa02776159079a5/7.1/stretch/fpm/Dockerfile

  - version: 7.1.28-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.28-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.28-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.28-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.28-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/stretch/cli/Dockerfile

  - version: 7.1.28-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2019-04-23T14:31:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.28-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.28-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4ac9fae8a99dabcd15f660f8c950a51a1fc6b833/7.1/stretch/apache/Dockerfile

  - version: 7.1.27-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.27-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.27-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.27-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.27-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/stretch/zts/Dockerfile

  - version: 7.1.27-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.27-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.27-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.27-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.27-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/stretch/fpm/Dockerfile

  - version: 7.1.27-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.27-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.27-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.27-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.27-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/stretch/cli/Dockerfile

  - version: 7.1.27-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2019-03-07T15:51:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.27-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.27-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a5cc6ff7d8f14330e55f8df673c69e2f35adf957/7.1/stretch/apache/Dockerfile

  - version: 7.1.26-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.26-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/alpine3.8/zts/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.26-zts-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/alpine3.9/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.26-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.26-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/stretch/zts/Dockerfile

  - version: 7.1.26-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.26-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/alpine3.8/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.26-fpm-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/alpine3.9/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.26-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.26-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/stretch/fpm/Dockerfile

  - version: 7.1.26-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.26-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/alpine3.8/cli/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: php:7.1.26-cli-alpine3.9
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/alpine3.9/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.26-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.26-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/stretch/cli/Dockerfile

  - version: 7.1.26-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2019-02-20T14:32:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.26-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.26-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/640a30e8ff27b1ad7523a212522472fda84d56ff/7.1/stretch/apache/Dockerfile

  - version: 7.1.25-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2019-01-10T13:34:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.25-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.25-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.25-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/stretch/zts/Dockerfile

  - version: 7.1.25-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2019-01-10T13:34:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.25-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.25-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.25-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/stretch/fpm/Dockerfile

  - version: 7.1.25-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2019-01-10T13:34:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.25-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.25-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.25-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/stretch/cli/Dockerfile

  - version: 7.1.25-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2019-01-10T13:34:01'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.25-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.25-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4fa4c526cf52725f859d7067006e8d4b3c226a52/7.1/stretch/apache/Dockerfile

  - version: 7.1.24-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.24-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.24-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.24-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/stretch/zts/Dockerfile

  - version: 7.1.24-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.24-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.24-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.24-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/stretch/fpm/Dockerfile

  - version: 7.1.24-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.24-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.24-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.24-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.1/stretch/cli/Dockerfile

  - version: 7.1.24-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.24-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.24-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/7.1/stretch/apache/Dockerfile

  - version: 7.1.23-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-08T17:16:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.23-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.23-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.23-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.23-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/stretch/zts/Dockerfile

  - version: 7.1.23-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-08T17:16:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.23-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.23-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.23-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.23-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/stretch/fpm/Dockerfile

  - version: 7.1.23-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-08T17:16:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.23-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.23-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.23-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.23-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/stretch/cli/Dockerfile

  - version: 7.1.23-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-11-08T17:16:24'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.23-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.23-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3f3220a0aa5992cdc08128cbbe0f2490694d6be9/7.1/stretch/apache/Dockerfile

  - version: 7.1.22-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.22-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.22-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.22-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.22-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/stretch/zts/Dockerfile

  - version: 7.1.22-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.22-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.22-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.22-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.22-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/stretch/fpm/Dockerfile

  - version: 7.1.22-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.22-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.22-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.22-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.22-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/stretch/cli/Dockerfile

  - version: 7.1.22-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-10-11T13:23:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.22-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.22-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c856411d1c21111855a54c5d29f2bfe099d63ce7/7.1/stretch/apache/Dockerfile

  - version: 7.1.21-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.21-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.21-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.21-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.21-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/stretch/zts/Dockerfile

  - version: 7.1.21-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.21-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.21-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.21-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.21-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/stretch/fpm/Dockerfile

  - version: 7.1.21-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.21-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:7.1.21-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.21-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.21-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/stretch/cli/Dockerfile

  - version: 7.1.21-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.21-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.21-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.1/stretch/apache/Dockerfile

  - version: 7.1.20-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.20-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.20-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.20-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/stretch/zts/Dockerfile

  - version: 7.1.20-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.20-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.20-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.20-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/stretch/fpm/Dockerfile

  - version: 7.1.20-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.20-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.20-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.20-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/stretch/cli/Dockerfile

  - version: 7.1.20-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-07-20T11:17:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.20-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.20-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b950cc18b2977a96f472345024bed00cd07814/7.1/stretch/apache/Dockerfile

  - version: 7.1.19-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.19-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.19-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.19-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/stretch/zts/Dockerfile

  - version: 7.1.19-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.19-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.19-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.19-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/stretch/fpm/Dockerfile

  - version: 7.1.19-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.19-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.19-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.19-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/stretch/cli/Dockerfile

  - version: 7.1.19-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.19-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.19-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b599d7375c12ff69e4d11ea10c3dea56dd670eb9/7.1/stretch/apache/Dockerfile

  - version: 7.1.18-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.18-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.18-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.18-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/stretch/zts/Dockerfile

  - version: 7.1.18-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.18-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.18-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.18-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/stretch/fpm/Dockerfile

  - version: 7.1.18-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.18-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.18-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.18-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/stretch/cli/Dockerfile

  - version: 7.1.18-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-06-20T09:21:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.18-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.18-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.1/stretch/apache/Dockerfile

  - version: 7.1.17-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-05-25T11:10:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.17-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/alpine3.4/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.17-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/27c65bbd606d1745765b89bf43f39b06efad1e43/7.1/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.17-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.17-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/27c65bbd606d1745765b89bf43f39b06efad1e43/7.1/stretch/zts/Dockerfile

  - version: 7.1.17-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-05-25T11:10:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.17-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/alpine3.4/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.17-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/27c65bbd606d1745765b89bf43f39b06efad1e43/7.1/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.17-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.17-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/27c65bbd606d1745765b89bf43f39b06efad1e43/7.1/stretch/fpm/Dockerfile

  - version: 7.1.17-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-05-25T11:10:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.17-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/alpine3.4/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.1.17-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/27c65bbd606d1745765b89bf43f39b06efad1e43/7.1/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.17-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.17-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/27c65bbd606d1745765b89bf43f39b06efad1e43/7.1/stretch/cli/Dockerfile

  - version: 7.1.17-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-05-25T11:10:29'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.17-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.1/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.1.17-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/78125d0d3c32a87a05f56c12ca45778e3d4bb7c9/7.1/stretch/apache/Dockerfile

  - version: 7.1.16-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.16-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.16-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/jessie/zts/Dockerfile

  - version: 7.1.16-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.16-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.16-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/jessie/fpm/Dockerfile

  - version: 7.1.16-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.16-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.16-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/jessie/cli/Dockerfile

  - version: 7.1.16-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.16-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.1/jessie/apache/Dockerfile

  - version: 7.1.15-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.15-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.15-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/jessie/zts/Dockerfile

  - version: 7.1.15-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.15-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.15-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/jessie/fpm/Dockerfile

  - version: 7.1.15-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.15-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.15-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/jessie/cli/Dockerfile

  - version: 7.1.15-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.15-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.1/jessie/apache/Dockerfile

  - version: 7.1.14-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.14-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.14-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/jessie/zts/Dockerfile

  - version: 7.1.14-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.14-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.14-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/jessie/fpm/Dockerfile

  - version: 7.1.14-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.14-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.14-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/jessie/cli/Dockerfile

  - version: 7.1.14-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.14-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/499a0e89e73db985874082ea936529b96413ceb0/7.1/jessie/apache/Dockerfile

  - version: 7.1.13-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.13-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6be205eee15aed27706a958379cec836fe305017/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.13-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6be205eee15aed27706a958379cec836fe305017/7.1/jessie/zts/Dockerfile

  - version: 7.1.13-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.13-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.13-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.1/jessie/fpm/Dockerfile

  - version: 7.1.13-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.13-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6be205eee15aed27706a958379cec836fe305017/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.13-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6be205eee15aed27706a958379cec836fe305017/7.1/jessie/cli/Dockerfile

  - version: 7.1.13-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-18T11:29:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.13-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6be205eee15aed27706a958379cec836fe305017/7.1/jessie/apache/Dockerfile

  - version: 7.1.12-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.12-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.12-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.1/jessie/zts/Dockerfile

  - version: 7.1.12-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.12-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.12-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.1/jessie/fpm/Dockerfile

  - version: 7.1.12-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.12-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.12-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.1/jessie/cli/Dockerfile

  - version: 7.1.12-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.12-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.1/jessie/apache/Dockerfile

  - version: 7.1.11-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.11-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/05fe6f9eb601984e5f95057578ce830a21d11716/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.11-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.1/jessie/zts/Dockerfile

  - version: 7.1.11-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.11-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/05fe6f9eb601984e5f95057578ce830a21d11716/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.11-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.1/jessie/fpm/Dockerfile

  - version: 7.1.11-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.11-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/05fe6f9eb601984e5f95057578ce830a21d11716/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.11-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.1/jessie/cli/Dockerfile

  - version: 7.1.11-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.11-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.1/jessie/apache/Dockerfile

  - version: 7.1.10-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.10-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.10-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/jessie/zts/Dockerfile

  - version: 7.1.10-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.10-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.10-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/jessie/fpm/Dockerfile

  - version: 7.1.10-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.10-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.10-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/jessie/cli/Dockerfile

  - version: 7.1.10-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.10-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.1/jessie/apache/Dockerfile

  - version: 7.1.9-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-09-28T11:05:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.9-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fc24121abdce6d74be6d4df6758230b2074d9066/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.9-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.1/zts/Dockerfile

  - version: 7.1.9-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-09-28T11:05:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.9-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fc24121abdce6d74be6d4df6758230b2074d9066/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.9-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.1/fpm/Dockerfile

  - version: 7.1.9-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-09-28T11:05:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.9-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.1/Dockerfile

  - version: 7.1.9-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-09-28T11:05:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.9-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.1/apache/Dockerfile

  - version: 7.1.8-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-31T09:21:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.8-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/903540ea7918b5cabed6b32e81f8518f9e6f204f/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.8-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/903540ea7918b5cabed6b32e81f8518f9e6f204f/7.1/zts/Dockerfile

  - version: 7.1.8-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-31T09:21:35'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.8-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/903540ea7918b5cabed6b32e81f8518f9e6f204f/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.8-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/903540ea7918b5cabed6b32e81f8518f9e6f204f/7.1/fpm/Dockerfile

  - version: 7.1.8-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-31T09:21:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.8-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/903540ea7918b5cabed6b32e81f8518f9e6f204f/7.1/Dockerfile

  - version: 7.1.8-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-31T09:21:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.8-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/903540ea7918b5cabed6b32e81f8518f9e6f204f/7.1/apache/Dockerfile

  - version: 7.1.7-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-03T11:49:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.7-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.7-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.1/zts/Dockerfile

  - version: 7.1.7-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-03T11:49:42'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.7-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.7-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.1/fpm/Dockerfile

  - version: 7.1.7-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-03T11:49:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.7-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.1/Dockerfile

  - version: 7.1.7-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-08-03T11:49:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.7-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.1/apache/Dockerfile

  - version: 7.1.6-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.6-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/53d257f279619be1712ce542fb8f43bbce453bc1/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.6-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/53d257f279619be1712ce542fb8f43bbce453bc1/7.1/zts/Dockerfile

  - version: 7.1.6-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.6-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/53d257f279619be1712ce542fb8f43bbce453bc1/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.6-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/53d257f279619be1712ce542fb8f43bbce453bc1/7.1/fpm/Dockerfile

  - version: 7.1.6-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.6-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/53d257f279619be1712ce542fb8f43bbce453bc1/7.1/Dockerfile

  - version: 7.1.6-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.6-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/53d257f279619be1712ce542fb8f43bbce453bc1/7.1/apache/Dockerfile

  - version: 7.1.5-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-06-08T09:52:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.5-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.5-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.1/zts/Dockerfile

  - version: 7.1.5-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-06-08T09:52:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.5-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.5-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.1/fpm/Dockerfile

  - version: 7.1.5-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-06-08T09:52:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.5-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.1/Dockerfile

  - version: 7.1.5-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-06-08T09:52:05'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.5-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.1/apache/Dockerfile

  - version: 7.1.4-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.4-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.4-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.1/zts/Dockerfile

  - version: 7.1.4-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.4-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.4-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.1/fpm/Dockerfile

  - version: 7.1.4-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.4-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.1/Dockerfile

  - version: 7.1.4-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.4-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.1/apache/Dockerfile

  - version: 7.1.3-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.3-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ec02e1bcf1196ed3f8b74ecc956cf81554e32db8/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.3-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ec02e1bcf1196ed3f8b74ecc956cf81554e32db8/7.1/zts/Dockerfile

  - version: 7.1.3-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.3-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ec02e1bcf1196ed3f8b74ecc956cf81554e32db8/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.3-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ec02e1bcf1196ed3f8b74ecc956cf81554e32db8/7.1/fpm/Dockerfile

  - version: 7.1.3-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.3-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ec02e1bcf1196ed3f8b74ecc956cf81554e32db8/7.1/Dockerfile

  - version: 7.1.3-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.3-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ec02e1bcf1196ed3f8b74ecc956cf81554e32db8/7.1/apache/Dockerfile

  - version: 7.1.2-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.2-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/738fcd0bdaed0b27e56b4975be94abe2dbe0b0b4/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.2-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/738fcd0bdaed0b27e56b4975be94abe2dbe0b0b4/7.1/zts/Dockerfile

  - version: 7.1.2-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.2-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/738fcd0bdaed0b27e56b4975be94abe2dbe0b0b4/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.2-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/738fcd0bdaed0b27e56b4975be94abe2dbe0b0b4/7.1/fpm/Dockerfile

  - version: 7.1.2-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.2-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/738fcd0bdaed0b27e56b4975be94abe2dbe0b0b4/7.1/Dockerfile

  - version: 7.1.2-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.2-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/738fcd0bdaed0b27e56b4975be94abe2dbe0b0b4/7.1/apache/Dockerfile

  - version: 7.1.1-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-16T16:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.1-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.1-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.1/zts/Dockerfile

  - version: 7.1.1-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-16T16:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.1-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.1-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.1/fpm/Dockerfile

  - version: 7.1.1-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-16T16:22:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.1-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.1/Dockerfile

  - version: 7.1.1-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-02-16T16:22:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.1-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e573f8f7fda5d7378bae9c6a936a298b850c4076/7.1/apache/Dockerfile

  - version: 7.1.0-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.0-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ac528cf10d42f3f47dcb9ded3477781fb11f714/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.0-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.1/zts/Dockerfile

  - version: 7.1.0-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1.0-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ac528cf10d42f3f47dcb9ded3477781fb11f714/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.0-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.1/fpm/Dockerfile

  - version: 7.1.0-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.0-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.1/Dockerfile

  - version: 7.1.0-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1.0-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.1/apache/Dockerfile

  - version: 7.1-zts
    majorVersion: '7.1'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cbca335c53456146e4dc868a1dac08bd66a1b019/7.1/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cbca335c53456146e4dc868a1dac08bd66a1b019/7.1/zts/Dockerfile

  - version: 7.1-fpm
    majorVersion: '7.1'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.1-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cbca335c53456146e4dc868a1dac08bd66a1b019/7.1/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cbca335c53456146e4dc868a1dac08bd66a1b019/7.1/fpm/Dockerfile

  - version: 7.1-cli
    majorVersion: '7.1'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cbca335c53456146e4dc868a1dac08bd66a1b019/7.1/Dockerfile

  - version: 7.1-apache
    majorVersion: '7.1'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.1-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cbca335c53456146e4dc868a1dac08bd66a1b019/7.1/apache/Dockerfile

  - version: 7.0.33-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2019-01-02T16:38:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.33-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.33-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.33-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/stretch/zts/Dockerfile

  - version: 7.0.33-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2019-01-02T16:38:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.33-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.33-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.33-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/stretch/fpm/Dockerfile

  - version: 7.0.33-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2019-01-02T16:38:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.33-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.33-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.33-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/stretch/cli/Dockerfile

  - version: 7.0.33-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2019-01-02T16:38:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.33-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.33-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b4319e8f767f1200c9013e08baf2c34b9c84e301/7.0/stretch/apache/Dockerfile

  - version: 7.0.32-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.32-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.32-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.32-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/stretch/zts/Dockerfile

  - version: 7.0.32-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.32-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.32-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.32-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/stretch/fpm/Dockerfile

  - version: 7.0.32-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.32-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.32-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.32-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/7.0/stretch/cli/Dockerfile

  - version: 7.0.32-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.32-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/7.0/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.32-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/7.0/stretch/apache/Dockerfile

  - version: 7.0.31-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.31-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.31-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.31-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/stretch/zts/Dockerfile

  - version: 7.0.31-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.31-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.31-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.31-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/stretch/fpm/Dockerfile

  - version: 7.0.31-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.31-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.31-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.31-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/stretch/cli/Dockerfile

  - version: 7.0.31-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.31-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.31-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/7.0/stretch/apache/Dockerfile

  - version: 7.0.30-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.30-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.0/alpine3.4/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.30-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.30-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.30-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/stretch/zts/Dockerfile

  - version: 7.0.30-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.30-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.0/alpine3.4/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.30-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.30-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.30-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/stretch/fpm/Dockerfile

  - version: 7.0.30-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.30-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/7.0/alpine3.4/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:7.0.30-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.30-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.30-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/stretch/cli/Dockerfile

  - version: 7.0.30-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.30-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:7.0.30-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/7.0/stretch/apache/Dockerfile

  - version: 7.0.29-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.29-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.29-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/jessie/zts/Dockerfile

  - version: 7.0.29-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.29-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.29-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/jessie/fpm/Dockerfile

  - version: 7.0.29-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.29-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.29-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/jessie/cli/Dockerfile

  - version: 7.0.29-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-04-23T15:30:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.29-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/7.0/jessie/apache/Dockerfile

  - version: 7.0.28-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.28-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.28-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/jessie/zts/Dockerfile

  - version: 7.0.28-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.28-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.28-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/jessie/fpm/Dockerfile

  - version: 7.0.28-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.28-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.28-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/jessie/cli/Dockerfile

  - version: 7.0.28-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.28-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/7.0/jessie/apache/Dockerfile

  - version: 7.0.27-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.27-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2eb7af007026493eb02f5e87c082ab78543a1f2d/7.0/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.27-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2eb7af007026493eb02f5e87c082ab78543a1f2d/7.0/jessie/zts/Dockerfile

  - version: 7.0.27-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.27-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.0/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.27-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/7.0/jessie/fpm/Dockerfile

  - version: 7.0.27-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.27-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2eb7af007026493eb02f5e87c082ab78543a1f2d/7.0/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.27-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2eb7af007026493eb02f5e87c082ab78543a1f2d/7.0/jessie/cli/Dockerfile

  - version: 7.0.27-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.27-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2eb7af007026493eb02f5e87c082ab78543a1f2d/7.0/jessie/apache/Dockerfile

  - version: 7.0.26-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.26-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.0/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.26-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.0/jessie/zts/Dockerfile

  - version: 7.0.26-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.26-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.0/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.26-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.0/jessie/fpm/Dockerfile

  - version: 7.0.26-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.26-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/7.0/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.26-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.0/jessie/cli/Dockerfile

  - version: 7.0.26-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.26-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/7.0/jessie/apache/Dockerfile

  - version: 7.0.25-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.25-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/89894ff2da4da406d52931f1acebf9a2f349a898/7.0/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.25-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.0/jessie/zts/Dockerfile

  - version: 7.0.25-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.25-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/89894ff2da4da406d52931f1acebf9a2f349a898/7.0/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.25-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.0/jessie/fpm/Dockerfile

  - version: 7.0.25-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.25-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/89894ff2da4da406d52931f1acebf9a2f349a898/7.0/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.25-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.0/jessie/cli/Dockerfile

  - version: 7.0.25-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-11-15T14:22:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.25-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/bfe27759103fa6050601060165409b5b3be06395/7.0/jessie/apache/Dockerfile

  - version: 7.0.24-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-10-25T16:21:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.24-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.24-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/jessie/zts/Dockerfile

  - version: 7.0.24-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-10-25T16:21:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.24-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.24-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/jessie/fpm/Dockerfile

  - version: 7.0.24-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-10-25T16:21:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.24-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.24-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/jessie/cli/Dockerfile

  - version: 7.0.24-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-10-25T16:21:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.24-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/7.0/jessie/apache/Dockerfile

  - version: 7.0.23-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-09-27T10:43:12'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.23-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fc24121abdce6d74be6d4df6758230b2074d9066/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.23-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.0/zts/Dockerfile

  - version: 7.0.23-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-09-27T10:43:12'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.23-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fc24121abdce6d74be6d4df6758230b2074d9066/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.23-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.0/fpm/Dockerfile

  - version: 7.0.23-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-09-27T10:43:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.23-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.0/Dockerfile

  - version: 7.0.23-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-09-27T10:43:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.23-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/511db0eb59337abf2b105e83ce0f0f1401dbe68f/7.0/apache/Dockerfile

  - version: 7.0.22-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-08-18T16:47:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.22-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.22-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/zts/Dockerfile

  - version: 7.0.22-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-08-18T16:47:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.22-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.22-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/fpm/Dockerfile

  - version: 7.0.22-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-08-18T16:47:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.22-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/Dockerfile

  - version: 7.0.22-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-08-18T16:47:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.22-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/apache/Dockerfile

  - version: 7.0.21-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-20T14:26:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.21-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.21-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.0/zts/Dockerfile

  - version: 7.0.21-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-20T14:26:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.21-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.21-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.0/fpm/Dockerfile

  - version: 7.0.21-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-20T14:26:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.21-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.0/Dockerfile

  - version: 7.0.21-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-20T14:26:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.21-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ddc7084c8a78ea12f0cfdceff7d03c5a530b787e/7.0/apache/Dockerfile

  - version: 7.0.20-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.20-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/04a39b18812015e0ac7bfc84a1905897cad7b10d/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.20-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/04a39b18812015e0ac7bfc84a1905897cad7b10d/7.0/zts/Dockerfile

  - version: 7.0.20-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.20-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/04a39b18812015e0ac7bfc84a1905897cad7b10d/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.20-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/04a39b18812015e0ac7bfc84a1905897cad7b10d/7.0/fpm/Dockerfile

  - version: 7.0.20-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.20-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/04a39b18812015e0ac7bfc84a1905897cad7b10d/7.0/Dockerfile

  - version: 7.0.20-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.20-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/04a39b18812015e0ac7bfc84a1905897cad7b10d/7.0/apache/Dockerfile

  - version: 7.0.19-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-06-02T06:16:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.19-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.19-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.0/zts/Dockerfile

  - version: 7.0.19-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-06-02T06:16:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.19-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.19-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.0/fpm/Dockerfile

  - version: 7.0.19-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-06-02T06:16:29'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.19-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.0/Dockerfile

  - version: 7.0.19-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-06-02T06:16:29'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.19-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c48c629568bc166b58b271114d0b44ea6d5cfa09/7.0/apache/Dockerfile

  - version: 7.0.18-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.18-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.18-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.0/zts/Dockerfile

  - version: 7.0.18-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.18-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.18-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.0/fpm/Dockerfile

  - version: 7.0.18-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.18-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.0/Dockerfile

  - version: 7.0.18-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-05-10T14:49:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.18-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6844e717a56a5dd8ad87a236a96bea069cc635fd/7.0/apache/Dockerfile

  - version: 7.0.17-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.17-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/20b89e64d16dc9310ba6493a38385e36304dded7/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.17-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/20b89e64d16dc9310ba6493a38385e36304dded7/7.0/zts/Dockerfile

  - version: 7.0.17-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.17-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/20b89e64d16dc9310ba6493a38385e36304dded7/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.17-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/20b89e64d16dc9310ba6493a38385e36304dded7/7.0/fpm/Dockerfile

  - version: 7.0.17-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.17-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/20b89e64d16dc9310ba6493a38385e36304dded7/7.0/Dockerfile

  - version: 7.0.17-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.17-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/20b89e64d16dc9310ba6493a38385e36304dded7/7.0/apache/Dockerfile

  - version: 7.0.16-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.16-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0792ba42f0ea7435ceb26b42a066274e028b30e3/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.16-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0792ba42f0ea7435ceb26b42a066274e028b30e3/7.0/zts/Dockerfile

  - version: 7.0.16-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.16-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0792ba42f0ea7435ceb26b42a066274e028b30e3/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.16-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0792ba42f0ea7435ceb26b42a066274e028b30e3/7.0/fpm/Dockerfile

  - version: 7.0.16-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.16-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0792ba42f0ea7435ceb26b42a066274e028b30e3/7.0/Dockerfile

  - version: 7.0.16-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-02-20T08:53:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.16-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0792ba42f0ea7435ceb26b42a066274e028b30e3/7.0/apache/Dockerfile

  - version: 7.0.15-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-27T13:24:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.15-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.15-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.0/zts/Dockerfile

  - version: 7.0.15-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-27T13:24:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.15-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.15-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.0/fpm/Dockerfile

  - version: 7.0.15-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-27T13:24:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.15-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9abc1efe542b56aa93835e4987d5d4a88171b232/7.0/Dockerfile

  - version: 7.0.15-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-27T13:24:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.15-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e573f8f7fda5d7378bae9c6a936a298b850c4076/7.0/apache/Dockerfile

  - version: 7.0.14-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.14-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ac528cf10d42f3f47dcb9ded3477781fb11f714/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.14-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.0/zts/Dockerfile

  - version: 7.0.14-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.14-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ac528cf10d42f3f47dcb9ded3477781fb11f714/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.14-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.0/fpm/Dockerfile

  - version: 7.0.14-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.14-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.0/Dockerfile

  - version: 7.0.14-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.14-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/7.0/apache/Dockerfile

  - version: 7.0.13-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-12-06T15:00:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.13-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.13-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/7.0/zts/Dockerfile

  - version: 7.0.13-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-12-06T15:00:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.13-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.13-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/7.0/fpm/Dockerfile

  - version: 7.0.13-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-12-06T15:00:53'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.13-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/7.0/Dockerfile

  - version: 7.0.13-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-12-06T15:00:53'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.13-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/7.0/apache/Dockerfile

  - version: 7.0.12-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.12-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.12-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/7.0/zts/Dockerfile

  - version: 7.0.12-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.12-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.12-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/7.0/fpm/Dockerfile

  - version: 7.0.12-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.12-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/7.0/Dockerfile

  - version: 7.0.12-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.12-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/7.0/apache/Dockerfile

  - version: 7.0.11-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-30T14:57:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.11-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6924505927f75e74098cc55e53e4f66bf71e0068/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.11-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6924505927f75e74098cc55e53e4f66bf71e0068/7.0/zts/Dockerfile

  - version: 7.0.11-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-30T14:57:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.11-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6924505927f75e74098cc55e53e4f66bf71e0068/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.11-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6924505927f75e74098cc55e53e4f66bf71e0068/7.0/fpm/Dockerfile

  - version: 7.0.11-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-30T14:57:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.11-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6924505927f75e74098cc55e53e4f66bf71e0068/7.0/Dockerfile

  - version: 7.0.11-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-30T14:57:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.11-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6924505927f75e74098cc55e53e4f66bf71e0068/7.0/apache/Dockerfile

  - version: 7.0.10-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.10-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.10-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/7.0/zts/Dockerfile

  - version: 7.0.10-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.10-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.10-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/7.0/fpm/Dockerfile

  - version: 7.0.10-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.10-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/7.0/Dockerfile

  - version: 7.0.10-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.10-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/7.0/apache/Dockerfile

  - version: 7.0.9-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-08-17T10:18:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.9-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.9-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/7.0/zts/Dockerfile

  - version: 7.0.9-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-08-17T10:18:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.9-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.9-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/7.0/fpm/Dockerfile

  - version: 7.0.9-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-08-17T10:18:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.9-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/7.0/Dockerfile

  - version: 7.0.9-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-08-17T10:18:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.9-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/800aea518ead9b58f3cb8ef516ad7ceb64f16bb4/7.0/apache/Dockerfile

  - version: 7.0.8-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.8-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.8-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/7.0/zts/Dockerfile

  - version: 7.0.8-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.8-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.8-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/7.0/fpm/Dockerfile

  - version: 7.0.8-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.8-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/7.0/Dockerfile

  - version: 7.0.8-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.8-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/7.0/apache/Dockerfile

  - version: 7.0.7-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.7-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/145f0de1bc4cfe9c1d599a221ac83239805e1e81/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.7-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/7.0/zts/Dockerfile

  - version: 7.0.7-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:7.0.7-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/145f0de1bc4cfe9c1d599a221ac83239805e1e81/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.7-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/7.0/fpm/Dockerfile

  - version: 7.0.7-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.7-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/7.0/Dockerfile

  - version: 7.0.7-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.7-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/7.0/apache/Dockerfile

  - version: 7.0.6-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:7.0.6-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.6-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/7.0/zts/Dockerfile

  - version: 7.0.6-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:7.0.6-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.6-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/7.0/fpm/Dockerfile

  - version: 7.0.6-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.6-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/7.0/Dockerfile

  - version: 7.0.6-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.6-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/7.0/apache/Dockerfile

  - version: 7.0.5-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:7.0.5-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.5-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/7.0/zts/Dockerfile

  - version: 7.0.5-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:7.0.5-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.5-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/7.0/fpm/Dockerfile

  - version: 7.0.5-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.5-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/7.0/Dockerfile

  - version: 7.0.5-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.5-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/7.0/apache/Dockerfile

  - version: 7.0.4-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:7.0.4-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/7.0/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.4-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/7.0/zts/Dockerfile

  - version: 7.0.4-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:7.0.4-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/7.0/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.4-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/7.0/fpm/Dockerfile

  - version: 7.0.4-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.4-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/7.0/Dockerfile

  - version: 7.0.4-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.4-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/7.0/apache/Dockerfile

  - version: 7.0.3-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.3-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/7.0/zts/Dockerfile

  - version: 7.0.3-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.3-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/7.0/fpm/Dockerfile

  - version: 7.0.3-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.3-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/7.0/Dockerfile

  - version: 7.0.3-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.3-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/7.0/apache/Dockerfile

  - version: 7.0.2-zts
    majorVersion: '7.0'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.2-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5e9ec6fb4613524418b8773ced4494c5bea62fdd/7.0/zts/Dockerfile

  - version: 7.0.2-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.2-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e1292bb6ec9c0939abd0b8878bf6f7b8d29595d8/7.0/fpm/Dockerfile

  - version: 7.0.2-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.2-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85447ff6a554f05b1cb893e5edf2a2cbba848332/7.0/Dockerfile

  - version: 7.0.2-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.2-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85447ff6a554f05b1cb893e5edf2a2cbba848332/7.0/apache/Dockerfile

  - version: 7.0.1-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.1-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/914f1fc040ed55d6fca2af602bdf0bb6f6b3b319/7.0/fpm/Dockerfile

  - version: 7.0.1-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.1-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/914f1fc040ed55d6fca2af602bdf0bb6f6b3b319/7.0/Dockerfile

  - version: 7.0.1-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.1-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/914f1fc040ed55d6fca2af602bdf0bb6f6b3b319/7.0/apache/Dockerfile

  - version: 7.0.0-fpm
    majorVersion: '7.0'
    prerelease: false
    date: '2015-12-10T15:05:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.0-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/7.0/fpm/Dockerfile

  - version: 7.0.0-cli
    majorVersion: '7.0'
    prerelease: false
    date: '2015-12-10T15:05:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.0-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/7.0/Dockerfile

  - version: 7.0.0-apache
    majorVersion: '7.0'
    prerelease: false
    date: '2015-12-10T15:05:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:7.0.0-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/7.0/apache/Dockerfile

  - version: 5.6.40-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2019-01-11T17:16:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.40-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.40-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.40-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/stretch/zts/Dockerfile

  - version: 5.6.40-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2019-01-11T17:16:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.40-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.40-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.40-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/stretch/fpm/Dockerfile

  - version: 5.6.40-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2019-01-11T17:16:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.40-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.40-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.40-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/stretch/cli/Dockerfile

  - version: 5.6.40-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2019-01-11T17:16:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.40-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.40-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/783878384a8f3953ed571e5a34ba0fe546726c85/5.6/stretch/apache/Dockerfile

  - version: 5.6.39-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-12-07T16:31:37'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.39-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.39-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.39-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/stretch/zts/Dockerfile

  - version: 5.6.39-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-12-07T16:31:37'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.39-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.39-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.39-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/stretch/fpm/Dockerfile

  - version: 5.6.39-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-12-07T16:31:37'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.39-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.39-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.39-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/stretch/cli/Dockerfile

  - version: 5.6.39-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-12-07T16:31:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.39-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.39-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fa4ef89d7ce591df63584cb81853db2f5fdd0659/5.6/stretch/apache/Dockerfile

  - version: 5.6.38-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.38-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c04d025eaceae20315156a458ae31d5f0e77ba65/5.6/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.38-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.38-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.38-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/stretch/zts/Dockerfile

  - version: 5.6.38-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.38-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c04d025eaceae20315156a458ae31d5f0e77ba65/5.6/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.38-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.38-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.38-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/stretch/fpm/Dockerfile

  - version: 5.6.38-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.38-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c04d025eaceae20315156a458ae31d5f0e77ba65/5.6/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.38-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.38-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.38-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b99209cc078ebb7bf4614e870c2d69e0b3bed399/5.6/stretch/cli/Dockerfile

  - version: 5.6.38-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-11-27T16:06:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.38-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/5.6/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.38-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c77c579341cfbfee90e669535ea3057679a1005b/5.6/stretch/apache/Dockerfile

  - version: 5.6.37-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.37-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/alpine3.7/zts/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.37-zts-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/alpine3.8/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.37-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.37-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/stretch/zts/Dockerfile

  - version: 5.6.37-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.37-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/alpine3.7/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.37-fpm-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/alpine3.8/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.37-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.37-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/stretch/fpm/Dockerfile

  - version: 5.6.37-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.37-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/alpine3.7/cli/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: php:5.6.37-cli-alpine3.8
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/alpine3.8/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.37-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.37-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/stretch/cli/Dockerfile

  - version: 5.6.37-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-09-06T10:43:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.37-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.37-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/88189f016803224152e3b1d96b11a573b3762559/5.6/stretch/apache/Dockerfile

  - version: 5.6.36-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.36-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/5.6/alpine3.4/zts/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.36-zts-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/alpine3.7/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.36-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/jessie/zts/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.36-zts-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/stretch/zts/Dockerfile

  - version: 5.6.36-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.36-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/5.6/alpine3.4/fpm/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.36-fpm-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/alpine3.7/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.36-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/jessie/fpm/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.36-fpm-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/stretch/fpm/Dockerfile

  - version: 5.6.36-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.36-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b045ba7c51ceed8a495beb8ea7274df48a3c70e1/5.6/alpine3.4/cli/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: php:5.6.36-cli-alpine3.7
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/alpine3.7/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.36-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/jessie/cli/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.36-cli-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/stretch/cli/Dockerfile

  - version: 5.6.36-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.36-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/jessie/apache/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: php:5.6.36-apache-stretch
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b250a22ce67cd1232c11e0c17a0f1708ced6f4af/5.6/stretch/apache/Dockerfile

  - version: 5.6.35-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.35-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.35-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/jessie/zts/Dockerfile

  - version: 5.6.35-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.35-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.35-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/jessie/fpm/Dockerfile

  - version: 5.6.35-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.35-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.35-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/jessie/cli/Dockerfile

  - version: 5.6.35-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.35-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f504394473ea762a02a707325a9114df02987e71/5.6/jessie/apache/Dockerfile

  - version: 5.6.34-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.34-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.34-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/jessie/zts/Dockerfile

  - version: 5.6.34-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.34-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.34-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/jessie/fpm/Dockerfile

  - version: 5.6.34-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.34-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.34-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/jessie/cli/Dockerfile

  - version: 5.6.34-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.34-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fe07cedc05d84a6af374dabdee82f213464ad3c5/5.6/jessie/apache/Dockerfile

  - version: 5.6.33-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.33-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a37af189869968236a8b832beac950b78b26b471/5.6/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.33-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a37af189869968236a8b832beac950b78b26b471/5.6/jessie/zts/Dockerfile

  - version: 5.6.33-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.33-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/5.6/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.33-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/57b41cfc2d1e07acab2e60d59a0cb19d83056fc1/5.6/jessie/fpm/Dockerfile

  - version: 5.6.33-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.33-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a37af189869968236a8b832beac950b78b26b471/5.6/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.33-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a37af189869968236a8b832beac950b78b26b471/5.6/jessie/cli/Dockerfile

  - version: 5.6.33-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-02-06T09:22:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.33-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a37af189869968236a8b832beac950b78b26b471/5.6/jessie/apache/Dockerfile

  - version: 5.6.32-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.32-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/5.6/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.32-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/5.6/jessie/zts/Dockerfile

  - version: 5.6.32-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.32-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/5.6/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.32-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/5.6/jessie/fpm/Dockerfile

  - version: 5.6.32-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.32-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0e056693f2483fe7a0d808f1f493a1e4744186b8/5.6/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.32-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/5.6/jessie/cli/Dockerfile

  - version: 5.6.32-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2018-01-03T12:28:52'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.32-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/32313ea407379d70259e14414ec8aa0311c0a4c4/5.6/jessie/apache/Dockerfile

  - version: 5.6.31-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.31-zts-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/alpine3.4/zts/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.31-zts-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/jessie/zts/Dockerfile

  - version: 5.6.31-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.31-fpm-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/alpine3.4/fpm/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.31-fpm-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/jessie/fpm/Dockerfile

  - version: 5.6.31-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.31-cli-alpine3.4
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/alpine3.4/cli/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.31-cli-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/jessie/cli/Dockerfile

  - version: 5.6.31-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2017-10-26T14:21:24'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.31-apache-jessie
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0bb4068bd639ba98631bc2999e0d20cae583ec00/5.6/jessie/apache/Dockerfile

  - version: 5.6.30-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2017-07-06T12:32:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.30-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ee1cd8287f6fc7269a731ceb6199ec8dee8b727/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.30-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ee1cd8287f6fc7269a731ceb6199ec8dee8b727/5.6/zts/Dockerfile

  - version: 5.6.30-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2017-07-06T12:32:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.30-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ee1cd8287f6fc7269a731ceb6199ec8dee8b727/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.30-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ee1cd8287f6fc7269a731ceb6199ec8dee8b727/5.6/fpm/Dockerfile

  - version: 5.6.30-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2017-07-06T12:32:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.30-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ee1cd8287f6fc7269a731ceb6199ec8dee8b727/5.6/Dockerfile

  - version: 5.6.30-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2017-07-06T12:32:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.30-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ee1cd8287f6fc7269a731ceb6199ec8dee8b727/5.6/apache/Dockerfile

  - version: 5.6.29-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.29-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ac528cf10d42f3f47dcb9ded3477781fb11f714/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.29-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/5.6/zts/Dockerfile

  - version: 5.6.29-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.29-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3ac528cf10d42f3f47dcb9ded3477781fb11f714/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.29-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/5.6/fpm/Dockerfile

  - version: 5.6.29-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.29-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/5.6/Dockerfile

  - version: 5.6.29-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.29-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b66c0fa0286d0abbb8a36653e26e6992bb71b858/5.6/apache/Dockerfile

  - version: 5.6.28-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-12-08T16:38:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.28-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.28-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/5.6/zts/Dockerfile

  - version: 5.6.28-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-12-08T16:38:25'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.28-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.28-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/5.6/fpm/Dockerfile

  - version: 5.6.28-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-12-08T16:38:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.28-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/5.6/Dockerfile

  - version: 5.6.28-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-12-08T16:38:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.28-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/173945670390f6595da8f93ae46b442167ff05be/5.6/apache/Dockerfile

  - version: 5.6.27-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.27-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.27-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/5.6/zts/Dockerfile

  - version: 5.6.27-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.27-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.27-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/5.6/fpm/Dockerfile

  - version: 5.6.27-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.27-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/5.6/Dockerfile

  - version: 5.6.27-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.27-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/3cb02a21164bc2bdb8b25ec48886ffcb7e195510/5.6/apache/Dockerfile

  - version: 5.6.26-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.26-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1c56325a69718a3e3cf76179e75d070b7e23da62/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.26-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1c56325a69718a3e3cf76179e75d070b7e23da62/5.6/zts/Dockerfile

  - version: 5.6.26-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.26-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1c56325a69718a3e3cf76179e75d070b7e23da62/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.26-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1c56325a69718a3e3cf76179e75d070b7e23da62/5.6/fpm/Dockerfile

  - version: 5.6.26-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.26-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1c56325a69718a3e3cf76179e75d070b7e23da62/5.6/Dockerfile

  - version: 5.6.26-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-10-14T10:51:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.26-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1c56325a69718a3e3cf76179e75d070b7e23da62/5.6/apache/Dockerfile

  - version: 5.6.25-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.25-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.25-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/5.6/zts/Dockerfile

  - version: 5.6.25-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.25-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.25-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/5.6/fpm/Dockerfile

  - version: 5.6.25-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.25-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/5.6/Dockerfile

  - version: 5.6.25-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-09-06T16:15:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.25-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/2f96a00aaa90ee1c503140724936ca7005273df5/5.6/apache/Dockerfile

  - version: 5.6.24-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-08-19T12:17:13'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.24-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.24-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.6/zts/Dockerfile

  - version: 5.6.24-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-08-19T12:17:13'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.24-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.24-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.6/fpm/Dockerfile

  - version: 5.6.24-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-08-19T12:17:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.24-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.6/Dockerfile

  - version: 5.6.24-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-08-19T12:17:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.24-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/800aea518ead9b58f3cb8ef516ad7ceb64f16bb4/5.6/apache/Dockerfile

  - version: 5.6.23-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-07-21T13:49:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.23-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.23-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.6/zts/Dockerfile

  - version: 5.6.23-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-07-21T13:49:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.23-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.23-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.6/fpm/Dockerfile

  - version: 5.6.23-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-07-21T13:49:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.23-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.6/Dockerfile

  - version: 5.6.23-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-07-21T13:49:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.23-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.6/apache/Dockerfile

  - version: 5.6.22-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.22-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/145f0de1bc4cfe9c1d599a221ac83239805e1e81/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.22-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.6/zts/Dockerfile

  - version: 5.6.22-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.6.22-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/145f0de1bc4cfe9c1d599a221ac83239805e1e81/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.22-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.6/fpm/Dockerfile

  - version: 5.6.22-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.22-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.6/Dockerfile

  - version: 5.6.22-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-06-15T10:28:19'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.22-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.6/apache/Dockerfile

  - version: 5.6.21-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.6.21-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.21-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.6/zts/Dockerfile

  - version: 5.6.21-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.6.21-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.21-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.6/fpm/Dockerfile

  - version: 5.6.21-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.21-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.6/Dockerfile

  - version: 5.6.21-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.21-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.6/apache/Dockerfile

  - version: 5.6.20-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.6.20-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.20-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.6/zts/Dockerfile

  - version: 5.6.20-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.6.20-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.20-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.6/fpm/Dockerfile

  - version: 5.6.20-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.20-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.6/Dockerfile

  - version: 5.6.20-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.20-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.6/apache/Dockerfile

  - version: 5.6.19-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.6.19-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.6/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.19-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.6/zts/Dockerfile

  - version: 5.6.19-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.6.19-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.6/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.19-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.6/fpm/Dockerfile

  - version: 5.6.19-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.19-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.6/Dockerfile

  - version: 5.6.19-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.19-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.6/apache/Dockerfile

  - version: 5.6.18-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.18-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.6/zts/Dockerfile

  - version: 5.6.18-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.18-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.6/fpm/Dockerfile

  - version: 5.6.18-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.18-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.6/Dockerfile

  - version: 5.6.18-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.18-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.6/apache/Dockerfile

  - version: 5.6.17-zts
    majorVersion: '5.6'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.17-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5e9ec6fb4613524418b8773ced4494c5bea62fdd/5.6/zts/Dockerfile

  - version: 5.6.17-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.17-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e1292bb6ec9c0939abd0b8878bf6f7b8d29595d8/5.6/fpm/Dockerfile

  - version: 5.6.17-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.17-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85447ff6a554f05b1cb893e5edf2a2cbba848332/5.6/Dockerfile

  - version: 5.6.17-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.17-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85447ff6a554f05b1cb893e5edf2a2cbba848332/5.6/apache/Dockerfile

  - version: 5.6.16-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.16-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/5.6/fpm/Dockerfile

  - version: 5.6.16-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.16-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/5.6/Dockerfile

  - version: 5.6.16-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.16-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/5.6/apache/Dockerfile

  - version: 5.6.15-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-11-30T22:00:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.15-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6e600f59a4405b5066eb78f5f02180212dffd065/5.6/fpm/Dockerfile

  - version: 5.6.15-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-11-30T22:00:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.15-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6e600f59a4405b5066eb78f5f02180212dffd065/5.6/Dockerfile

  - version: 5.6.15-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-11-30T22:00:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.15-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6e600f59a4405b5066eb78f5f02180212dffd065/5.6/apache/Dockerfile

  - version: 5.6.14-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-10-19T11:11:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.14-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.6/fpm/Dockerfile

  - version: 5.6.14-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-10-19T11:11:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.14-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.6/Dockerfile

  - version: 5.6.14-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-10-19T11:11:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.14-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.6/apache/Dockerfile

  - version: 5.6.13-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-10-01T19:37:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.13-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf1e938f3721632443e01734bcfcbcf1160ea539/5.6/fpm/Dockerfile

  - version: 5.6.13-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-10-01T19:37:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.13-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf1e938f3721632443e01734bcfcbcf1160ea539/5.6/Dockerfile

  - version: 5.6.13-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-10-01T19:37:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.13-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf1e938f3721632443e01734bcfcbcf1160ea539/5.6/apache/Dockerfile

  - version: 5.6.12-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.12-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.6/fpm/Dockerfile

  - version: 5.6.12-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.12-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.6/Dockerfile

  - version: 5.6.12-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.12-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.6/apache/Dockerfile

  - version: 5.6.11-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.11-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.6/fpm/Dockerfile

  - version: 5.6.11-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.11-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.6/Dockerfile

  - version: 5.6.11-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.11-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.6/apache/Dockerfile

  - version: 5.6.10-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.10-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a413eb0123d10321928696ffea7442bed7dc0dc7/5.6/fpm/Dockerfile

  - version: 5.6.10-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.10-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a413eb0123d10321928696ffea7442bed7dc0dc7/5.6/Dockerfile

  - version: 5.6.10-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.10-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a413eb0123d10321928696ffea7442bed7dc0dc7/5.6/apache/Dockerfile

  - version: 5.6.9-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.9-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.6/fpm/Dockerfile

  - version: 5.6.9-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.9-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.6/Dockerfile

  - version: 5.6.9-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.9-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.6/apache/Dockerfile

  - version: 5.6.8-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.8-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6c517d12b4e52fb39dc8a132201b808ce4fc68d5/5.6/fpm/Dockerfile

  - version: 5.6.8-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.8-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6c517d12b4e52fb39dc8a132201b808ce4fc68d5/5.6/Dockerfile

  - version: 5.6.8-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.8-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1dcb6d17643e48ea1329ede9cf9a08b2f697b2fd/5.6/apache/Dockerfile

  - version: 5.6.7-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.7-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.6/fpm/Dockerfile

  - version: 5.6.7-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.7-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.6/Dockerfile

  - version: 5.6.7-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.7-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.6/apache/Dockerfile

  - version: 5.6.6-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.6-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.6/fpm/Dockerfile

  - version: 5.6.6-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.6-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.6/Dockerfile

  - version: 5.6.6-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.6-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.6/apache/Dockerfile

  - version: 5.6.5-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.5-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c871678cc7c8dbc9277832e35f14f3534f2dd0fb/5.6/fpm/Dockerfile

  - version: 5.6.5-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.5-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/63835823986369ab5982cc6ea1345a962fda5b4a/5.6/Dockerfile

  - version: 5.6.5-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.5-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/63835823986369ab5982cc6ea1345a962fda5b4a/5.6/apache/Dockerfile

  - version: 5.6.4-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.4-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.6/fpm/Dockerfile

  - version: 5.6.4-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.4-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.6/Dockerfile

  - version: 5.6.4-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.4-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.6/apache/Dockerfile

  - version: 5.6.3-fpm
    majorVersion: '5.6'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.3-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4a5d6cfe6902d86bea3f040c868b64712e94e7c1/5.6/fpm/Dockerfile

  - version: 5.6.3-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.3-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4a5d6cfe6902d86bea3f040c868b64712e94e7c1/5.6/Dockerfile

  - version: 5.6.3-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.3-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58c3fd175cb3ab30633fbc3e86314154ecc38e89/5.6/apache/Dockerfile

  - version: 5.6.2-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2014-11-12T09:39:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.2-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b2e1b8e2a37db419ae1244b9f63456b86f666ffe/5.6/Dockerfile

  - version: 5.6.2-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2014-11-12T09:39:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.6.2-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b2e1b8e2a37db419ae1244b9f63456b86f666ffe/5.6/apache/Dockerfile

  - version: 5.6.1-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2014-10-15T17:38:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.6.1-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/524908779e1de87ab8fbd50f544c798782d8fc06/5.6/Dockerfile

  - version: 5.6.1-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2014-10-15T17:38:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.6.1-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/524908779e1de87ab8fbd50f544c798782d8fc06/5.6/apache/Dockerfile

  - version: 5.6.0-cli
    majorVersion: '5.6'
    prerelease: false
    date: '2014-09-22T10:51:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.6.0-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7819c242fd0521684b31ff0b33707132ca1bd9c6/5.6/Dockerfile

  - version: 5.6.0-apache
    majorVersion: '5.6'
    prerelease: false
    date: '2014-09-22T10:51:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.6.0-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/7819c242fd0521684b31ff0b33707132ca1bd9c6/5.6/apache/Dockerfile

  - version: 5.5.38-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-08-10T09:46:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.5.38-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.5/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.38-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.5/zts/Dockerfile

  - version: 5.5.38-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-08-10T09:46:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.5.38-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.5/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.38-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.5/fpm/Dockerfile

  - version: 5.5.38-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-08-10T09:46:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.38-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.5/Dockerfile

  - version: 5.5.38-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-08-10T09:46:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.38-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d6b446a77a77c8247e2206be8f966fdb24516862/5.5/apache/Dockerfile

  - version: 5.5.37-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.5.37-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.5/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.37-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.5/zts/Dockerfile

  - version: 5.5.37-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.5.37-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.5/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.37-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.5/fpm/Dockerfile

  - version: 5.5.37-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.37-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.5/Dockerfile

  - version: 5.5.37-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-07-13T14:48:51'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.37-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/f016f5dc420e7d360f7381eb014ac6697e247e11/5.5/apache/Dockerfile

  - version: 5.5.36-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-06-23T14:01:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.5.36-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/145f0de1bc4cfe9c1d599a221ac83239805e1e81/5.5/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.36-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.5/zts/Dockerfile

  - version: 5.5.36-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-06-23T14:01:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: php:5.5.36-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/145f0de1bc4cfe9c1d599a221ac83239805e1e81/5.5/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.36-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.5/fpm/Dockerfile

  - version: 5.5.36-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-06-23T14:01:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.36-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.5/Dockerfile

  - version: 5.5.36-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-06-23T14:01:38'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.36-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8344a7fdb4ddba205781d1dda1ec62981733e9ba/5.5/apache/Dockerfile

  - version: 5.5.35-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.5.35-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.5/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.35-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.5/zts/Dockerfile

  - version: 5.5.35-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.5.35-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.5/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.35-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.5/fpm/Dockerfile

  - version: 5.5.35-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.35-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.5/Dockerfile

  - version: 5.5.35-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-05-23T14:19:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.35-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/47abb34bbfc92ccd26d07351bc18542ded37ef17/5.5/apache/Dockerfile

  - version: 5.5.34-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.5.34-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.34-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/zts/Dockerfile

  - version: 5.5.34-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.5.34-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.34-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/fpm/Dockerfile

  - version: 5.5.34-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.34-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/Dockerfile

  - version: 5.5.34-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-04-04T09:40:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.34-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/apache/Dockerfile

  - version: 5.5.33-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.5.33-zts-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.5/zts/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.33-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.5/zts/Dockerfile

  - version: 5.5.33-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: php:5.5.33-fpm-alpine
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.5/fpm/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.33-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.5/fpm/Dockerfile

  - version: 5.5.33-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.33-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.5/Dockerfile

  - version: 5.5.33-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-03-18T13:34:39'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.33-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/0d23b3d08770889c6cb31e8e5374334879103f92/5.5/apache/Dockerfile

  - version: 5.5.32-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.32-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.5/zts/Dockerfile

  - version: 5.5.32-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.32-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.5/fpm/Dockerfile

  - version: 5.5.32-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.32-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.5/Dockerfile

  - version: 5.5.32-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-02-29T16:39:10'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.32-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8943e1e6a930768994fbc29f4df89d0a3fd65e12/5.5/apache/Dockerfile

  - version: 5.5.31-zts
    majorVersion: '5.5'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.31-zts
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5e9ec6fb4613524418b8773ced4494c5bea62fdd/5.5/zts/Dockerfile

  - version: 5.5.31-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.31-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e1292bb6ec9c0939abd0b8878bf6f7b8d29595d8/5.5/fpm/Dockerfile

  - version: 5.5.31-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.31-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85447ff6a554f05b1cb893e5edf2a2cbba848332/5.5/Dockerfile

  - version: 5.5.31-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2016-01-28T14:18:54'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.31-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/85447ff6a554f05b1cb893e5edf2a2cbba848332/5.5/apache/Dockerfile

  - version: 5.5.30-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.30-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/5.5/fpm/Dockerfile

  - version: 5.5.30-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.30-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/5.5/Dockerfile

  - version: 5.5.30-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-12-18T15:10:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.30-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a9f7fed15bc6bb03aa3648560ef4cb0ac79fb612/5.5/apache/Dockerfile

  - version: 5.5.29-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-10-01T19:37:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.29-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf1e938f3721632443e01734bcfcbcf1160ea539/5.5/fpm/Dockerfile

  - version: 5.5.29-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-10-01T19:37:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.29-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf1e938f3721632443e01734bcfcbcf1160ea539/5.5/Dockerfile

  - version: 5.5.29-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-10-01T19:37:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.29-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/cf1e938f3721632443e01734bcfcbcf1160ea539/5.5/apache/Dockerfile

  - version: 5.5.28-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.28-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.5/fpm/Dockerfile

  - version: 5.5.28-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.28-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.5/Dockerfile

  - version: 5.5.28-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.28-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.5/apache/Dockerfile

  - version: 5.5.27-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.27-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.5/fpm/Dockerfile

  - version: 5.5.27-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.27-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.5/Dockerfile

  - version: 5.5.27-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.27-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.5/apache/Dockerfile

  - version: 5.5.26-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.26-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a413eb0123d10321928696ffea7442bed7dc0dc7/5.5/fpm/Dockerfile

  - version: 5.5.26-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.26-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a413eb0123d10321928696ffea7442bed7dc0dc7/5.5/Dockerfile

  - version: 5.5.26-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.26-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/a413eb0123d10321928696ffea7442bed7dc0dc7/5.5/apache/Dockerfile

  - version: 5.5.25-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.25-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.5/fpm/Dockerfile

  - version: 5.5.25-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.25-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.5/Dockerfile

  - version: 5.5.25-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.25-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.5/apache/Dockerfile

  - version: 5.5.24-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.24-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6c517d12b4e52fb39dc8a132201b808ce4fc68d5/5.5/fpm/Dockerfile

  - version: 5.5.24-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.24-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6c517d12b4e52fb39dc8a132201b808ce4fc68d5/5.5/Dockerfile

  - version: 5.5.24-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.24-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1dcb6d17643e48ea1329ede9cf9a08b2f697b2fd/5.5/apache/Dockerfile

  - version: 5.5.23-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.23-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.5/fpm/Dockerfile

  - version: 5.5.23-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.23-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.5/Dockerfile

  - version: 5.5.23-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.23-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.5/apache/Dockerfile

  - version: 5.5.22-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.22-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.5/fpm/Dockerfile

  - version: 5.5.22-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.22-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.5/Dockerfile

  - version: 5.5.22-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.22-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.5/apache/Dockerfile

  - version: 5.5.21-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.21-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/c871678cc7c8dbc9277832e35f14f3534f2dd0fb/5.5/fpm/Dockerfile

  - version: 5.5.21-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.21-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/63835823986369ab5982cc6ea1345a962fda5b4a/5.5/Dockerfile

  - version: 5.5.21-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.21-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/63835823986369ab5982cc6ea1345a962fda5b4a/5.5/apache/Dockerfile

  - version: 5.5.20-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.20-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.5/fpm/Dockerfile

  - version: 5.5.20-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.20-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.5/Dockerfile

  - version: 5.5.20-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.20-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.5/apache/Dockerfile

  - version: 5.5.19-fpm
    majorVersion: '5.5'
    prerelease: false
    date: '2014-11-22T13:05:49'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.19-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4a5d6cfe6902d86bea3f040c868b64712e94e7c1/5.5/fpm/Dockerfile

  - version: 5.5.19-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2014-11-22T13:05:49'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.19-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4a5d6cfe6902d86bea3f040c868b64712e94e7c1/5.5/Dockerfile

  - version: 5.5.19-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2014-11-22T13:05:49'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.19-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58c3fd175cb3ab30633fbc3e86314154ecc38e89/5.5/apache/Dockerfile

  - version: 5.5.18-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2014-11-12T09:39:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.18-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b2e1b8e2a37db419ae1244b9f63456b86f666ffe/5.5/Dockerfile

  - version: 5.5.18-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2014-11-12T09:39:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.5.18-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b2e1b8e2a37db419ae1244b9f63456b86f666ffe/5.5/apache/Dockerfile

  - version: 5.5.17-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2014-10-15T17:38:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.5.17-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6527e41240379ce1112b629a505ef9752f42a64f/5.5/Dockerfile

  - version: 5.5.17-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2014-10-15T17:38:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.5.17-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6527e41240379ce1112b629a505ef9752f42a64f/5.5/apache/Dockerfile

  - version: 5.5.16-cli
    majorVersion: '5.5'
    prerelease: false
    date: '2014-09-13T18:21:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: php:5.5.16-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e19f15271b1cbe9d3e5c9f0c552beca9579f0677/5.5/Dockerfile

  - version: 5.5.16-apache
    majorVersion: '5.5'
    prerelease: false
    date: '2014-09-13T18:21:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: php:5.5.16-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e19f15271b1cbe9d3e5c9f0c552beca9579f0677/5.5/apache/Dockerfile

  - version: 5.4.45-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-12-03T14:50:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.45-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.4/fpm/Dockerfile

  - version: 5.4.45-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-12-03T14:50:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.45-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.4/Dockerfile

  - version: 5.4.45-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-12-03T14:50:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.45-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.4/apache/Dockerfile

  - version: 5.4.44-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.44-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.4/fpm/Dockerfile

  - version: 5.4.44-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.44-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.4/Dockerfile

  - version: 5.4.44-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-09-06T21:29:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.44-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/789a45b03fe31ca1ac7f490bafe300e728b18bb9/5.4/apache/Dockerfile

  - version: 5.4.43-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.43-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.4/fpm/Dockerfile

  - version: 5.4.43-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.43-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.4/Dockerfile

  - version: 5.4.43-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-08-05T15:52:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.43-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/8dc762e7181fdc56148e13fbbdeef16271a14ea0/5.4/apache/Dockerfile

  - version: 5.4.42-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.42-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ae130b2f845162fbf84da0ffad07d7a64eff57cd/5.4/fpm/Dockerfile

  - version: 5.4.42-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.42-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ae130b2f845162fbf84da0ffad07d7a64eff57cd/5.4/Dockerfile

  - version: 5.4.42-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-07-08T10:32:58'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.42-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/ae130b2f845162fbf84da0ffad07d7a64eff57cd/5.4/apache/Dockerfile

  - version: 5.4.41-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.41-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.4/fpm/Dockerfile

  - version: 5.4.41-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.41-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.4/Dockerfile

  - version: 5.4.41-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-05-28T15:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.41-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58559e7dec9df4af7475dd3ab62864700cf9feae/5.4/apache/Dockerfile

  - version: 5.4.40-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.40-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6c517d12b4e52fb39dc8a132201b808ce4fc68d5/5.4/fpm/Dockerfile

  - version: 5.4.40-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.40-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6c517d12b4e52fb39dc8a132201b808ce4fc68d5/5.4/Dockerfile

  - version: 5.4.40-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-04-29T08:59:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.40-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1dcb6d17643e48ea1329ede9cf9a08b2f697b2fd/5.4/apache/Dockerfile

  - version: 5.4.39-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.39-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.4/fpm/Dockerfile

  - version: 5.4.39-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.39-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.4/Dockerfile

  - version: 5.4.39-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-04-14T10:17:45'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.39-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/13112ed409335f211edbaf9b74db1c87b329b6d8/5.4/apache/Dockerfile

  - version: 5.4.38-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.38-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.4/fpm/Dockerfile

  - version: 5.4.38-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.38-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.4/Dockerfile

  - version: 5.4.38-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-03-06T09:58:04'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.38-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/1e07e9134490f53d24fbd23ee3521067c8ab2d29/5.4/apache/Dockerfile

  - version: 5.4.37-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.37-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/d506059bc4361bfe9b0ce536c7d94f76a37d2c02/5.4/fpm/Dockerfile

  - version: 5.4.37-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.37-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/63835823986369ab5982cc6ea1345a962fda5b4a/5.4/Dockerfile

  - version: 5.4.37-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-02-03T17:27:55'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.37-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/63835823986369ab5982cc6ea1345a962fda5b4a/5.4/apache/Dockerfile

  - version: 5.4.36-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.36-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.4/fpm/Dockerfile

  - version: 5.4.36-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.36-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.4/Dockerfile

  - version: 5.4.36-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-01-09T00:13:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.36-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/5d49ba5861c0245da96132b011c8dbdad8c28188/5.4/apache/Dockerfile

  - version: 5.4.35-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.35-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4a5d6cfe6902d86bea3f040c868b64712e94e7c1/5.4/fpm/Dockerfile

  - version: 5.4.35-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.35-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/4a5d6cfe6902d86bea3f040c868b64712e94e7c1/5.4/Dockerfile

  - version: 5.4.35-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2014-12-18T15:48:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.35-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/58c3fd175cb3ab30633fbc3e86314154ecc38e89/5.4/apache/Dockerfile

  - version: 5.4.34-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2014-11-13T17:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.34-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b2e1b8e2a37db419ae1244b9f63456b86f666ffe/5.4/Dockerfile

  - version: 5.4.34-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2014-11-13T17:35:44'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4.34-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/b2e1b8e2a37db419ae1244b9f63456b86f666ffe/5.4/apache/Dockerfile

  - version: 5.4.33-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2014-10-15T17:38:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.4.33-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9fc452451b227d1d20b77183cacc26906c9f669d/5.4/Dockerfile

  - version: 5.4.33-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2014-10-15T17:38:36'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.4.33-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/9fc452451b227d1d20b77183cacc26906c9f669d/5.4/apache/Dockerfile

  - version: 5.4.32-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2014-09-13T18:21:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: php:5.4.32-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e19f15271b1cbe9d3e5c9f0c552beca9579f0677/5.4/Dockerfile

  - version: 5.4.32-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2014-09-13T18:21:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: php:5.4.32-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/e19f15271b1cbe9d3e5c9f0c552beca9579f0677/5.4/apache/Dockerfile

  - version: 5.4-fpm
    majorVersion: '5.4'
    prerelease: false
    date: '2015-12-03T14:50:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4-fpm
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.4/fpm/Dockerfile

  - version: 5.4-cli
    majorVersion: '5.4'
    prerelease: false
    date: '2015-12-03T14:50:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.4/Dockerfile

  - version: 5.4-apache
    majorVersion: '5.4'
    prerelease: false
    date: '2015-12-03T14:50:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: php:5.4-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/fec7f537f049aafd2102202519c3ca9cb9576707/5.4/apache/Dockerfile

  - version: 5.3.29-cli
    majorVersion: '5.3'
    prerelease: false
    date: '2014-10-13T16:30:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.3.29-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6b0affa0c5a8cc1cbbd8b1110f239a226a137c97/5.3/Dockerfile

  - version: 5.3.29-apache
    majorVersion: '5.3'
    prerelease: false
    date: '2014-10-13T16:30:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.3.29-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6b0affa0c5a8cc1cbbd8b1110f239a226a137c97/5.3/apache/Dockerfile

  - version: 5.3-cli
    majorVersion: '5.3'
    prerelease: false
    date: '2014-10-13T16:30:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.3-cli
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6b0affa0c5a8cc1cbbd8b1110f239a226a137c97/5.3/Dockerfile

  - version: 5.3-apache
    majorVersion: '5.3'
    prerelease: false
    date: '2014-10-13T16:30:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: php:5.3-apache
        urlRepository: https://github.com/docker-library/php
        urlDockerfile: https://raw.githubusercontent.com/docker-library/php/6b0affa0c5a8cc1cbbd8b1110f239a226a137c97/5.3/apache/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/pypy.yml", "\"CiAgLSB2ZXJzaW9uOiAnMy42JwogICAgbWFqb3JWZXJzaW9uOiAnMy42JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA1LTA2VDE2OjA3OjMwJwogICAgY3VycmVudDogdHJ1ZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5LzZlYzkyNjI2YjI0N2JlMDY2YTBjODlkODY1MjFhMDA1NzFjYzVkNDQvMy42L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZS1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvNmVjOTI2MjZiMjQ3YmUwNjZhMGM4OWQ4NjUyMWEwMDU3MWNjNWQ0NC8zLjYvc2xpbS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9lYjhmNWExMzc5Y2I5NTVjMzI2NzhlNWI0ODI0ZjEyNjNhZjhhYjA5LzMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaC1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1zbGltLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2ViOGY1YTEzNzljYjk1NWMzMjY3OGU1YjQ4MjRmMTI2M2FmOGFiMDkvMy42L3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246ICczLjUnCiAgICBtYWpvclZlcnNpb246ICczLjUnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTktMDUtMDZUMTY6MDc6MzAnCiAgICBjdXJyZW50OiB0cnVlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvYTI1ZGZlZDRhNmY2ODRlZGZhNDQ5NDdmZGI5ZjE5ODk2MmM1ODg1YS8zLjUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LXNsaW0tamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9hMjVkZmVkNGE2ZjY4NGVkZmE0NDk0N2ZkYjlmMTk4OTYyYzU4ODVhLzMuNS9zbGltL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5LzJlNWJjYTM5MzIxY2NhZWNiZmU5ZjM4N2UyMGI0M2QwNGMyNzAxNTQvMy41L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvMmU1YmNhMzkzMjFjY2FlY2JmZTlmMzg3ZTIwYjQzZDA0YzI3MDE1NC8zLjUvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogJzIuNycKICAgIG1ham9yVmVyc2lvbjogJzIuNycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wNS0wNlQxNjowNzozMCcKICAgIGN1cnJlbnQ6IHRydWUKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweToyLjctamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9lYjhmNWExMzc5Y2I5NTVjMzI2NzhlNWI0ODI0ZjEyNjNhZjhhYjA5LzIuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweToyLjctc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2ViOGY1YTEzNzljYjk1NWMzMjY3OGU1YjQ4MjRmMTI2M2FmOGFiMDkvMi43L3NsaW0vRG9ja2VyZmlsZQo=\"")
	packr.PackJSONBytes("../config", "versions/python.yml", "\"
  - version: 3.8.0a4
    majorVersion: '3.8'
    prerelease: true
    date: '2019-05-07T15:49:35'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.8.0a4-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f6e98ea8b8ef4e9a520e05d481d2640a35f9542c/3.8-rc/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.8.0a4-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f6e98ea8b8ef4e9a520e05d481d2640a35f9542c/3.8-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.8.0a4-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f6e98ea8b8ef4e9a520e05d481d2640a35f9542c/3.8-rc/stretch/slim/Dockerfile

  - version: 3.8.0a3
    majorVersion: '3.8'
    prerelease: true
    date: '2019-04-24T03:25:18'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.8.0a3-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4e284ff8ad5458518743188afa3e64d83ea9986c/3.8-rc/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.8.0a3-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4e284ff8ad5458518743188afa3e64d83ea9986c/3.8-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.8.0a3-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4e284ff8ad5458518743188afa3e64d83ea9986c/3.8-rc/stretch/slim/Dockerfile

  - version: 3.8.0a2
    majorVersion: '3.8'
    prerelease: true
    date: '2019-03-21T14:31:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.8.0a2-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/fc2b02ab98f1d24e149758b05273d5f712a8946e/3.8-rc/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.8.0a2-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/fc2b02ab98f1d24e149758b05273d5f712a8946e/3.8-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.8.0a2-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/fc2b02ab98f1d24e149758b05273d5f712a8946e/3.8-rc/stretch/slim/Dockerfile

  - version: 3.8.0a1
    majorVersion: '3.8'
    prerelease: true
    date: '2019-02-21T13:40:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.8.0a1-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6c42dbe19061cb1abcda541dc0c7a4d0aef5aacf/3.8-rc/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.8.0a1-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6c42dbe19061cb1abcda541dc0c7a4d0aef5aacf/3.8-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.8.0a1-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6c42dbe19061cb1abcda541dc0c7a4d0aef5aacf/3.8-rc/stretch/slim/Dockerfile

  - version: 3.7.3
    majorVersion: '3.7'
    prerelease: false
    date: '2019-05-07T15:49:35'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.7.3-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34c9df35e9a69e9f0edde88e861b543edb8bc07a/3.7/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.7.3-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34c9df35e9a69e9f0edde88e861b543edb8bc07a/3.7/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.3-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34c9df35e9a69e9f0edde88e861b543edb8bc07a/3.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.3-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34c9df35e9a69e9f0edde88e861b543edb8bc07a/3.7/stretch/slim/Dockerfile

  - version: 3.7.2
    majorVersion: '3.7'
    prerelease: false
    date: '2019-03-21T14:31:04'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.2-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/344fd4f05b1e81dd97f8334e30035c0359dfde7f/3.7/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.7.2-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9bb5d46dbcf16250a2d292ddc1e0b7a792aa275f/3.7/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.7.2-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9bb5d46dbcf16250a2d292ddc1e0b7a792aa275f/3.7/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.2-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9bb5d46dbcf16250a2d292ddc1e0b7a792aa275f/3.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.2-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9bb5d46dbcf16250a2d292ddc1e0b7a792aa275f/3.7/stretch/slim/Dockerfile

  - version: 3.7.1
    majorVersion: '3.7'
    prerelease: false
    date: '2018-12-06T16:50:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.1-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.7/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.7.1-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.7/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.1-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.1-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.7/stretch/slim/Dockerfile

  - version: 3.7.0b5
    majorVersion: '3.7'
    prerelease: true
    date: '2018-06-27T10:25:47'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0b5-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/bbbc37fff3411a34deef30dd9b34dc938fe7b134/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0b5-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f38c92b3fc2db507290e443b3e7b2844ebf16ab9/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0b5-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f38c92b3fc2db507290e443b3e7b2844ebf16ab9/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0b4
    majorVersion: '3.7'
    prerelease: true
    date: '2018-05-23T10:13:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0b4-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ba5711fb564133bf9c8b870b431682a4db427219/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0b4-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ba5711fb564133bf9c8b870b431682a4db427219/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0b4-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b8c94a31a98a535477200482a32c95192f85af5b/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0b3
    majorVersion: '3.7'
    prerelease: true
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0b3-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/886a292a44ec78ab8052d3bd0731f9bdaddcd3f9/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0b3-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/886a292a44ec78ab8052d3bd0731f9bdaddcd3f9/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0b3-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/886a292a44ec78ab8052d3bd0731f9bdaddcd3f9/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0b2
    majorVersion: '3.7'
    prerelease: true
    date: '2018-03-29T12:32:54'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0b2-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b9ecbb7d3ad02696a764c81b3625a9c71fd9bea5/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0b2-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b9ecbb7d3ad02696a764c81b3625a9c71fd9bea5/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0b2-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b9ecbb7d3ad02696a764c81b3625a9c71fd9bea5/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0b1
    majorVersion: '3.7'
    prerelease: true
    date: '2018-02-08T13:36:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0b1-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/1dcbfcceba5dc2d3ebf0a414926f2645aec0150e/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0b1-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/1dcbfcceba5dc2d3ebf0a414926f2645aec0150e/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0b1-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/1dcbfcceba5dc2d3ebf0a414926f2645aec0150e/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0a4
    majorVersion: '3.7'
    prerelease: true
    date: '2018-01-09T13:07:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0a4-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2f73f58fb5ad731616109e0b8ed6367a0d474c52/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0a4-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2f73f58fb5ad731616109e0b8ed6367a0d474c52/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0a4-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2f73f58fb5ad731616109e0b8ed6367a0d474c52/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0a3
    majorVersion: '3.7'
    prerelease: true
    date: '2017-12-20T16:08:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.7.0a3-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ba34cdcf7860a9fb6a272f8e1b13b753b11d912b/3.7-rc/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0a3-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8717dc2523c8093990cb958bb8c47ade6f851c05/3.7-rc/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0a3-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ba34cdcf7860a9fb6a272f8e1b13b753b11d912b/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0a3-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ba34cdcf7860a9fb6a272f8e1b13b753b11d912b/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0a2
    majorVersion: '3.7'
    prerelease: true
    date: '2017-11-22T15:38:29'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.7.0a2-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/3f12f511910098f45951111aa5642fd935133afc/3.7-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0a2-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/3f12f511910098f45951111aa5642fd935133afc/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0a2-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a4ce69de053337ec22d7f322cd997398eeba2350/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0a1
    majorVersion: '3.7'
    prerelease: true
    date: '2017-10-10T09:16:21'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.7.0a1-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/45685613e1189227b91affba86dfcb2c764d7fa4/3.7-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0a1-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/45685613e1189227b91affba86dfcb2c764d7fa4/3.7-rc/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: python:3.7.0a1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/45685613e1189227b91affba86dfcb2c764d7fa4/3.7-rc/stretch/slim/Dockerfile

  - version: 3.7.0
    majorVersion: '3.7'
    prerelease: false
    date: '2018-10-09T11:03:13'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.7.0-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/38dcdb4320c8668416205e044ee50489c059da18/3.7/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.7.0-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/38dcdb4320c8668416205e044ee50489c059da18/3.7/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.7.0-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/38dcdb4320c8668416205e044ee50489c059da18/3.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.7.0-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/38dcdb4320c8668416205e044ee50489c059da18/3.7/stretch/slim/Dockerfile

  - version: 3.6.8
    majorVersion: '3.6'
    prerelease: false
    date: '2019-05-07T15:49:35'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.8-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/dd36c08c1f94083476a8579b8bf20c4cd46c6400/3.6/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.6.8-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/dd36c08c1f94083476a8579b8bf20c4cd46c6400/3.6/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.6.8-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4df129649329186fb42c9c33215b41d82bc0e58e/3.6/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.6.8-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4df129649329186fb42c9c33215b41d82bc0e58e/3.6/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.8-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4df129649329186fb42c9c33215b41d82bc0e58e/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.6.8-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4df129649329186fb42c9c33215b41d82bc0e58e/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.8-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4df129649329186fb42c9c33215b41d82bc0e58e/3.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.6.8-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4df129649329186fb42c9c33215b41d82bc0e58e/3.6/stretch/slim/Dockerfile

  - version: 3.6.7
    majorVersion: '3.6'
    prerelease: false
    date: '2018-12-06T16:50:32'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.7-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.6.7-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.6.7-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.7-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.6.7-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.7-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.6.7-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/39c500cc8aefcb67a76d518d789441ef85fc771f/3.6/stretch/slim/Dockerfile

  - version: 3.6.6
    majorVersion: '3.6'
    prerelease: false
    date: '2018-10-09T11:03:13'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.6-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.6.6-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.6.6-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.6-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.6.6-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.6-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.6.6-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88812635c8ad7ff06a8a3755616a1040df222f3c/3.6/stretch/slim/Dockerfile

  - version: 3.6.5
    majorVersion: '3.6'
    prerelease: false
    date: '2018-06-05T12:41:50'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.5-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b99b66406ebe728fb4da64548066ad0be6582e08/3.6/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.5-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c71ea7995d68c3219f2d251768a384d9995d4af0/3.6/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.6.5-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c71ea7995d68c3219f2d251768a384d9995d4af0/3.6/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.5-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b99b66406ebe728fb4da64548066ad0be6582e08/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.6.5-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b8c94a31a98a535477200482a32c95192f85af5b/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.5-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b99b66406ebe728fb4da64548066ad0be6582e08/3.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.6.5-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/b8c94a31a98a535477200482a32c95192f85af5b/3.6/stretch/slim/Dockerfile

  - version: 3.6.4
    majorVersion: '3.6'
    prerelease: false
    date: '2018-03-22T10:21:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.4-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.4-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.6.4-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.4-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.6.4-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.4-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.6.4-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9a08272dbcbcd8f917ac98f494e6f0e3e7d929e/3.6/stretch/slim/Dockerfile

  - version: 3.6.3
    majorVersion: '3.6'
    prerelease: false
    date: '2017-12-19T13:25:09'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.3-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8717dc2523c8093990cb958bb8c47ade6f851c05/3.6/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.3-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8717dc2523c8093990cb958bb8c47ade6f851c05/3.6/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.6.3-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f45e1fb3d57ccce5042d22f4fb618c4dc56d1819/3.6/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.3-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cf179e4a7b442b29d85f521c2b172b89ef04beef/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.6.3-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a4ce69de053337ec22d7f322cd997398eeba2350/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.3-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cf179e4a7b442b29d85f521c2b172b89ef04beef/3.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.6.3-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a4ce69de053337ec22d7f322cd997398eeba2350/3.6/stretch/slim/Dockerfile

  - version: 3.6.2rc2
    majorVersion: '3.6'
    prerelease: true
    date: '2017-07-10T10:50:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.2rc2-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6db347bbd39cb34aa762bfb5807ed327e8d8b72c/3.6-rc/alpine/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.2rc2-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6db347bbd39cb34aa762bfb5807ed327e8d8b72c/3.6-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.2rc2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6db347bbd39cb34aa762bfb5807ed327e8d8b72c/3.6-rc/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.2rc2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6db347bbd39cb34aa762bfb5807ed327e8d8b72c/3.6-rc/slim/Dockerfile

  - version: 3.6.2rc1
    majorVersion: '3.6'
    prerelease: true
    date: '2017-07-05T16:42:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.2rc1-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/73d283d3dccd196f758466f29a715e6ab9b533a7/3.6-rc/alpine/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.2rc1-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/73d283d3dccd196f758466f29a715e6ab9b533a7/3.6-rc/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.2rc1
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/73d283d3dccd196f758466f29a715e6ab9b533a7/3.6-rc/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.2rc1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/73d283d3dccd196f758466f29a715e6ab9b533a7/3.6-rc/slim/Dockerfile

  - version: 3.6.2
    majorVersion: '3.6'
    prerelease: false
    date: '2017-10-02T15:47:07'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.2-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.6/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.2-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/5d86c858d58f84b8dd1274ac61ac1c9c9ebc7739/3.6/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.2-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.6/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/45685613e1189227b91affba86dfcb2c764d7fa4/3.6/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.6.2-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9954b06c8b178d7888bc1626bed5a14e43a9203/3.6/stretch/Dockerfile

  - version: 3.6.1
    majorVersion: '3.6'
    prerelease: false
    date: '2017-07-10T10:50:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.1-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88ba87d31a3033d4dbefecf44ce25aa1b69ab3e5/3.6/alpine/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:3.6.1-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88ba87d31a3033d4dbefecf44ce25aa1b69ab3e5/3.6/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.1
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88ba87d31a3033d4dbefecf44ce25aa1b69ab3e5/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/88ba87d31a3033d4dbefecf44ce25aa1b69ab3e5/3.6/slim/Dockerfile

  - version: 3.6.0rc2
    majorVersion: '3.6'
    prerelease: true
    date: '2016-12-21T16:57:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0rc2-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/26ac1ac8c63ddd479c869845c16261c527fe9945/3.6-rc/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0rc2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/26ac1ac8c63ddd479c869845c16261c527fe9945/3.6-rc/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0rc2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/26ac1ac8c63ddd479c869845c16261c527fe9945/3.6-rc/slim/Dockerfile

  - version: 3.6.0rc1
    majorVersion: '3.6'
    prerelease: true
    date: '2016-12-07T15:47:34'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0rc1-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12bf960914ceaec59562cf49cf048b971e54399a/3.6-rc/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0rc1
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12bf960914ceaec59562cf49cf048b971e54399a/3.6-rc/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0rc1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12bf960914ceaec59562cf49cf048b971e54399a/3.6-rc/slim/Dockerfile

  - version: 3.6.0b4
    majorVersion: '3.6'
    prerelease: true
    date: '2016-11-23T10:11:50'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0b4-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d8aac61bc3abddfd7ba58724446cf9b0e949ffa4/3.6-rc/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0b4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d8aac61bc3abddfd7ba58724446cf9b0e949ffa4/3.6-rc/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0b4-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d8aac61bc3abddfd7ba58724446cf9b0e949ffa4/3.6-rc/slim/Dockerfile

  - version: 3.6.0b3
    majorVersion: '3.6'
    prerelease: true
    date: '2016-11-17T10:22:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0b3-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.6-rc/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0b3
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.6-rc/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0b3-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.6-rc/slim/Dockerfile

  - version: 3.6.0b2
    majorVersion: '3.6'
    prerelease: true
    date: '2016-10-27T14:14:03'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0b2-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/83b8e044aa38ab97b5427a9591e0537464e976e6/3.6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0b2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a29d327288ff02b2f54be0d2b7340736e2329bdc/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0b2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6b24d8cd0ad4c5a01874d094d92cd79518b3d490/3.6/slim/Dockerfile

  - version: 3.6.0b1
    majorVersion: '3.6'
    prerelease: true
    date: '2016-09-16T12:01:10'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0b1-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a70c6819aa38d938d56e96408aa6e7c3a9162c64/3.6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0b1
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a70c6819aa38d938d56e96408aa6e7c3a9162c64/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0b1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a70c6819aa38d938d56e96408aa6e7c3a9162c64/3.6/slim/Dockerfile

  - version: 3.6.0a4
    majorVersion: '3.6'
    prerelease: true
    date: '2016-08-22T09:59:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0a4-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/855b85c8309e925814dfa97d61310080dcd08db6/3.6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0a4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/855b85c8309e925814dfa97d61310080dcd08db6/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0a4-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/855b85c8309e925814dfa97d61310080dcd08db6/3.6/slim/Dockerfile

  - version: 3.6.0a3
    majorVersion: '3.6'
    prerelease: true
    date: '2016-08-09T10:07:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0a3-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f1bc9f790605ecf0dabce4c24ef9ee5ce205e496/3.6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0a3
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f1bc9f790605ecf0dabce4c24ef9ee5ce205e496/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0a3-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f1bc9f790605ecf0dabce4c24ef9ee5ce205e496/3.6/slim/Dockerfile

  - version: 3.6.0a2
    majorVersion: '3.6'
    prerelease: true
    date: '2016-08-01T10:19:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0a2-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8ab2af26df98ddbcd7ce7d39b0ee343dd8d86d41/3.6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0a2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a819c92949e182901df10e52d41bc57c6ca73bd5/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0a2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a819c92949e182901df10e52d41bc57c6ca73bd5/3.6/slim/Dockerfile

  - version: 3.6.0
    majorVersion: '3.6'
    prerelease: false
    date: '2017-01-23T15:54:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.6.0-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ad4706ad7d23ef13472d2ee340aa43f3b9573e3d/3.6/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.6.0
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/7eca63adca38729424a9bab957f006f5caad870f/3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.6.0-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/7eca63adca38729424a9bab957f006f5caad870f/3.6/slim/Dockerfile

  - version: 3.5.7
    majorVersion: '3.5'
    prerelease: false
    date: '2019-05-07T15:49:35'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.5.7-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f233f51a2f14acee632669b56767c1cc229d2747/3.5/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.5.7-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f233f51a2f14acee632669b56767c1cc229d2747/3.5/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.7-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f233f51a2f14acee632669b56767c1cc229d2747/3.5/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.5.7-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f233f51a2f14acee632669b56767c1cc229d2747/3.5/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.5.7-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f233f51a2f14acee632669b56767c1cc229d2747/3.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.5.7-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f233f51a2f14acee632669b56767c1cc229d2747/3.5/stretch/slim/Dockerfile

  - version: 3.5.6
    majorVersion: '3.5'
    prerelease: false
    date: '2019-03-08T19:14:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.5.6-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/72cda33211d4718c347a381625cf0ea59e20040c/3.5/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.5.6-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/af2cf72d9c6c304d041c88db3e79242fd8c9ce60/3.5/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.5.6-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/af2cf72d9c6c304d041c88db3e79242fd8c9ce60/3.5/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.6-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/af2cf72d9c6c304d041c88db3e79242fd8c9ce60/3.5/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.5.6-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/af2cf72d9c6c304d041c88db3e79242fd8c9ce60/3.5/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.5.6-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/af2cf72d9c6c304d041c88db3e79242fd8c9ce60/3.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.5.6-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/af2cf72d9c6c304d041c88db3e79242fd8c9ce60/3.5/stretch/slim/Dockerfile

  - version: 3.5.5
    majorVersion: '3.5'
    prerelease: false
    date: '2018-07-31T13:22:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.5.5-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a652f35d6ce77f02ca268d67f39e7dfa24cf08c5/3.5/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.5.5-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cc8d2323a87f82ab67a982ee00eca1a3a463d18e/3.5/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.5.5-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cc8d2323a87f82ab67a982ee00eca1a3a463d18e/3.5/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.5-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/48284b41a887508cae25d1040bf44abcd1ed2c91/3.5/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.5.5-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8350b865d28bc0f4a05111398392ec701d449058/3.5/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.5.5-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/48284b41a887508cae25d1040bf44abcd1ed2c91/3.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.5.5-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8350b865d28bc0f4a05111398392ec701d449058/3.5/stretch/slim/Dockerfile

  - version: 3.5.4
    majorVersion: '3.5'
    prerelease: false
    date: '2018-01-09T13:07:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.5.4-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8717dc2523c8093990cb958bb8c47ade6f851c05/3.5/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.4-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/6ebbaa8a56cdf4021c78e87b3872be3861ac072a/3.5/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.5.4-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a4ce69de053337ec22d7f322cd997398eeba2350/3.5/jessie/slim/Dockerfile

  - version: 3.5.3
    majorVersion: '3.5'
    prerelease: false
    date: '2017-07-18T11:13:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.5.3-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.5/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.3-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.5/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.5.3-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.5/jessie/slim/Dockerfile

  - version: 3.5.2
    majorVersion: '3.5'
    prerelease: false
    date: '2017-01-19T16:56:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.5.2-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ad4706ad7d23ef13472d2ee340aa43f3b9573e3d/3.5/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.5.2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.5/slim/Dockerfile

  - version: 3.5.1
    majorVersion: '3.5'
    prerelease: false
    date: '2016-06-09T12:08:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.5.1-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0610d9ccc2dc8ad4ab6038f775e7a28cadf12114/3.5/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.1
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.5.1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.5/slim/Dockerfile

  - version: 3.5.0b3
    majorVersion: '3.5'
    prerelease: true
    date: '2015-08-24T10:12:21'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.0b3
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0fa3202789648132971160f686f5a37595108f44/3.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.5.0b3-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0fa3202789648132971160f686f5a37595108f44/3.5/slim/Dockerfile

  - version: 3.5.0
    majorVersion: '3.5'
    prerelease: false
    date: '2015-10-19T11:11:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.5.0
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/e4a0ed26c086a48a75e9ea2b163c8262dcdff2af/3.5/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.5.0-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/e4a0ed26c086a48a75e9ea2b163c8262dcdff2af/3.5/slim/Dockerfile

  - version: 3.4.10
    majorVersion: '3.4'
    prerelease: false
    date: '2019-03-18T21:49:36'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.4.10-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.4.10-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.10-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.10-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.4.10-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.4.10-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.4.10-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cd7d18f5e1eff40186b496ca214e330ea02edb07/3.4/stretch/slim/Dockerfile

  - version: 3.4.9
    majorVersion: '3.4'
    prerelease: false
    date: '2019-03-08T19:14:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.4.9-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/408f7b8130a44463119acfd66d28430f8b4a1f06/3.4/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.4.9-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:3.4.9-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.9-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.9-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.4.9-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.4.9-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.4.9-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ae9270e7cab01ce5cde6efe89694d04dd9ef9f65/3.4/stretch/slim/Dockerfile

  - version: 3.4.8
    majorVersion: '3.4'
    prerelease: false
    date: '2018-07-31T13:22:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.4.8-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/92b33f97f0e1f1faabca46aee0f5520c1b038ed5/3.4/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:3.4.8-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cc8d2323a87f82ab67a982ee00eca1a3a463d18e/3.4/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:3.4.8-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/cc8d2323a87f82ab67a982ee00eca1a3a463d18e/3.4/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.8-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34eb5b14953c4359205644790c3c8979a347f662/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.8-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34eb5b14953c4359205644790c3c8979a347f662/3.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.4.8-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8350b865d28bc0f4a05111398392ec701d449058/3.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:3.4.8-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/34eb5b14953c4359205644790c3c8979a347f662/3.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:3.4.8-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8350b865d28bc0f4a05111398392ec701d449058/3.4/stretch/slim/Dockerfile

  - version: 3.4.7
    majorVersion: '3.4'
    prerelease: false
    date: '2018-01-09T13:07:55'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.4.7-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/8717dc2523c8093990cb958bb8c47ade6f851c05/3.4/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.7-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/27516b7347b3236a3accd4b2e1242a53fb54d04c/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.7-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/27516b7347b3236a3accd4b2e1242a53fb54d04c/3.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:3.4.7-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/a4ce69de053337ec22d7f322cd997398eeba2350/3.4/jessie/slim/Dockerfile

  - version: 3.4.6
    majorVersion: '3.4'
    prerelease: false
    date: '2017-07-18T11:13:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.4.6-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.4/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.6-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/5d86c858d58f84b8dd1274ac61ac1c9c9ebc7739/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.6-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.4.6-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.4/jessie/slim/Dockerfile

  - version: 3.4.5
    majorVersion: '3.4'
    prerelease: false
    date: '2017-01-05T13:39:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.4.5-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/ad4706ad7d23ef13472d2ee340aa43f3b9573e3d/3.4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.5-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.5
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.4.5-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/3.4/slim/Dockerfile

  - version: 3.4.4
    majorVersion: '3.4'
    prerelease: false
    date: '2016-06-09T12:08:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.4.4-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0610d9ccc2dc8ad4ab6038f775e7a28cadf12114/3.4/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.4-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.4.4-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.4/slim/Dockerfile

  - version: 3.4.3
    majorVersion: '3.4'
    prerelease: false
    date: '2015-12-08T13:02:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.3-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/15798abb6cfb145344462a345db4b572227fb859/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.3
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/15798abb6cfb145344462a345db4b572227fb859/3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.4.3-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/15798abb6cfb145344462a345db4b572227fb859/3.4/slim/Dockerfile

  - version: 3.4.2
    majorVersion: '3.4'
    prerelease: false
    date: '2015-02-17T08:42:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.4.2-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/25134c1757699a357936b94924a97536f9526040/3.4/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.4.2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/25134c1757699a357936b94924a97536f9526040/3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.4.2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/25134c1757699a357936b94924a97536f9526040/3.4/slim/Dockerfile

  - version: 3.4.1
    majorVersion: '3.4'
    prerelease: false
    date: '2014-10-03T15:13:23'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: python:3.4.1
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9cdb6eeb857908d3817cdd46f63e3b954f3072ae/3.4/Dockerfile

  - version: 3.3.7rc1
    majorVersion: '3.3'
    prerelease: true
    date: '2017-09-18T09:22:06'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.3.7rc1-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/20a35d083b77466fe1de7ceb0cf40528fc9f6b1f/3.3-rc/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.3.7rc1-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/20a35d083b77466fe1de7ceb0cf40528fc9f6b1f/3.3-rc/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.3.7rc1-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/20a35d083b77466fe1de7ceb0cf40528fc9f6b1f/3.3-rc/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.3.7rc1-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/20a35d083b77466fe1de7ceb0cf40528fc9f6b1f/3.3-rc/jessie/slim/Dockerfile

  - version: 3.3.7
    majorVersion: '3.3'
    prerelease: false
    date: '2017-09-28T11:05:46'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.3.7-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/eb5fcfeb040c4ecdb32fd79caa547943e18f9c97/3.3/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.3.7-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/eb5fcfeb040c4ecdb32fd79caa547943e18f9c97/3.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.3.7-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/eb5fcfeb040c4ecdb32fd79caa547943e18f9c97/3.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.3.7-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/45685613e1189227b91affba86dfcb2c764d7fa4/3.3/jessie/slim/Dockerfile

  - version: 3.3.6
    majorVersion: '3.3'
    prerelease: false
    date: '2017-09-18T09:22:06'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:3.3.6-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.3/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.3.6-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/5d86c858d58f84b8dd1274ac61ac1c9c9ebc7739/3.3/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.3.6-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.3.6-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/3.3/jessie/slim/Dockerfile

  - version: 3.3.5
    majorVersion: '3.3'
    prerelease: false
    date: '2014-10-08T10:42:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: python:3.3.5
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/5da3b09cc56f1a431c912dcb1dc1d72efbd17409/3.3/Dockerfile

  - version: 3.2.6
    majorVersion: '3.2'
    prerelease: false
    date: '2016-01-18T09:07:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.2.6-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12db3f7b07f9704719657a0652357a3ae4cdc1c1/3.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.2.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12db3f7b07f9704719657a0652357a3ae4cdc1c1/3.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.2.6-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12db3f7b07f9704719657a0652357a3ae4cdc1c1/3.2/slim/Dockerfile

  - version: '3.2'
    majorVersion: '3.2'
    prerelease: false
    date: '2016-01-18T09:07:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:3.2-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12db3f7b07f9704719657a0652357a3ae4cdc1c1/3.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:3.2
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12db3f7b07f9704719657a0652357a3ae4cdc1c1/3.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:3.2-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/12db3f7b07f9704719657a0652357a3ae4cdc1c1/3.2/slim/Dockerfile

  - version: 2.7.16
    majorVersion: '2.7'
    prerelease: false
    date: '2019-05-07T15:49:35'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:2.7.16-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/00dfb8462f6b3fca152d46b20c0d3b70e8c7ff5b/2.7/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:2.7.16-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/00dfb8462f6b3fca152d46b20c0d3b70e8c7ff5b/2.7/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.16-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/636e02777ea417851942e6e826fe5a6b4dee6f74/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.16-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/00dfb8462f6b3fca152d46b20c0d3b70e8c7ff5b/2.7/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:2.7.16-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/00dfb8462f6b3fca152d46b20c0d3b70e8c7ff5b/2.7/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:2.7.16-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/00dfb8462f6b3fca152d46b20c0d3b70e8c7ff5b/2.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:2.7.16-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/00dfb8462f6b3fca152d46b20c0d3b70e8c7ff5b/2.7/stretch/slim/Dockerfile

  - version: 2.7.15
    majorVersion: '2.7'
    prerelease: false
    date: '2019-02-26T15:56:00'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:2.7.15-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/4d640edc8df64b9cf050904f60ac03765e05d3f6/2.7/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:2.7.15-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/24860503e8c7d1fba51e352bfdd25474d56a7ab7/2.7/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:2.7.15-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/24860503e8c7d1fba51e352bfdd25474d56a7ab7/2.7/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: python:2.7.15-alpine3.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: python:2.7.15-alpine3.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.15-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.15-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:2.7.15-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:2.7.15-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:2.7.15-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/f444edd8a36e828ddf9d72aa3d3282725db0e48b/2.7/stretch/slim/Dockerfile

  - version: 2.7.14
    majorVersion: '2.7'
    prerelease: false
    date: '2018-04-26T10:23:08'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:2.7.14-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:2.7.14-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: python:2.7.14-alpine3.7
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.14-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.14-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: python:2.7.14-slim-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:2.7.14-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: python:2.7.14-slim-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/2c06746f8a82729f9265c1e17c29b1e937af7441/2.7/stretch/slim/Dockerfile

  - version: 2.7.13
    majorVersion: '2.7'
    prerelease: false
    date: '2017-09-07T12:30:31'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:2.7.13-alpine3.4
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/2.7/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: python:2.7.13-alpine3.6
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/5d86c858d58f84b8dd1274ac61ac1c9c9ebc7739/2.7/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.13-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/5d86c858d58f84b8dd1274ac61ac1c9c9ebc7739/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.13-jessie
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/2.7/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:2.7.13-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/d3c5f47b788adb96e69477dadfb0baca1d97f764/2.7/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: python:2.7.13-stretch
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c9954b06c8b178d7888bc1626bed5a14e43a9203/2.7/stretch/Dockerfile

  - version: 2.7.12
    majorVersion: '2.7'
    prerelease: false
    date: '2016-12-19T08:31:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:2.7.12-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/2.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.12-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.12
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/2.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:2.7.12-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/693a75332e8ae5ad3bfae6e8399c4d7cc3cb6181/2.7/slim/Dockerfile

  - version: 2.7.11
    majorVersion: '2.7'
    prerelease: false
    date: '2016-06-09T12:08:41'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: python:2.7.11-alpine
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0610d9ccc2dc8ad4ab6038f775e7a28cadf12114/2.7/alpine/Dockerfile

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.11-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.11
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/2.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:2.7.11-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/9383f7d4d2f96068e8957651aa3588fee8b48f71/2.7/slim/Dockerfile

  - version: 2.7.10
    majorVersion: '2.7'
    prerelease: false
    date: '2015-10-19T11:11:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.10-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/15798abb6cfb145344462a345db4b572227fb859/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.10
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/15798abb6cfb145344462a345db4b572227fb859/2.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:2.7.10-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/15798abb6cfb145344462a345db4b572227fb859/2.7/slim/Dockerfile

  - version: 2.7.9
    majorVersion: '2.7'
    prerelease: false
    date: '2015-05-22T16:50:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.9-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0255766eee048e5e31934b8a230fa513574a0f31/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.9
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0255766eee048e5e31934b8a230fa513574a0f31/2.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:2.7.9-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/0255766eee048e5e31934b8a230fa513574a0f31/2.7/slim/Dockerfile

  - version: 2.7.8
    majorVersion: '2.7'
    prerelease: false
    date: '2014-12-02T13:51:11'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: python:2.7.8-wheezy
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/57be1a3fd72a87419aea35d6aacc873e9de9d447/2.7/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: python:2.7.8
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/fa713180402eeb7bf782d484c510b6c32418b45f/2.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: python:2.7.8-slim
        urlRepository: https://github.com/docker-library/python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/python/c0c674911c50ca3e21ba5379541f70c1b42685b4/2.7/slim/Dockerfile

  - version: 2.7.7
    majorVersion: '2.7'
    prerelease: false
    date: '2014-07-15T18:30:09'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps
        imageRepository: python:2.7.7
        urlRepository: https://github.com/docker-library/docker-python
        urlDockerfile: https://raw.githubusercontent.com/docker-library/docker-python/771cb8f39dee0850092b978346a8c95ba0d9c273/2/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/ruby.yml", "\"
  - version: 2.6.3
    majorVersion: '2.6'
    prerelease: false
    date: '2019-04-17T17:03:14'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.6.3-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ae0943fa2935b3a13c72ae7d6afa2439145d7fa/2.6/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.6.3-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ae0943fa2935b3a13c72ae7d6afa2439145d7fa/2.6/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.6.3-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ae0943fa2935b3a13c72ae7d6afa2439145d7fa/2.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.6.3-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ae0943fa2935b3a13c72ae7d6afa2439145d7fa/2.6/stretch/slim/Dockerfile

  - version: 2.6.2
    majorVersion: '2.6'
    prerelease: false
    date: '2019-04-04T13:56:52'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.6.2-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/995719add69339b78bd8cde46183b4902b761add/2.6/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.6.2-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/995719add69339b78bd8cde46183b4902b761add/2.6/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.6.2-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/995719add69339b78bd8cde46183b4902b761add/2.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.6.2-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/995719add69339b78bd8cde46183b4902b761add/2.6/stretch/slim/Dockerfile

  - version: 2.6.1
    majorVersion: '2.6'
    prerelease: false
    date: '2019-03-07T15:54:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.6.1-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/96fc06fb331a20ba823ecc11563a99d1eb94203f/2.6/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.6.1-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/96fc06fb331a20ba823ecc11563a99d1eb94203f/2.6/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.6.1-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/96fc06fb331a20ba823ecc11563a99d1eb94203f/2.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.6.1-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/96fc06fb331a20ba823ecc11563a99d1eb94203f/2.6/stretch/slim/Dockerfile

  - version: 2.6.0
    majorVersion: '2.6'
    prerelease: false
    date: '2019-01-10T13:34:01'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.6.0-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/84db4691c080384c8fbce44c722d46cedd6a384b/2.6/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.6.0-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/84db4691c080384c8fbce44c722d46cedd6a384b/2.6/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.6.0-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/84db4691c080384c8fbce44c722d46cedd6a384b/2.6/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.6.0-rc2-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9f560c29e7d37e9b3e646c73bb829c56eb70d763/2.6-rc/stretch/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.6.0-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/da4b249e4ad5e521ba8c3d8b17119e9ac5af8df0/2.6/stretch/slim/Dockerfile

  - version: 2.5.5
    majorVersion: '2.5'
    prerelease: false
    date: '2019-04-17T17:03:14'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.5.5-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6f3497e40d44651802e1ec8a4647b23a3a63b355/2.5/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.5.5-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6f3497e40d44651802e1ec8a4647b23a3a63b355/2.5/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.5.5-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6f3497e40d44651802e1ec8a4647b23a3a63b355/2.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.5.5-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6f3497e40d44651802e1ec8a4647b23a3a63b355/2.5/stretch/slim/Dockerfile

  - version: 2.5.4
    majorVersion: '2.5'
    prerelease: false
    date: '2019-03-14T11:02:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.5.4-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/0e7baa45a1ff640f8b6a744b8e9b76adb206aeb4/2.5/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.5.4-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/0e7baa45a1ff640f8b6a744b8e9b76adb206aeb4/2.5/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.5.4-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/0e7baa45a1ff640f8b6a744b8e9b76adb206aeb4/2.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.5.4-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/0e7baa45a1ff640f8b6a744b8e9b76adb206aeb4/2.5/stretch/slim/Dockerfile

  - version: 2.5.3
    majorVersion: '2.5'
    prerelease: false
    date: '2019-03-07T15:54:56'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.5.3-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/84db4691c080384c8fbce44c722d46cedd6a384b/2.5/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.5.3-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.5/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.5.3-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.5/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.5.3-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.5.3-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.5/stretch/slim/Dockerfile

  - version: 2.5.1
    majorVersion: '2.5'
    prerelease: false
    date: '2018-10-05T10:08:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.5.1-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccf00a6b31abe14d27bdda498707a2ce338ef019/2.5/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.5.1-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccf00a6b31abe14d27bdda498707a2ce338ef019/2.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.5.1-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccf00a6b31abe14d27bdda498707a2ce338ef019/2.5/stretch/slim/Dockerfile

  - version: 2.5.0
    majorVersion: '2.5'
    prerelease: false
    date: '2018-02-16T14:36:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.5.0-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6bccf4bd0c6aa158b4a842c29f78c335ec9dc41b/2.5/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.5.0-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6bccf4bd0c6aa158b4a842c29f78c335ec9dc41b/2.5/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.5.0-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/6bccf4bd0c6aa158b4a842c29f78c335ec9dc41b/2.5/stretch/slim/Dockerfile

  - version: 2.4.6
    majorVersion: '2.4'
    prerelease: false
    date: '2019-04-17T17:03:14'
    current: true
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.4.6-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/802421922ef50cfa05c89a3c619992acf4329986/2.4/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.4.6-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/802421922ef50cfa05c89a3c619992acf4329986/2.4/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.6-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/802421922ef50cfa05c89a3c619992acf4329986/2.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: ruby:2.4.6-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/802421922ef50cfa05c89a3c619992acf4329986/2.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.4.6-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/802421922ef50cfa05c89a3c619992acf4329986/2.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.4.6-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/802421922ef50cfa05c89a3c619992acf4329986/2.4/stretch/slim/Dockerfile

  - version: 2.4.5
    majorVersion: '2.4'
    prerelease: false
    date: '2019-03-17T22:31:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: ruby:2.4.5-alpine3.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/58cbeeb8ea937737eeb8f358472add230b6ded30/2.4/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.4.5-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/84db4691c080384c8fbce44c722d46cedd6a384b/2.4/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.4.5-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.4/alpine3.8/Dockerfile

      - name: Alpine
        releaseName: '3.9'
        release: 3.9
        weight: 1
        image: alpine:3.9
        imageRepository: ruby:2.4.5-alpine3.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.4/alpine3.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.5-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: ruby:2.4.5-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.4.5-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.4.5-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.4/stretch/slim/Dockerfile

  - version: 2.4.4
    majorVersion: '2.4'
    prerelease: false
    date: '2018-10-05T10:08:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.4.4-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1bd8b466277668bff50528b26360e6e451e4dae4/2.4/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: ruby:2.4.4-alpine3.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccacdf5eb9e69b6f249a890c87621679410e7d74/2.4/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.4.4-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccacdf5eb9e69b6f249a890c87621679410e7d74/2.4/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.4-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccacdf5eb9e69b6f249a890c87621679410e7d74/2.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.4.4-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccacdf5eb9e69b6f249a890c87621679410e7d74/2.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.4.4-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccacdf5eb9e69b6f249a890c87621679410e7d74/2.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.4.4-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ccacdf5eb9e69b6f249a890c87621679410e7d74/2.4/stretch/slim/Dockerfile

  - version: 2.4.3
    majorVersion: '2.4'
    prerelease: false
    date: '2018-02-16T14:36:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.4.3-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: ruby:2.4.3-alpine3.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.4.3-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.3-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.4.3-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.4.3-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.4.3-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/83c60cc26a1efb0ea581b3343a97df7508481fcf/2.4/stretch/slim/Dockerfile

  - version: 2.4.2
    majorVersion: '2.4'
    prerelease: false
    date: '2017-12-11T18:54:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.4.2-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ecd8dcd7c5303b1c5772446d8fea938f3cd233c/2.4/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: ruby:2.4.2-alpine3.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ecd8dcd7c5303b1c5772446d8fea938f3cd233c/2.4/alpine3.6/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.4.2-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ee2df55c3abd3d0eccea5733f7041b733f8a5a62/2.4/alpine3.7/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.2-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ecd8dcd7c5303b1c5772446d8fea938f3cd233c/2.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.4.2-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ecd8dcd7c5303b1c5772446d8fea938f3cd233c/2.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.4.2-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ecd8dcd7c5303b1c5772446d8fea938f3cd233c/2.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.4.2-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9ecd8dcd7c5303b1c5772446d8fea938f3cd233c/2.4/stretch/slim/Dockerfile

  - version: 2.4.1
    majorVersion: '2.4'
    prerelease: false
    date: '2017-09-05T10:20:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.4.1-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/135c84979b1401a6963e75f3c95161bfe5be2336/2.4/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.6'
        release: 3.6
        weight: 1
        image: alpine:3.6
        imageRepository: ruby:2.4.1-alpine3.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/135c84979b1401a6963e75f3c95161bfe5be2336/2.4/alpine3.6/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.1-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/135c84979b1401a6963e75f3c95161bfe5be2336/2.4/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.4.1-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/135c84979b1401a6963e75f3c95161bfe5be2336/2.4/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.4.1-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/135c84979b1401a6963e75f3c95161bfe5be2336/2.4/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.4.1-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/135c84979b1401a6963e75f3c95161bfe5be2336/2.4/stretch/slim/Dockerfile

  - version: 2.4.0
    majorVersion: '2.4'
    prerelease: false
    date: '2017-03-17T11:39:43'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.4.0-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/5a967fab59319d95fd80e3956d1eeb54a66f9d77/2.4/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.4.0
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/5a967fab59319d95fd80e3956d1eeb54a66f9d77/2.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.4.0-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/5a967fab59319d95fd80e3956d1eeb54a66f9d77/2.4/slim/Dockerfile

  - version: 2.3.8
    majorVersion: '2.3'
    prerelease: false
    date: '2019-04-03T12:39:40'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.3.8-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.3.8-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.8-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: ruby:2.3.8-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.3.8-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: ruby:2.3.8-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/stretch/slim/Dockerfile

  - version: 2.3.7
    majorVersion: '2.3'
    prerelease: false
    date: '2018-10-05T10:08:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.7-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/78ecfcb108930a94eded6dfe1be50246052dc632/2.3/alpine3.4/Dockerfile

      - name: Alpine
        releaseName: '3.7'
        release: 3.7
        weight: 1
        image: alpine:3.7
        imageRepository: ruby:2.3.7-alpine3.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/676eadd43f87bdb1d3f033ea31ae69e45d11ee5b/2.3/alpine3.7/Dockerfile

      - name: Alpine
        releaseName: '3.8'
        release: 3.8
        weight: 1
        image: alpine:3.8
        imageRepository: ruby:2.3.7-alpine3.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/676eadd43f87bdb1d3f033ea31ae69e45d11ee5b/2.3/alpine3.8/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.7-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/676eadd43f87bdb1d3f033ea31ae69e45d11ee5b/2.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.7-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/676eadd43f87bdb1d3f033ea31ae69e45d11ee5b/2.3/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.3.7-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/676eadd43f87bdb1d3f033ea31ae69e45d11ee5b/2.3/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.3.7-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/676eadd43f87bdb1d3f033ea31ae69e45d11ee5b/2.3/stretch/slim/Dockerfile

  - version: 2.3.6
    majorVersion: '2.3'
    prerelease: false
    date: '2018-02-16T14:36:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.6-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/019b9214a571d4dcb5a7e9e43ef192ca75ff27b8/2.3/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.6-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/019b9214a571d4dcb5a7e9e43ef192ca75ff27b8/2.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.6-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/019b9214a571d4dcb5a7e9e43ef192ca75ff27b8/2.3/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: ruby:2.3.6-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/019b9214a571d4dcb5a7e9e43ef192ca75ff27b8/2.3/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 2
        image: debian:stretch
        imageRepository: ruby:2.3.6-slim-stretch
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/019b9214a571d4dcb5a7e9e43ef192ca75ff27b8/2.3/stretch/slim/Dockerfile

  - version: 2.3.5
    majorVersion: '2.3'
    prerelease: false
    date: '2017-12-11T18:54:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.5-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/e23879898862f2426e6714324c912d14db1067b5/2.3/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.5-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/e23879898862f2426e6714324c912d14db1067b5/2.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.5-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/e23879898862f2426e6714324c912d14db1067b5/2.3/jessie/slim/Dockerfile

  - version: 2.3.4
    majorVersion: '2.3'
    prerelease: false
    date: '2017-09-05T10:20:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.4-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d2a85bf5a3799c0592140ff66b269c823b813998/2.3/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.4-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d2a85bf5a3799c0592140ff66b269c823b813998/2.3/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.4-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d2a85bf5a3799c0592140ff66b269c823b813998/2.3/jessie/slim/Dockerfile

  - version: 2.3.3
    majorVersion: '2.3'
    prerelease: false
    date: '2017-03-22T12:57:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.3-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/7a3e1295bbc840c350fc37d406692301b27f4e86/2.3/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.3
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/7a3e1295bbc840c350fc37d406692301b27f4e86/2.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.3-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/7a3e1295bbc840c350fc37d406692301b27f4e86/2.3/slim/Dockerfile

  - version: 2.3.2
    majorVersion: '2.3'
    prerelease: false
    date: '2016-11-17T10:22:57'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.2-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9b3ffd5380f085847c4d0d885bc366f58a85a64a/2.3/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.2
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9b3ffd5380f085847c4d0d885bc366f58a85a64a/2.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.2-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9b3ffd5380f085847c4d0d885bc366f58a85a64a/2.3/slim/Dockerfile

  - version: 2.3.1
    majorVersion: '2.3'
    prerelease: false
    date: '2016-10-31T15:20:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.3.1-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ec068a416df98e3c01b47f07a314b12a6412cfc5/2.3/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.1
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ec068a416df98e3c01b47f07a314b12a6412cfc5/2.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.1-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ec068a416df98e3c01b47f07a314b12a6412cfc5/2.3/slim/Dockerfile

  - version: 2.3.0
    majorVersion: '2.3'
    prerelease: false
    date: '2016-04-05T15:17:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: ruby:2.3.0-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f19e5d966aadfaac7ce4a9d4db8f982db2fe690/2.3/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.3.0
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f19e5d966aadfaac7ce4a9d4db8f982db2fe690/2.3/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.3.0-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f19e5d966aadfaac7ce4a9d4db8f982db2fe690/2.3/slim/Dockerfile

  - version: 2.2.10
    majorVersion: '2.2'
    prerelease: false
    date: '2018-04-27T13:08:11'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.2.10-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/e48cb2431e5cdcd99ce8d8c236d7b73e7d4452f2/2.2/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.10-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/e48cb2431e5cdcd99ce8d8c236d7b73e7d4452f2/2.2/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.10-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/e48cb2431e5cdcd99ce8d8c236d7b73e7d4452f2/2.2/jessie/slim/Dockerfile

  - version: 2.2.9
    majorVersion: '2.2'
    prerelease: false
    date: '2018-02-16T14:36:05'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.2.9-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/127b99a6f22e43c3b9e0b9544dd77d85aa299906/2.2/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.9-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/127b99a6f22e43c3b9e0b9544dd77d85aa299906/2.2/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.9-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/127b99a6f22e43c3b9e0b9544dd77d85aa299906/2.2/jessie/slim/Dockerfile

  - version: 2.2.8
    majorVersion: '2.2'
    prerelease: false
    date: '2017-12-11T18:54:17'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.2.8-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1d57c363d6b25099cac5472c30632e2f92ddab61/2.2/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.8-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1d57c363d6b25099cac5472c30632e2f92ddab61/2.2/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.8-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1d57c363d6b25099cac5472c30632e2f92ddab61/2.2/jessie/slim/Dockerfile

  - version: 2.2.7
    majorVersion: '2.2'
    prerelease: false
    date: '2017-09-05T10:20:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.2.7-alpine3.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ab1275096a39d8952d1ede12d0a701cef9cb77d3/2.2/alpine3.4/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.7-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ab1275096a39d8952d1ede12d0a701cef9cb77d3/2.2/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.7-slim-jessie
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/ab1275096a39d8952d1ede12d0a701cef9cb77d3/2.2/jessie/slim/Dockerfile

  - version: 2.2.6
    majorVersion: '2.2'
    prerelease: false
    date: '2017-03-22T12:57:48'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.2.6-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f59d1d363dd65945a1feae08da2518ea934c334/2.2/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f59d1d363dd65945a1feae08da2518ea934c334/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.6-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f59d1d363dd65945a1feae08da2518ea934c334/2.2/slim/Dockerfile

  - version: 2.2.5
    majorVersion: '2.2'
    prerelease: false
    date: '2016-10-31T15:20:53'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.2.5-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9898bab20a28b2df0b279dcca4b8dee399a4b4d0/2.2/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.5
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9898bab20a28b2df0b279dcca4b8dee399a4b4d0/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.5-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/9898bab20a28b2df0b279dcca4b8dee399a4b4d0/2.2/slim/Dockerfile

  - version: 2.2.4
    majorVersion: '2.2'
    prerelease: false
    date: '2016-04-05T15:17:22'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: ruby:2.2.4-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f19e5d966aadfaac7ce4a9d4db8f982db2fe690/2.2/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f19e5d966aadfaac7ce4a9d4db8f982db2fe690/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.4-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f19e5d966aadfaac7ce4a9d4db8f982db2fe690/2.2/slim/Dockerfile

  - version: 2.2.3
    majorVersion: '2.2'
    prerelease: false
    date: '2015-11-04T14:14:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.3
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/74ee8aec9c17ea2134db8a8ef199cf092c829576/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.3-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/74ee8aec9c17ea2134db8a8ef199cf092c829576/2.2/slim/Dockerfile

  - version: 2.2.2
    majorVersion: '2.2'
    prerelease: false
    date: '2015-08-11T15:14:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.2.2-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.2
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d88c77ea84b114fdfcdaa022a4e43bb067d5ac81/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.2-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d88c77ea84b114fdfcdaa022a4e43bb067d5ac81/2.2/slim/Dockerfile

  - version: 2.2.1
    majorVersion: '2.2'
    prerelease: false
    date: '2015-04-01T15:16:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.2.1-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/90c4e3be58d565007c518d311d4bd05086a1638c/2.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.1
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/69582bf7de57fe358d4c3c7c23400aebaf626b92/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.1-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/69582bf7de57fe358d4c3c7c23400aebaf626b92/2.2/slim/Dockerfile

  - version: 2.2.0
    majorVersion: '2.2'
    prerelease: false
    date: '2015-02-05T14:10:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.2.0-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8c8394eebfff558f3aa00780e09f73f04e8eca56/2.2/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.2.0
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f5d7ef4e2659596e007871db90b80b2f235b845/2.2/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.2.0-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8164fe030868a3fc680dc53277b9572feedf112a/2.2/slim/Dockerfile

  - version: '2.2'
    majorVersion: '2.2'
    prerelease: false
    date: '2015-07-23T09:29:40'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.2-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.2/wheezy/Dockerfile

  - version: 2.1.10
    majorVersion: '2.1'
    prerelease: false
    date: '2017-07-03T10:33:27'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.1.10-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c5693b25aa865489fee130e572a3f11bccebd21b/2.1/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.10
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c5693b25aa865489fee130e572a3f11bccebd21b/2.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.1.10-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c5693b25aa865489fee130e572a3f11bccebd21b/2.1/slim/Dockerfile

  - version: 2.1.9
    majorVersion: '2.1'
    prerelease: false
    date: '2016-06-23T14:01:38'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.4'
        release: 3.4
        weight: 1
        image: alpine:3.4
        imageRepository: ruby:2.1.9-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/2d6449f03976ededa14be5cac1e9e070b74e4de4/2.1/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/2d6449f03976ededa14be5cac1e9e070b74e4de4/2.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.1.9-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/2d6449f03976ededa14be5cac1e9e070b74e4de4/2.1/slim/Dockerfile

  - version: 2.1.8
    majorVersion: '2.1'
    prerelease: false
    date: '2016-03-30T16:44:59'
    current: false
    distributionReleases: Alpine, Debian
    distributions:

      - name: Alpine
        releaseName: '3.3'
        release: 3.3
        weight: 1
        image: alpine:3.3
        imageRepository: ruby:2.1.8-alpine
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8185fd390fb283e0eef9e1687d652ef8b5d9c52e/2.1/alpine/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.8
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c88f3a67da720bfa9fb1717960d90fd5db11c757/2.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.1.8-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c88f3a67da720bfa9fb1717960d90fd5db11c757/2.1/slim/Dockerfile

  - version: 2.1.7
    majorVersion: '2.1'
    prerelease: false
    date: '2015-11-04T14:14:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.7
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/74ee8aec9c17ea2134db8a8ef199cf092c829576/2.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.1.7-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/74ee8aec9c17ea2134db8a8ef199cf092c829576/2.1/slim/Dockerfile

  - version: 2.1.6
    majorVersion: '2.1'
    prerelease: false
    date: '2015-08-11T15:14:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.1.6-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.6
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d88c77ea84b114fdfcdaa022a4e43bb067d5ac81/2.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.1.6-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d88c77ea84b114fdfcdaa022a4e43bb067d5ac81/2.1/slim/Dockerfile

  - version: 2.1.5
    majorVersion: '2.1'
    prerelease: false
    date: '2015-04-01T15:16:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.1.5-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8c8394eebfff558f3aa00780e09f73f04e8eca56/2.1/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.5
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/69582bf7de57fe358d4c3c7c23400aebaf626b92/2.1/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.1.5-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/69582bf7de57fe358d4c3c7c23400aebaf626b92/2.1/slim/Dockerfile

  - version: 2.1.4
    majorVersion: '2.1'
    prerelease: false
    date: '2014-10-28T20:19:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.4
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/59efe8f7291ffddf5c8b3f8b6f784ad80905f34c/2.1/Dockerfile

  - version: 2.1.3
    majorVersion: '2.1'
    prerelease: false
    date: '2014-10-20T10:37:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.3
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/f9a2625e38d17238b61b3eb084d84da2a1a4ea66/2.1/Dockerfile

  - version: 2.1.2
    majorVersion: '2.1'
    prerelease: false
    date: '2014-09-13T18:21:50'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.1.2
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/2701609004b336feff4e88e73ef32e8700d1c668/2.1/Dockerfile

  - version: '2.1'
    majorVersion: '2.1'
    prerelease: false
    date: '2015-07-23T09:29:40'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.1-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.1/wheezy/Dockerfile

  - version: 2.0.0-p648
    majorVersion: '2.0'
    prerelease: false
    date: '2016-02-26T15:52:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p648
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c387c6c3a2505060514e31c247cb37d22c944e55/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0.0-p648-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c387c6c3a2505060514e31c247cb37d22c944e55/2.0/slim/Dockerfile

  - version: 2.0.0-p647
    majorVersion: '2.0'
    prerelease: false
    date: '2015-11-04T14:14:27'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p647
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/74ee8aec9c17ea2134db8a8ef199cf092c829576/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0.0-p647-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/74ee8aec9c17ea2134db8a8ef199cf092c829576/2.0/slim/Dockerfile

  - version: 2.0.0-p645
    majorVersion: '2.0'
    prerelease: false
    date: '2015-08-11T15:14:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.0.0-p645-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p645
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d88c77ea84b114fdfcdaa022a4e43bb067d5ac81/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0.0-p645-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/d88c77ea84b114fdfcdaa022a4e43bb067d5ac81/2.0/slim/Dockerfile

  - version: 2.0.0-p643
    majorVersion: '2.0'
    prerelease: false
    date: '2015-04-01T15:16:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.0.0-p643-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/90c4e3be58d565007c518d311d4bd05086a1638c/2.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p643
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/69582bf7de57fe358d4c3c7c23400aebaf626b92/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0.0-p643-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/69582bf7de57fe358d4c3c7c23400aebaf626b92/2.0/slim/Dockerfile

  - version: 2.0.0-p598
    majorVersion: '2.0'
    prerelease: false
    date: '2015-02-05T14:10:32'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.0.0-p598-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8c8394eebfff558f3aa00780e09f73f04e8eca56/2.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p598
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f5d7ef4e2659596e007871db90b80b2f235b845/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0.0-p598-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8164fe030868a3fc680dc53277b9572feedf112a/2.0/slim/Dockerfile

  - version: 2.0.0-p594
    majorVersion: '2.0'
    prerelease: false
    date: '2014-10-28T20:19:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p594
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/59efe8f7291ffddf5c8b3f8b6f784ad80905f34c/2.0/Dockerfile

  - version: 2.0.0-p576
    majorVersion: '2.0'
    prerelease: false
    date: '2014-10-20T10:37:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0-p576
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/f9a2625e38d17238b61b3eb084d84da2a1a4ea66/2.0/Dockerfile

  - version: 2.0.0
    majorVersion: '2.0'
    prerelease: false
    date: '2016-02-26T15:52:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.0.0-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0.0
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c387c6c3a2505060514e31c247cb37d22c944e55/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0.0-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c387c6c3a2505060514e31c247cb37d22c944e55/2.0/slim/Dockerfile

  - version: '2.0'
    majorVersion: '2.0'
    prerelease: false
    date: '2016-02-26T15:52:15'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:2.0-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/3c8701dbc263001651f8a0ac44bfb1c6113b69fa/2.0/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:2.0
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c387c6c3a2505060514e31c247cb37d22c944e55/2.0/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:2.0-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/c387c6c3a2505060514e31c247cb37d22c944e55/2.0/slim/Dockerfile

  - version: 1.9.3-p551
    majorVersion: '1.9'
    prerelease: false
    date: '2015-03-03T10:38:16'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:1.9.3-p551-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8c8394eebfff558f3aa00780e09f73f04e8eca56/1.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:1.9.3-p551
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f5d7ef4e2659596e007871db90b80b2f235b845/1.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:1.9.3-p551-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8164fe030868a3fc680dc53277b9572feedf112a/1.9/slim/Dockerfile

  - version: 1.9.3-p550
    majorVersion: '1.9'
    prerelease: false
    date: '2014-10-28T20:19:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:1.9.3-p550
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/59efe8f7291ffddf5c8b3f8b6f784ad80905f34c/1.9/Dockerfile

  - version: 1.9.3-p547
    majorVersion: '1.9'
    prerelease: false
    date: '2014-10-20T10:37:06'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:1.9.3-p547
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/f9a2625e38d17238b61b3eb084d84da2a1a4ea66/1.9/Dockerfile

  - version: 1.9.3
    majorVersion: '1.9'
    prerelease: false
    date: '2015-03-03T10:38:16'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:1.9.3-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8c8394eebfff558f3aa00780e09f73f04e8eca56/1.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:1.9.3
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f5d7ef4e2659596e007871db90b80b2f235b845/1.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:1.9.3-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8164fe030868a3fc680dc53277b9572feedf112a/1.9/slim/Dockerfile

  - version: '1.9'
    majorVersion: '1.9'
    prerelease: false
    date: '2015-03-03T10:38:16'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 7 (wheezy)
        release: 7.0
        weight: 5
        image: buildpack-deps:wheezy
        imageRepository: ruby:1.9-wheezy
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8c8394eebfff558f3aa00780e09f73f04e8eca56/1.9/wheezy/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: ruby:1.9
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/1f5d7ef4e2659596e007871db90b80b2f235b845/1.9/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 2
        image: debian:jessie
        imageRepository: ruby:1.9-slim
        urlRepository: https://github.com/docker-library/ruby
        urlDockerfile: https://raw.githubusercontent.com/docker-library/ruby/8164fe030868a3fc680dc53277b9572feedf112a/1.9/slim/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/rust.yml", "\"
  - version: 1.34.2
    majorVersion: '1.34'
    prerelease: false
    date: '2019-05-14T08:56:21'
    current: true
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.34.2-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/b5bd00496a4b0a349a1b879f4b98ca3307a939df/1.34.2/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.34.2-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/b5bd00496a4b0a349a1b879f4b98ca3307a939df/1.34.2/stretch/slim/Dockerfile

  - version: 1.34.1
    majorVersion: '1.34'
    prerelease: false
    date: '2019-04-25T15:16:22'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.34.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/0ae19e393f5d53bbfd657f48e0cf9ab203059af3/1.34.1/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.34.1-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/0ae19e393f5d53bbfd657f48e0cf9ab203059af3/1.34.1/stretch/slim/Dockerfile

  - version: 1.34.0
    majorVersion: '1.34'
    prerelease: false
    date: '2019-04-11T12:21:29'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.34.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/7663b3d6680c62dee26c8c20b03a836fc09b6325/1.34.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.34.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/7663b3d6680c62dee26c8c20b03a836fc09b6325/1.34.0/stretch/slim/Dockerfile

  - version: 1.33.0
    majorVersion: '1.33'
    prerelease: false
    date: '2019-02-28T12:42:34'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.33.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/97a72441aad0ec26edf5175382c3d0022c84ba7d/1.33.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.33.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/97a72441aad0ec26edf5175382c3d0022c84ba7d/1.33.0/stretch/slim/Dockerfile

  - version: 1.32.0
    majorVersion: '1.32'
    prerelease: false
    date: '2019-01-17T12:17:37'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.32.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/edda09581f7c015c5cc2b8f0e04951a83b6f9727/1.32.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.32.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/edda09581f7c015c5cc2b8f0e04951a83b6f9727/1.32.0/stretch/slim/Dockerfile

  - version: 1.31.1
    majorVersion: '1.31'
    prerelease: false
    date: '2018-12-20T10:15:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.31.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/1d112bc218d6b7a5479a05fa652130d8e086564f/1.31.1/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.31.1-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/1d112bc218d6b7a5479a05fa652130d8e086564f/1.31.1/stretch/slim/Dockerfile

  - version: 1.31.0
    majorVersion: '1.31'
    prerelease: false
    date: '2018-12-06T10:03:03'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.31.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/e7703b2cf525f2525bdf8d131cd66b5b38b1513c/1.31.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.31.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/e7703b2cf525f2525bdf8d131cd66b5b38b1513c/1.31.0/stretch/slim/Dockerfile

  - version: 1.30.1
    majorVersion: '1.30'
    prerelease: false
    date: '2018-11-08T10:15:35'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.30.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/c34d6993e8f9403c18f348de85787f1585fd3375/1.30.1/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.30.1-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/c34d6993e8f9403c18f348de85787f1585fd3375/1.30.1/stretch/slim/Dockerfile

  - version: 1.30.0
    majorVersion: '1.30'
    prerelease: false
    date: '2018-10-25T10:34:08'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.30.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/9591b70ba627c079e772a5c00036ce48082fbeda/1.30.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.30.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/9591b70ba627c079e772a5c00036ce48082fbeda/1.30.0/stretch/slim/Dockerfile

  - version: 1.29.2
    majorVersion: '1.29'
    prerelease: false
    date: '2018-10-12T10:19:25'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.29.2-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/5f19dc9303d70f98b5a5c02ad470d551a17f69b2/1.29.2/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.29.2-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/5f19dc9303d70f98b5a5c02ad470d551a17f69b2/1.29.2/stretch/slim/Dockerfile

  - version: 1.29.1
    majorVersion: '1.29'
    prerelease: false
    date: '2018-09-25T13:22:00'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.29.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/6b67741c0493c37f6a46b5193dd82ac4b0784bdf/1.29.1/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.29.1-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/6b67741c0493c37f6a46b5193dd82ac4b0784bdf/1.29.1/stretch/slim/Dockerfile

  - version: 1.29.0
    majorVersion: '1.29'
    prerelease: false
    date: '2018-09-14T12:42:56'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.29.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/46d75fee52b77161355ce8a4623d6afbfec0e63f/1.29.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.29.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/46d75fee52b77161355ce8a4623d6afbfec0e63f/1.29.0/stretch/slim/Dockerfile

  - version: 1.28.0
    majorVersion: '1.28'
    prerelease: false
    date: '2018-08-02T09:36:28'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.28.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/da8bc5716ede5f18748e4daa92f85e9a9d9c1454/1.28.0/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.28.0-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/da8bc5716ede5f18748e4daa92f85e9a9d9c1454/1.28.0/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.28.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/da8bc5716ede5f18748e4daa92f85e9a9d9c1454/1.28.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.28.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/da8bc5716ede5f18748e4daa92f85e9a9d9c1454/1.28.0/stretch/slim/Dockerfile

  - version: 1.27.2
    majorVersion: '1.27'
    prerelease: false
    date: '2018-07-20T10:23:13'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.27.2-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/bc5733067506badf77d25a51871deefa136a0fef/1.27.2/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.27.2-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/bc5733067506badf77d25a51871deefa136a0fef/1.27.2/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.27.2-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/bc5733067506badf77d25a51871deefa136a0fef/1.27.2/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.27.2-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/bc5733067506badf77d25a51871deefa136a0fef/1.27.2/stretch/slim/Dockerfile

  - version: 1.27.1
    majorVersion: '1.27'
    prerelease: false
    date: '2018-07-10T11:08:52'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.27.1-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/ced83778ec6fea7f63091a484946f95eac0ee611/1.27.1/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.27.1-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/ced83778ec6fea7f63091a484946f95eac0ee611/1.27.1/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.27.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/ced83778ec6fea7f63091a484946f95eac0ee611/1.27.1/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.27.1-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/ced83778ec6fea7f63091a484946f95eac0ee611/1.27.1/stretch/slim/Dockerfile

  - version: 1.27.0
    majorVersion: '1.27'
    prerelease: false
    date: '2018-06-21T17:33:48'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.27.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/25ec4cbb26341bd30a7afa31da2e259d96c1fbc9/1.27.0/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.27.0-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/25ec4cbb26341bd30a7afa31da2e259d96c1fbc9/1.27.0/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.27.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/25ec4cbb26341bd30a7afa31da2e259d96c1fbc9/1.27.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.27.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/25ec4cbb26341bd30a7afa31da2e259d96c1fbc9/1.27.0/stretch/slim/Dockerfile

  - version: 1.26.2
    majorVersion: '1.26'
    prerelease: false
    date: '2018-06-05T19:43:59'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.26.2-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/175c39bcc1093f7ec410ad8f253bbcd864007317/1.26.2/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.26.2-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/175c39bcc1093f7ec410ad8f253bbcd864007317/1.26.2/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.26.2-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/175c39bcc1093f7ec410ad8f253bbcd864007317/1.26.2/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.26.2-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/175c39bcc1093f7ec410ad8f253bbcd864007317/1.26.2/stretch/slim/Dockerfile

  - version: 1.26.1
    majorVersion: '1.26'
    prerelease: false
    date: '2018-05-29T10:08:26'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.26.1-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/41090985a9fa770e43f14631ca29b1ae756e19cd/1.26.1/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.26.1-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/41090985a9fa770e43f14631ca29b1ae756e19cd/1.26.1/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.26.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/41090985a9fa770e43f14631ca29b1ae756e19cd/1.26.1/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.26.1-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/41090985a9fa770e43f14631ca29b1ae756e19cd/1.26.1/stretch/slim/Dockerfile

  - version: 1.26.0
    majorVersion: '1.26'
    prerelease: false
    date: '2018-05-11T08:14:12'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.26.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/1b0f1da9c937cc841228d00cf3224dc69bd18c99/1.26.0/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.26.0-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/1b0f1da9c937cc841228d00cf3224dc69bd18c99/1.26.0/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.26.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/1b0f1da9c937cc841228d00cf3224dc69bd18c99/1.26.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.26.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/1b0f1da9c937cc841228d00cf3224dc69bd18c99/1.26.0/stretch/slim/Dockerfile

  - version: 1.25.0
    majorVersion: '1.25'
    prerelease: false
    date: '2018-04-16T19:33:33'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.25.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/f18cebe3699016a654da86212fa90afaea7431a1/1.25.0/jessie/Dockerfile

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 1
        image: debian:jessie-slim
        imageRepository: rust:1.25.0-slim-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/677ebab2c8068d7f691925e0c848fb02ccdc5309/1.25.0/jessie/slim/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.25.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/f18cebe3699016a654da86212fa90afaea7431a1/1.25.0/stretch/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 1
        image: debian:stretch-slim
        imageRepository: rust:1.25.0-slim-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/d271f62710367d3ccbc83a14093301261b22a831/1.25.0/stretch/slim/Dockerfile

  - version: 1.24.1
    majorVersion: '1.24'
    prerelease: false
    date: '2018-03-01T19:34:57'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.24.1-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/d35c26c4749ed882be0118eb725eeb3a91e0968b/1.24.1/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.24.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/d35c26c4749ed882be0118eb725eeb3a91e0968b/1.24.1/stretch/Dockerfile

  - version: 1.24.0
    majorVersion: '1.24'
    prerelease: false
    date: '2018-02-15T13:31:41'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.24.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/c481589e552336cffcbe97b6e42a7d1d3e1e9a49/1.24.0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.24.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/c481589e552336cffcbe97b6e42a7d1d3e1e9a49/1.24.0/stretch/Dockerfile

  - version: 1.23.0
    majorVersion: '1.23'
    prerelease: false
    date: '2018-01-04T10:47:31'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.23.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/e382ab252c238ab77f0b6e45b0705ba94b4e9e1d/1.23.0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.23.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/e382ab252c238ab77f0b6e45b0705ba94b4e9e1d/1.23.0/stretch/Dockerfile

  - version: 1.22.1
    majorVersion: '1.22'
    prerelease: false
    date: '2017-11-23T11:05:46'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.22.1-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/eddbafa6fd373678b680b52cee861609c95a9ea4/1.22.1/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.22.1-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/eddbafa6fd373678b680b52cee861609c95a9ea4/1.22.1/stretch/Dockerfile

  - version: 1.21.0
    majorVersion: '1.21'
    prerelease: false
    date: '2017-10-12T19:08:42'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.21.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/6424dba66086036a0cedde6c86c281d892305f95/1.21.0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.21.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/6424dba66086036a0cedde6c86c281d892305f95/1.21.0/stretch/Dockerfile

  - version: 1.20.0
    majorVersion: '1.20'
    prerelease: false
    date: '2017-09-01T12:15:20'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.20.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/bf30ee63bff0a381ccacdb86436bb7da5dc9c853/1.20.0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.20.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/bf30ee63bff0a381ccacdb86436bb7da5dc9c853/1.20.0/stretch/Dockerfile

  - version: 1.19.0
    majorVersion: '1.19'
    prerelease: false
    date: '2017-08-31T19:07:43'
    current: false
    distributionReleases: Debian
    distributions:

      - name: Debian
        releaseName: 8 (jessie)
        release: 8.0
        weight: 5
        image: buildpack-deps:jessie
        imageRepository: rust:1.19.0-jessie
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/8affdd6599d29fd20f987eef52234267f3c3e668/1.19.0/jessie/Dockerfile

      - name: Debian
        releaseName: 9 (stretch)
        release: 9.0
        weight: 5
        image: buildpack-deps:stretch
        imageRepository: rust:1.19.0-stretch
        urlRepository: https://github.com/rust-lang-nursery/docker-rust
        urlDockerfile: https://raw.githubusercontent.com/rust-lang-nursery/docker-rust/8affdd6599d29fd20f987eef52234267f3c3e668/1.19.0/stretch/Dockerfile
\"")
	packr.PackJSONBytes("../config", "versions/swift.yml", "\"
  - version: 5.0.1
    majorVersion: '5.0'
    prerelease: false
    date: '2019-04-24T13:37:42'
    current: true
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:5.0.1-xenial
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/0aafffef619fb3b1824c968cbbe2fba4ba41bd26/5.0/ubuntu/16.04/Dockerfile

      - name: Ubuntu
        releaseName: 18.04 (bionic)
        release: 18.04
        weight: 2
        image: ubuntu:18.04
        imageRepository: swift:5.0.1-bionic
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/0aafffef619fb3b1824c968cbbe2fba4ba41bd26/5.0/ubuntu/18.04/Dockerfile

  - version: 4.2.4
    majorVersion: '4.2'
    prerelease: false
    date: '2019-04-24T13:37:42'
    current: true
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.2.4
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/f0a61df2dd9a14dd6988e6017ae58cc63df37f41/4.2/ubuntu/16.04/Dockerfile

  - version: 4.2.3
    majorVersion: '4.2'
    prerelease: false
    date: '2019-04-23T13:41:28'
    current: false
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.2.3
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/75dde01ef86e98437b1206c6a58d0428dfb345a4/4.2/ubuntu/16.04/Dockerfile

  - version: 4.2.2
    majorVersion: '4.2'
    prerelease: false
    date: '2019-04-23T13:41:28'
    current: false
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.2.2
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/c5dd5e013de66da930cf1b9804797dbae11e8f9c/4.2/ubuntu/16.04/Dockerfile

  - version: 4.2.1
    majorVersion: '4.2'
    prerelease: false
    date: '2019-04-23T13:41:28'
    current: false
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.2.1
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/34aa283f9b3473ab22b2282f71773781b121af19/4.2/Dockerfile

  - version: 4.1.3
    majorVersion: '4.1'
    prerelease: false
    date: '2019-04-24T13:37:42'
    current: true
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.1.3
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/34aa283f9b3473ab22b2282f71773781b121af19/4.1/Dockerfile

  - version: 4.0.3
    majorVersion: '4.0'
    prerelease: false
    date: '2019-04-24T13:37:42'
    current: true
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.0.3
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/34aa283f9b3473ab22b2282f71773781b121af19/4.0/Dockerfile

  - version: 4.0.2
    majorVersion: '4.0'
    prerelease: false
    date: '2017-11-10T17:30:30'
    current: false
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:4.0.2
        urlRepository: https://github.com/swiftdocker/docker-swift
        urlDockerfile: https://raw.githubusercontent.com/swiftdocker/docker-swift/5c83628d4696bca62aec3136a4ee9b854e8d548e/4.0/Dockerfile

  - version: 3.1.1
    majorVersion: '3.1'
    prerelease: false
    date: '2019-04-24T13:37:42'
    current: true
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:3.1.1
        urlRepository: https://github.com/apple/swift-docker
        urlDockerfile: https://raw.githubusercontent.com/apple/swift-docker/34aa283f9b3473ab22b2282f71773781b121af19/3.1/Dockerfile

  - version: 3.1.0
    majorVersion: '3.1'
    prerelease: false
    date: '2017-10-03T16:52:47'
    current: false
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:3.1.0
        urlRepository: https://github.com/swiftdocker/docker-swift
        urlDockerfile: https://raw.githubusercontent.com/swiftdocker/docker-swift/ef9aa534705fc8ab4258c539f6304072ebae9613/Dockerfile

  - version: 3.0.2
    majorVersion: '3.0'
    prerelease: false
    date: '2017-10-03T16:52:47'
    current: false
    distributionReleases: Ubuntu
    distributions:

      - name: Ubuntu
        releaseName: 16.04 (xenial)
        release: 16.04
        weight: 2
        image: ubuntu:16.04
        imageRepository: swift:3.0.2
        urlRepository: https://github.com/swiftdocker/docker-swift
        urlDockerfile: https://raw.githubusercontent.com/swiftdocker/docker-swift/94a43272fe6411c12045414cfc797d3c0bcf2823/Dockerfile
\"")
}
