// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package manager

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("../config", "Dockerfile-Build", "\"e3stIHJhbmdlIC5Gcm9tLkJlZm9yZSAtfX0Ke3sgLiB9fQp7ey0gZW5kIC19fQoKe3sgLkZyb20uRGVzY3JpcHRpb24gfX0Ke3sgLkZyb20uRGF0YSB9fQoKe3stIHJhbmdlIC5Gcm9tLkFmdGVyIC19fQp7eyAuIH19Cnt7IGVuZCAtfX0KCnt7IHJhbmdlIC5CZWZvcmUgfX0Ke3sgLiB9fQp7eyBlbmQgLX19Cgp7eyByYW5nZSAuTGFuZ3VhZ2VzIC19fQp7eyAuRGVzY3JpcHRpb24gfX0KCnt7IHJhbmdlIC5CZWZvcmUgLX19Cnt7IC4gfX0Ke3sgZW5kIC19fQoKe3sgLkRhdGEgfX0KCnt7IHJhbmdlIC5BZnRlciAtfX0Ke3sgLiB9fQp7eyBlbmQgLX19Cnt7IGVuZCAtfX0KCnt7LSByYW5nZSAuQWZ0ZXIgLX19Cnt7IC4gfX0Ke3sgZW5kIC19fQo=\"")
	packr.PackJSONBytes("../config", "distributions-context.yml", "\"LSBuYW1lOiBERUJJQU4KICBiZWZvcmU6CiAgYWZ0ZXI6CiAgY29tbWFuZDogUlVOIGFwdC1nZXQgdXBkYXRlICYmIGFwdC1nZXQgaW5zdGFsbCAteSAtLW5vLWluc3RhbGwtcmVjb21tZW5kcyAlcyBcCiAgICAgICAmJiBybSAtcmYgL3Zhci9saWIvYXB0L2xpc3RzLyoKICBsaWJzOgogICAgLSBvcGVuc3NoLWNsaWVudAogICAgLSBnaXQKICAgIC0gY3VybAogICAgLSBiYXNoCiAgICAtIHRhcgogICAgLSBtYWtlCiAgICAtIGNhLWNlcnRpZmljYXRlcwoKLSBuYW1lOiBBTFBJTkUKICBiZWZvcmU6CiAgYWZ0ZXI6CiAgY29tbWFuZDogUlVOIGFwayB1cGRhdGUgJiYgYXBrIGFkZCAtLW5vLWNhY2hlIC0tdXBkYXRlICVzCiAgbGliczoKICAgIC0gY3VybAogICAgLSBiYXNoCiAgICAtIHRhcgogICAgLSBtYWtlCiAgICAtIGNhLWNlcnRpZmljYXRlcwoKLSBuYW1lOiBVQlVOVFUKICBiZWZvcmU6CiAgYWZ0ZXI6CiAgY29tbWFuZDoKICBsaWJzOgo=\"")
	packr.PackJSONBytes("../config", "distributions.yml", "\"CiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTkuMTAgKGVvYW4pCiAgICByZWxlYXNlOiAxOS4xCgogIC0gbmFtZTogVWJ1bnR1CiAgICByZWxlYXNlX25hbWU6IDE5LjA0IChkaXNjbykKICAgIHJlbGVhc2U6IDE5LjA0CgogIC0gbmFtZTogVWJ1bnR1CiAgICByZWxlYXNlX25hbWU6IDE4LjEwIChjb3NtaWMpCiAgICByZWxlYXNlOiAxOC4xCgogIC0gbmFtZTogVWJ1bnR1CiAgICByZWxlYXNlX25hbWU6IDE4LjA0IChiaW9uaWMpCiAgICByZWxlYXNlOiAxOC4wNAoKICAtIG5hbWU6IFVidW50dQogICAgcmVsZWFzZV9uYW1lOiAxNi4wNCAoeGVuaWFsKQogICAgcmVsZWFzZTogMTYuMDQKCiAgLSBuYW1lOiBVYnVudHUKICAgIHJlbGVhc2VfbmFtZTogMTQuMDQgKHRydXN0eSkKICAgIHJlbGVhc2U6IDE0LjA0CgogIC0gbmFtZTogRGViaWFuCiAgICByZWxlYXNlX25hbWU6IDEwIChidXN0ZXIpCiAgICByZWxlYXNlOiAxMAoKICAtIG5hbWU6IERlYmlhbgogICAgcmVsZWFzZV9uYW1lOiA5IChzdHJldGNoKQogICAgcmVsZWFzZTogOQoKICAtIG5hbWU6IERlYmlhbgogICAgcmVsZWFzZV9uYW1lOiA4IChqZXNzaWUpCiAgICByZWxlYXNlOiA4CgogIC0gbmFtZTogRGViaWFuCiAgICByZWxlYXNlX25hbWU6IDcgKHdoZWV6eSkKICAgIHJlbGVhc2U6IDcKCiAgLSBuYW1lOiBEZWJpYW4KICAgIHJlbGVhc2VfbmFtZTogNiAoc3F1ZWV6ZSkKICAgIHJlbGVhc2U6IDYKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzQuMScKICAgIHJlbGVhc2U6IDQuMQoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnNC4wJwogICAgcmVsZWFzZTogNC4wCgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjknCiAgICByZWxlYXNlOiAzLjkKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuOCcKICAgIHJlbGVhc2U6IDMuOAoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnMy43JwogICAgcmVsZWFzZTogMy43CgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjYnCiAgICByZWxlYXNlOiAzLjYKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuNScKICAgIHJlbGVhc2U6IDMuNQoKICAtIG5hbWU6IEFscGluZQogICAgcmVsZWFzZV9uYW1lOiAnMy40JwogICAgcmVsZWFzZTogMy40CgogIC0gbmFtZTogQWxwaW5lCiAgICByZWxlYXNlX25hbWU6ICczLjMnCiAgICByZWxlYXNlOiAzLjMKCiAgLSBuYW1lOiBBbHBpbmUKICAgIHJlbGVhc2VfbmFtZTogJzMuMicKICAgIHJlbGVhc2U6IDMuMgo=\"")
	packr.PackJSONBytes("../config", "languages-context.yml", "\"LSBuYW1lOiBOT0RFCiAgYmVmb3JlOgogICAgLSBFTlYgUEFUSCBub2RlX21vZHVsZXMvLmJpbjokUEFUSAogIGFmdGVyOgo=\"")
	packr.PackJSONBytes("../config", "languages.yml", "\"LSBsYW5ndWFnZTogZXJsYW5nCiAgYWxpYXM6IEVybGFuZwogIHVybDogaHR0cHM6Ly9naXRodWIuY29tL2VybGFuZy9vdHAvcmVsZWFzZXMKICBzb3J0OgogICAgLSBkZWJpYW46OAogICAgLSBhbHBpbmU6OAoKLSBsYW5ndWFnZTogZ29sYW5nCiAgYWxpYXM6IEdvbGFuZwogIHVybDogaHR0cHM6Ly9nb2xhbmcub3JnL2RvYy9kZXZlbC9yZWxlYXNlLmh0bWwKCi0gbGFuZ3VhZ2U6IGhhc2tlbGwKICBhbGlhczogSGFza2VsbAogIHVybDogaHR0cHM6Ly93d3cuaGFza2VsbC5vcmcvZ2hjLwoKLSBsYW5ndWFnZToganVsaWEKICBhbGlhczogSnVsaWEKICB1cmw6IGh0dHBzOi8vZ2l0aHViLmNvbS9KdWxpYUxhbmcvanVsaWEvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IG5vZGUKICBhbGlhczogTm9kZQogIHVybDogaHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkL3JlbGVhc2VzLwogIHNvcnQ6CiAgICAtIGFscGluZToxMAoKLSBsYW5ndWFnZTogcGhwCiAgYWxpYXM6IFBIUAogIHVybDogaHR0cHM6Ly93d3cucGhwLm5ldC9yZWxlYXNlcy9pbmRleC5waHAKICBzb3J0OgogICAgLSBkZWJpYW46OQogICAgLSBhbHBpbmU6OQoKLSBsYW5ndWFnZTogcGVybAogIGFsaWFzOiBQZXJsCiAgdXJsOiBodHRwOi8vd3d3LmNwYW4ub3JnL3NyYy8KCi0gbGFuZ3VhZ2U6IHB5dGhvbgogIGFsaWFzOiBQeXRob24KICB1cmw6IGh0dHBzOi8vd3d3LnB5dGhvbi5vcmcvZG93bmxvYWRzLwogIHNvcnQ6CiAgICAtIGRlYmlhbjo4CgotIGxhbmd1YWdlOiBydWJ5CiAgYWxpYXM6IFJ1YnkKICB1cmw6IGh0dHBzOi8vd3d3LnJ1YnktbGFuZy5vcmcvZW4vZG93bmxvYWRzL3JlbGVhc2VzLwoKLSBsYW5ndWFnZTogUnVzdAogIGFsaWFzOiBydXN0CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vcnVzdC1sYW5nL3J1c3QvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IFN3aWZ0CiAgYWxpYXM6IHN3aWZ0CiAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vYXBwbGUvc3dpZnQvcmVsZWFzZXMKCi0gbGFuZ3VhZ2U6IFB5cHkKICBhbGlhczogUHlweQogIHVybDogaHR0cDovL2RvYy5weXB5Lm9yZy9lbi9sYXRlc3QvaW5kZXgtb2YtcmVsZWFzZS1ub3Rlcy5odG1sCgojIGxhbmd1YWdlOiBqcnVieQojIGFsaWFzOiBKanVieQojIHVybDogaHR0cHM6Ly9naXRodWIuY29tL2pydWJ5L2pydWJ5L3JlbGVhc2VzCgojIC0gbGFuZ3VhZ2U6IHItYmFzZQojICAgYWxpYXM6IFIKIyAgIHVybDogaHR0cHM6Ly93d3cuci1wcm9qZWN0Lm9yZy8KCgoKCgo=\"")
	packr.PackJSONBytes("../config", "versions/erlang.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/golang.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/haskell.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/julia.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/node.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/perl.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/php.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/pypy.yml", "\"CiAgLSB2ZXJzaW9uOiAnMy42JwogICAgbWFqb3JWZXJzaW9uOiAnMy42JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA1LTA2VDE2OjA3OjMwJwogICAgY3VycmVudDogdHJ1ZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5LzZlYzkyNjI2YjI0N2JlMDY2YTBjODlkODY1MjFhMDA1NzFjYzVkNDQvMy42L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZS1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvNmVjOTI2MjZiMjQ3YmUwNjZhMGM4OWQ4NjUyMWEwMDU3MWNjNWQ0NC8zLjYvc2xpbS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9lYjhmNWExMzc5Y2I5NTVjMzI2NzhlNWI0ODI0ZjEyNjNhZjhhYjA5LzMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaC1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBweXB5OjMuNi1zbGltLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2ViOGY1YTEzNzljYjk1NWMzMjY3OGU1YjQ4MjRmMTI2M2FmOGFiMDkvMy42L3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246ICczLjUnCiAgICBtYWpvclZlcnNpb246ICczLjUnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTktMDUtMDZUMTY6MDc6MzAnCiAgICBjdXJyZW50OiB0cnVlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvYTI1ZGZlZDRhNmY2ODRlZGZhNDQ5NDdmZGI5ZjE5ODk2MmM1ODg1YS8zLjUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LXNsaW0tamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9hMjVkZmVkNGE2ZjY4NGVkZmE0NDk0N2ZkYjlmMTk4OTYyYzU4ODVhLzMuNS9zbGltL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5LzJlNWJjYTM5MzIxY2NhZWNiZmU5ZjM4N2UyMGI0M2QwNGMyNzAxNTQvMy41L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHB5cHk6My41LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9weXB5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkvMmU1YmNhMzkzMjFjY2FlY2JmZTlmMzg3ZTIwYjQzZDA0YzI3MDE1NC8zLjUvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogJzIuNycKICAgIG1ham9yVmVyc2lvbjogJzIuNycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wNS0wNlQxNjowNzozMCcKICAgIGN1cnJlbnQ6IHRydWUKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweToyLjctamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3B5cHkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcHlweS9lYjhmNWExMzc5Y2I5NTVjMzI2NzhlNWI0ODI0ZjEyNjNhZjhhYjA5LzIuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcHlweToyLjctc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcHlweQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9weXB5L2ViOGY1YTEzNzljYjk1NWMzMjY3OGU1YjQ4MjRmMTI2M2FmOGFiMDkvMi43L3NsaW0vRG9ja2VyZmlsZQo=\"")
	packr.PackJSONBytes("../config", "versions/python.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/ruby.yml", "\"CiAgLSB2ZXJzaW9uOiAyLjYuMwogICAgbWFqb3JWZXJzaW9uOiAnMi42JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA1LTMxVDEzOjUwOjI0JwogICAgY3VycmVudDogdHJ1ZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuOCcKICAgICAgICByZWxlYXNlOiAzLjgKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuOAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMy1hbHBpbmUzLjgKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzlhZTA5NDNmYTI5MzViM2ExM2M3MmFlN2Q2YWZhMjQzOTE0NWQ3ZmEvMi42L2FscGluZTMuOC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy45JwogICAgICAgIHJlbGVhc2U6IDMuOQogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My45CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNi4zLWFscGluZTMuOQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWFlMDk0M2ZhMjkzNWIzYTEzYzcyYWU3ZDZhZmEyNDM5MTQ1ZDdmYS8yLjYvYWxwaW5lMy45L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi42LjMtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWFlMDk0M2ZhMjkzNWIzYTEzYzcyYWU3ZDZhZmEyNDM5MTQ1ZDdmYS8yLjYvc3RyZXRjaC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaC1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNi4zLXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWFlMDk0M2ZhMjkzNWIzYTEzYzcyYWU3ZDZhZmEyNDM5MTQ1ZDdmYS8yLjYvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjYuMgogICAgbWFqb3JWZXJzaW9uOiAnMi42JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTA0LTA0VDEzOjU2OjUyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjgnCiAgICAgICAgcmVsZWFzZTogMy44CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjgKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi42LjItYWxwaW5lMy44CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85OTU3MTlhZGQ2OTMzOWI3OGJkOGNkZTQ2MTgzYjQ5MDJiNzYxYWRkLzIuNi9hbHBpbmUzLjgvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuOScKICAgICAgICByZWxlYXNlOiAzLjkKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuOQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMi1hbHBpbmUzLjkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzk5NTcxOWFkZDY5MzM5Yjc4YmQ4Y2RlNDYxODNiNDkwMmI3NjFhZGQvMi42L2FscGluZTMuOS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNi4yLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzk5NTcxOWFkZDY5MzM5Yjc4YmQ4Y2RlNDYxODNiNDkwMmI3NjFhZGQvMi42L3N0cmV0Y2gvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMi1zbGltLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzk5NTcxOWFkZDY5MzM5Yjc4YmQ4Y2RlNDYxODNiNDkwMmI3NjFhZGQvMi42L3N0cmV0Y2gvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi42LjEKICAgIG1ham9yVmVyc2lvbjogJzIuNicKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wMy0wN1QxNTo1NDo1NicKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNi4xLWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOTZmYzA2ZmIzMzFhMjBiYTgyM2VjYzExNTYzYTk5ZDFlYjk0MjAzZi8yLjYvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjknCiAgICAgICAgcmVsZWFzZTogMy45CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi42LjEtYWxwaW5lMy45CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85NmZjMDZmYjMzMWEyMGJhODIzZWNjMTE1NjNhOTlkMWViOTQyMDNmLzIuNi9hbHBpbmUzLjkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85NmZjMDZmYjMzMWEyMGJhODIzZWNjMTE1NjNhOTlkMWViOTQyMDNmLzIuNi9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi42LjEtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85NmZjMDZmYjMzMWEyMGJhODIzZWNjMTE1NjNhOTlkMWViOTQyMDNmLzIuNi9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuNi4wCiAgICBtYWpvclZlcnNpb246ICcyLjYnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTktMDEtMTBUMTM6MzQ6MDEnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNycKICAgICAgICByZWxlYXNlOiAzLjcKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMC1hbHBpbmUzLjcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzg0ZGI0NjkxYzA4MDM4NGM4ZmJjZTQ0YzcyMmQ0NmNlZGQ2YTM4NGIvMi42L2FscGluZTMuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNi4wLWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODRkYjQ2OTFjMDgwMzg0YzhmYmNlNDRjNzIyZDQ2Y2VkZDZhMzg0Yi8yLjYvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi42LjAtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODRkYjQ2OTFjMDgwMzg0YzhmYmNlNDRjNzIyZDQ2Y2VkZDZhMzg0Yi8yLjYvc3RyZXRjaC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMC1yYzItc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85ZjU2MGMyOWU3ZDM3ZTliM2U2NDZjNzNiYjgyOWM1NmViNzBkNzYzLzIuNi1yYy9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjYuMC1zbGltLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2RhNGIyNDllNGFkNWU1MjFiYThjM2Q4YjE3MTE5ZTlhYzVhZjhkZjAvMi42L3N0cmV0Y2gvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi41LjUKICAgIG1ham9yVmVyc2lvbjogJzIuNScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wNS0zMVQxMzo1MDoyNCcKICAgIGN1cnJlbnQ6IHRydWUKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjgnCiAgICAgICAgcmVsZWFzZTogMy44CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjgKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjUtYWxwaW5lMy44CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS82ZjM0OTdlNDBkNDQ2NTE4MDJlMWVjOGE0NjQ3YjIzYTNhNjNiMzU1LzIuNS9hbHBpbmUzLjgvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuOScKICAgICAgICByZWxlYXNlOiAzLjkKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuOQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuNS1hbHBpbmUzLjkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzZmMzQ5N2U0MGQ0NDY1MTgwMmUxZWM4YTQ2NDdiMjNhM2E2M2IzNTUvMi41L2FscGluZTMuOS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNS41LXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzZmMzQ5N2U0MGQ0NDY1MTgwMmUxZWM4YTQ2NDdiMjNhM2E2M2IzNTUvMi41L3N0cmV0Y2gvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gtc2xpbQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuNS1zbGltLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzZmMzQ5N2U0MGQ0NDY1MTgwMmUxZWM4YTQ2NDdiMjNhM2E2M2IzNTUvMi41L3N0cmV0Y2gvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi41LjQKICAgIG1ham9yVmVyc2lvbjogJzIuNScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wMy0xNFQxMTowMjowNScKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNS40LWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMGU3YmFhNDVhMWZmNjQwZjhiNmE3NDRiOGU5Yjc2YWRiMjA2YWViNC8yLjUvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjknCiAgICAgICAgcmVsZWFzZTogMy45CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjQtYWxwaW5lMy45CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wZTdiYWE0NWExZmY2NDBmOGI2YTc0NGI4ZTliNzZhZGIyMDZhZWI0LzIuNS9hbHBpbmUzLjkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuNC1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wZTdiYWE0NWExZmY2NDBmOGI2YTc0NGI4ZTliNzZhZGIyMDZhZWI0LzIuNS9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjQtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wZTdiYWE0NWExZmY2NDBmOGI2YTc0NGI4ZTliNzZhZGIyMDZhZWI0LzIuNS9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuNS4zCiAgICBtYWpvclZlcnNpb246ICcyLjUnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTktMDMtMDdUMTU6NTQ6NTYnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNycKICAgICAgICByZWxlYXNlOiAzLjcKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuMy1hbHBpbmUzLjcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzg0ZGI0NjkxYzA4MDM4NGM4ZmJjZTQ0YzcyMmQ0NmNlZGQ2YTM4NGIvMi41L2FscGluZTMuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNS4zLWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjUvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjknCiAgICAgICAgcmVsZWFzZTogMy45CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjMtYWxwaW5lMy45CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuNS9hbHBpbmUzLjkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuMy1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuNS9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjMtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuNS9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuNS4xCiAgICBtYWpvclZlcnNpb246ICcyLjUnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTgtMTAtMDVUMTA6MDg6MTEnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNycKICAgICAgICByZWxlYXNlOiAzLjcKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuMS1hbHBpbmUzLjcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2NjZjAwYTZiMzFhYmUxNGQyN2JkZGE0OTg3MDdhMmNlMzM4ZWYwMTkvMi41L2FscGluZTMuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNS4xLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2NjZjAwYTZiMzFhYmUxNGQyN2JkZGE0OTg3MDdhMmNlMzM4ZWYwMTkvMi41L3N0cmV0Y2gvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjEtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jY2YwMGE2YjMxYWJlMTRkMjdiZGRhNDk4NzA3YTJjZTMzOGVmMDE5LzIuNS9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuNS4wCiAgICBtYWpvclZlcnNpb246ICcyLjUnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTgtMDItMTZUMTQ6MzY6MDUnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNycKICAgICAgICByZWxlYXNlOiAzLjcKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjUuMC1hbHBpbmUzLjcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzZiY2NmNGJkMGM2YWExNThiNGE4NDJjMjlmNzhjMzM1ZWM5ZGM0MWIvMi41L2FscGluZTMuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNS4wLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzZiY2NmNGJkMGM2YWExNThiNGE4NDJjMjlmNzhjMzM1ZWM5ZGM0MWIvMi41L3N0cmV0Y2gvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi41LjAtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS82YmNjZjRiZDBjNmFhMTU4YjRhODQyYzI5Zjc4YzMzNWVjOWRjNDFiLzIuNS9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuNC42CiAgICBtYWpvclZlcnNpb246ICcyLjQnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTktMDUtMzFUMTM6NTA6MjQnCiAgICBjdXJyZW50OiB0cnVlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC42LWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODAyNDIxOTIyZWY1MGNmYTA1Yzg5YTNjNjE5OTkyYWNmNDMyOTk4Ni8yLjQvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjknCiAgICAgICAgcmVsZWFzZTogMy45CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjYtYWxwaW5lMy45CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84MDI0MjE5MjJlZjUwY2ZhMDVjODlhM2M2MTk5OTJhY2Y0MzI5OTg2LzIuNC9hbHBpbmUzLjkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjYtamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84MDI0MjE5MjJlZjUwY2ZhMDVjODlhM2M2MTk5OTJhY2Y0MzI5OTg2LzIuNC9qZXNzaWUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjYtc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzgwMjQyMTkyMmVmNTBjZmEwNWM4OWEzYzYxOTk5MmFjZjQzMjk5ODYvMi40L2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjYtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODAyNDIxOTIyZWY1MGNmYTA1Yzg5YTNjNjE5OTkyYWNmNDMyOTk4Ni8yLjQvc3RyZXRjaC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaC1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC42LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODAyNDIxOTIyZWY1MGNmYTA1Yzg5YTNjNjE5OTkyYWNmNDMyOTk4Ni8yLjQvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjQuNQogICAgbWFqb3JWZXJzaW9uOiAnMi40JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE5LTAzLTE3VDIyOjMxOjM4JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjYnCiAgICAgICAgcmVsZWFzZTogMy42CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjYKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjUtYWxwaW5lMy42CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS81OGNiZWViOGVhOTM3NzM3ZWViOGYzNTg0NzJhZGQyMzBiNmRlZDMwLzIuNC9hbHBpbmUzLjYvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNycKICAgICAgICByZWxlYXNlOiAzLjcKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuNS1hbHBpbmUzLjcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzg0ZGI0NjkxYzA4MDM4NGM4ZmJjZTQ0YzcyMmQ0NmNlZGQ2YTM4NGIvMi40L2FscGluZTMuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC41LWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjQvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjknCiAgICAgICAgcmVsZWFzZTogMy45CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjUtYWxwaW5lMy45CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuNC9hbHBpbmUzLjkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjUtamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuNC9qZXNzaWUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjUtc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzMxZjY2NDkwZmRiODM3ZGRjYzU4OTZlMzI3NWYyMTg4ZjJiN2I2ZGQvMi40L2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjUtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjQvc3RyZXRjaC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaC1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC41LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjQvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjQuNAogICAgbWFqb3JWZXJzaW9uOiAnMi40JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTEwLTA1VDEwOjA4OjExJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjQtYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xYmQ4YjQ2NjI3NzY2OGJmZjUwNTI4YjI2MzYwZTZlNDUxZTRkYWU0LzIuNC9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNicKICAgICAgICByZWxlYXNlOiAzLjYKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNgogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuNC1hbHBpbmUzLjYKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2NjYWNkZjVlYjllNjliNmYyNDlhODkwYzg3NjIxNjc5NDEwZTdkNzQvMi40L2FscGluZTMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy43JwogICAgICAgIHJlbGVhc2U6IDMuNwogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My43CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC40LWFscGluZTMuNwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvY2NhY2RmNWViOWU2OWI2ZjI0OWE4OTBjODc2MjE2Nzk0MTBlN2Q3NC8yLjQvYWxwaW5lMy43L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC40LWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvY2NhY2RmNWViOWU2OWI2ZjI0OWE4OTBjODc2MjE2Nzk0MTBlN2Q3NC8yLjQvamVzc2llL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuNC1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvY2NhY2RmNWViOWU2OWI2ZjI0OWE4OTBjODc2MjE2Nzk0MTBlN2Q3NC8yLjQvamVzc2llL3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuNC1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jY2FjZGY1ZWI5ZTY5YjZmMjQ5YTg5MGM4NzYyMTY3OTQxMGU3ZDc0LzIuNC9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC40LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvY2NhY2RmNWViOWU2OWI2ZjI0OWE4OTBjODc2MjE2Nzk0MTBlN2Q3NC8yLjQvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjQuMwogICAgbWFqb3JWZXJzaW9uOiAnMi40JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTAyLTE2VDE0OjM2OjA1JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjMtYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84M2M2MGNjMjZhMWVmYjBlYTU4MWIzMzQzYTk3ZGY3NTA4NDgxZmNmLzIuNC9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNicKICAgICAgICByZWxlYXNlOiAzLjYKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNgogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMy1hbHBpbmUzLjYKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzgzYzYwY2MyNmExZWZiMGVhNTgxYjMzNDNhOTdkZjc1MDg0ODFmY2YvMi40L2FscGluZTMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy43JwogICAgICAgIHJlbGVhc2U6IDMuNwogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My43CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4zLWFscGluZTMuNwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODNjNjBjYzI2YTFlZmIwZWE1ODFiMzM0M2E5N2RmNzUwODQ4MWZjZi8yLjQvYWxwaW5lMy43L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4zLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODNjNjBjYzI2YTFlZmIwZWE1ODFiMzM0M2E5N2RmNzUwODQ4MWZjZi8yLjQvamVzc2llL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMy1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODNjNjBjYzI2YTFlZmIwZWE1ODFiMzM0M2E5N2RmNzUwODQ4MWZjZi8yLjQvamVzc2llL3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMy1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84M2M2MGNjMjZhMWVmYjBlYTU4MWIzMzQzYTk3ZGY3NTA4NDgxZmNmLzIuNC9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4zLXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODNjNjBjYzI2YTFlZmIwZWE1ODFiMzM0M2E5N2RmNzUwODQ4MWZjZi8yLjQvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjQuMgogICAgbWFqb3JWZXJzaW9uOiAnMi40JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE3LTEyLTExVDE4OjU0OjE3JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjItYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85ZWNkOGRjZDdjNTMwM2IxYzU3NzI0NDZkOGZlYTkzOGYzY2QyMzNjLzIuNC9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNicKICAgICAgICByZWxlYXNlOiAzLjYKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNgogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMi1hbHBpbmUzLjYKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzllY2Q4ZGNkN2M1MzAzYjFjNTc3MjQ0NmQ4ZmVhOTM4ZjNjZDIzM2MvMi40L2FscGluZTMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy43JwogICAgICAgIHJlbGVhc2U6IDMuNwogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My43CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4yLWFscGluZTMuNwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvZWUyZGY1NWMzYWJkM2QwZWNjZWE1NzMzZjcwNDFiNzMzZjhhNWE2Mi8yLjQvYWxwaW5lMy43L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4yLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWVjZDhkY2Q3YzUzMDNiMWM1NzcyNDQ2ZDhmZWE5MzhmM2NkMjMzYy8yLjQvamVzc2llL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMi1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWVjZDhkY2Q3YzUzMDNiMWM1NzcyNDQ2ZDhmZWE5MzhmM2NkMjMzYy8yLjQvamVzc2llL3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMi1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85ZWNkOGRjZDdjNTMwM2IxYzU3NzI0NDZkOGZlYTkzOGYzY2QyMzNjLzIuNC9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4yLXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWVjZDhkY2Q3YzUzMDNiMWM1NzcyNDQ2ZDhmZWE5MzhmM2NkMjMzYy8yLjQvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjQuMQogICAgbWFqb3JWZXJzaW9uOiAnMi40JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE3LTA5LTA1VDEwOjIwOjIyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjEtYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xMzVjODQ5NzliMTQwMWE2OTYzZTc1ZjNjOTUxNjFiZmU1YmUyMzM2LzIuNC9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNicKICAgICAgICByZWxlYXNlOiAzLjYKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNgogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMS1hbHBpbmUzLjYKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzEzNWM4NDk3OWIxNDAxYTY5NjNlNzVmM2M5NTE2MWJmZTViZTIzMzYvMi40L2FscGluZTMuNi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzEzNWM4NDk3OWIxNDAxYTY5NjNlNzVmM2M5NTE2MWJmZTViZTIzMzYvMi40L2plc3NpZS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjEtc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzEzNWM4NDk3OWIxNDAxYTY5NjNlNzVmM2M5NTE2MWJmZTViZTIzMzYvMi40L2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjEtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMTM1Yzg0OTc5YjE0MDFhNjk2M2U3NWYzYzk1MTYxYmZlNWJlMjMzNi8yLjQvc3RyZXRjaC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjQuMS1zbGltLXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzEzNWM4NDk3OWIxNDAxYTY5NjNlNzVmM2M5NTE2MWJmZTViZTIzMzYvMi40L3N0cmV0Y2gvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi40LjAKICAgIG1ham9yVmVyc2lvbjogJzIuNCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0wMy0xN1QxMTozOTo0MycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy40JwogICAgICAgIHJlbGVhc2U6IDMuNAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My40CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4wLWFscGluZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNWE5NjdmYWI1OTMxOWQ5NWZkODBlMzk1NmQxZWViNTRhNjZmOWQ3Ny8yLjQvYWxwaW5lL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuNC4wCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS81YTk2N2ZhYjU5MzE5ZDk1ZmQ4MGUzOTU2ZDFlZWI1NGE2NmY5ZDc3LzIuNC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi40LjAtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNWE5NjdmYWI1OTMxOWQ5NWZkODBlMzk1NmQxZWViNTRhNjZmOWQ3Ny8yLjQvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4zLjgKICAgIG1ham9yVmVyc2lvbjogJzIuMycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxOS0wNC0wM1QxMjozOTo0MCcKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy43JwogICAgICAgIHJlbGVhc2U6IDMuNwogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My43CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy44LWFscGluZTMuNwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjMvYWxwaW5lMy43L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjgnCiAgICAgICAgcmVsZWFzZTogMy44CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjgKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjgtYWxwaW5lMy44CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuMy9hbHBpbmUzLjgvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjgtamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zMWY2NjQ5MGZkYjgzN2RkY2M1ODk2ZTMyNzVmMjE4OGYyYjdiNmRkLzIuMy9qZXNzaWUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llLXNsaW0KICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjgtc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzMxZjY2NDkwZmRiODM3ZGRjYzU4OTZlMzI3NWYyMTg4ZjJiN2I2ZGQvMi4zL2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjgtc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjMvc3RyZXRjaC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBkZWJpYW46c3RyZXRjaC1zbGltCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy44LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMzFmNjY0OTBmZGI4MzdkZGNjNTg5NmUzMjc1ZjIxODhmMmI3YjZkZC8yLjMvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjMuNwogICAgbWFqb3JWZXJzaW9uOiAnMi4zJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTEwLTA1VDEwOjA4OjExJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjctYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS83OGVjZmNiMTA4OTMwYTk0ZWRlZDZkZmUxYmU1MDI0NjA1MmRjNjMyLzIuMy9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNycKICAgICAgICByZWxlYXNlOiAzLjcKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjMuNy1hbHBpbmUzLjcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzY3NmVhZGQ0M2Y4N2JkYjFkM2YwMzNlYTMxYWU2OWU0NWQxMWVlNWIvMi4zL2FscGluZTMuNy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy44JwogICAgICAgIHJlbGVhc2U6IDMuOAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My44CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy43LWFscGluZTMuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjc2ZWFkZDQzZjg3YmRiMWQzZjAzM2VhMzFhZTY5ZTQ1ZDExZWU1Yi8yLjMvYWxwaW5lMy44L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy43LWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjc2ZWFkZDQzZjg3YmRiMWQzZjAzM2VhMzFhZTY5ZTQ1ZDExZWU1Yi8yLjMvamVzc2llL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjMuNy1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjc2ZWFkZDQzZjg3YmRiMWQzZjAzM2VhMzFhZTY5ZTQ1ZDExZWU1Yi8yLjMvamVzc2llL3NsaW0vRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6c3RyZXRjaAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjMuNy1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS82NzZlYWRkNDNmODdiZGIxZDNmMDMzZWEzMWFlNjllNDVkMTFlZTViLzIuMy9zdHJldGNoL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDkgKHN0cmV0Y2gpCiAgICAgICAgcmVsZWFzZTogOS4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy43LXNsaW0tc3RyZXRjaAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjc2ZWFkZDQzZjg3YmRiMWQzZjAzM2VhMzFhZTY5ZTQ1ZDExZWU1Yi8yLjMvc3RyZXRjaC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjMuNgogICAgbWFqb3JWZXJzaW9uOiAnMi4zJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTAyLTE2VDE0OjM2OjA1JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjYtYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wMTliOTIxNGE1NzFkNGRjYjVhN2U5ZTQzZWYxOTJjYTc1ZmYyN2I4LzIuMy9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjYtamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wMTliOTIxNGE1NzFkNGRjYjVhN2U5ZTQzZWYxOTJjYTc1ZmYyN2I4LzIuMy9qZXNzaWUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy42LXNsaW0tamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wMTliOTIxNGE1NzFkNGRjYjVhN2U5ZTQzZWYxOTJjYTc1ZmYyN2I4LzIuMy9qZXNzaWUvc2xpbS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA5IChzdHJldGNoKQogICAgICAgIHJlbGVhc2U6IDkuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpzdHJldGNoCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy42LXN0cmV0Y2gKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzAxOWI5MjE0YTU3MWQ0ZGNiNWE3ZTllNDNlZjE5MmNhNzVmZjI3YjgvMi4zL3N0cmV0Y2gvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOSAoc3RyZXRjaCkKICAgICAgICByZWxlYXNlOiA5LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOnN0cmV0Y2gKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjYtc2xpbS1zdHJldGNoCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8wMTliOTIxNGE1NzFkNGRjYjVhN2U5ZTQzZWYxOTJjYTc1ZmYyN2I4LzIuMy9zdHJldGNoL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMy41CiAgICBtYWpvclZlcnNpb246ICcyLjMnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTctMTItMTFUMTg6NTQ6MTcnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNCcKICAgICAgICByZWxlYXNlOiAzLjQKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjMuNS1hbHBpbmUzLjQKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2UyMzg3OTg5ODg2MmYyNDI2ZTY3MTQzMjRjOTEyZDE0ZGIxMDY3YjUvMi4zL2FscGluZTMuNC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjMuNS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2UyMzg3OTg5ODg2MmYyNDI2ZTY3MTQzMjRjOTEyZDE0ZGIxMDY3YjUvMi4zL2plc3NpZS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjUtc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2UyMzg3OTg5ODg2MmYyNDI2ZTY3MTQzMjRjOTEyZDE0ZGIxMDY3YjUvMi4zL2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjMuNAogICAgbWFqb3JWZXJzaW9uOiAnMi4zJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE3LTA5LTA1VDEwOjIwOjIyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjQtYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kMmE4NWJmNWEzNzk5YzA1OTIxNDBmZjY2YjI2OWM4MjNiODEzOTk4LzIuMy9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjQtamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kMmE4NWJmNWEzNzk5YzA1OTIxNDBmZjY2YjI2OWM4MjNiODEzOTk4LzIuMy9qZXNzaWUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy40LXNsaW0tamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kMmE4NWJmNWEzNzk5YzA1OTIxNDBmZjY2YjI2OWM4MjNiODEzOTk4LzIuMy9qZXNzaWUvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4zLjMKICAgIG1ham9yVmVyc2lvbjogJzIuMycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0wMy0yMlQxMjo1Nzo0OCcKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy40JwogICAgICAgIHJlbGVhc2U6IDMuNAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My40CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4zLWFscGluZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvN2EzZTEyOTViYmM4NDBjMzUwZmMzN2Q0MDY2OTIzMDFiMjdmNGU4Ni8yLjMvYWxwaW5lL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4zCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS83YTNlMTI5NWJiYzg0MGMzNTBmYzM3ZDQwNjY5MjMwMWIyN2Y0ZTg2LzIuMy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjMtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvN2EzZTEyOTViYmM4NDBjMzUwZmMzN2Q0MDY2OTIzMDFiMjdmNGU4Ni8yLjMvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4zLjIKICAgIG1ham9yVmVyc2lvbjogJzIuMycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNi0xMS0xN1QxMDoyMjo1NycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy40JwogICAgICAgIHJlbGVhc2U6IDMuNAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My40CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4yLWFscGluZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWIzZmZkNTM4MGYwODU4NDdjNGQwZDg4NWJjMzY2ZjU4YTg1YTY0YS8yLjMvYWxwaW5lL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4yCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85YjNmZmQ1MzgwZjA4NTg0N2M0ZDBkODg1YmMzNjZmNThhODVhNjRhLzIuMy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjItc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOWIzZmZkNTM4MGYwODU4NDdjNGQwZDg4NWJjMzY2ZjU4YTg1YTY0YS8yLjMvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4zLjEKICAgIG1ham9yVmVyc2lvbjogJzIuMycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNi0xMC0zMVQxNToyMDo1MycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy40JwogICAgICAgIHJlbGVhc2U6IDMuNAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My40CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4xLWFscGluZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvZWMwNjhhNDE2ZGY5OGUzYzAxYjQ3ZjA3YTMxNGIxMmE2NDEyY2ZjNS8yLjMvYWxwaW5lL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4xCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9lYzA2OGE0MTZkZjk4ZTNjMDFiNDdmMDdhMzE0YjEyYTY0MTJjZmM1LzIuMy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjEtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvZWMwNjhhNDE2ZGY5OGUzYzAxYjQ3ZjA3YTMxNGIxMmE2NDEyY2ZjNS8yLjMvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4zLjAKICAgIG1ham9yVmVyc2lvbjogJzIuMycKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNi0wNC0wNVQxNToxNzoyMicKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy4zJwogICAgICAgIHJlbGVhc2U6IDMuMwogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My4zCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4wLWFscGluZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWYxOWU1ZDk2NmFhZGZhYWM3Y2U0YTlkNGRiOGY5ODJkYjJmZTY5MC8yLjMvYWxwaW5lL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMy4wCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xZjE5ZTVkOTY2YWFkZmFhYzdjZTRhOWQ0ZGI4Zjk4MmRiMmZlNjkwLzIuMy9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4zLjAtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWYxOWU1ZDk2NmFhZGZhYWM3Y2U0YTlkNGRiOGY5ODJkYjJmZTY5MC8yLjMvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4yLjEwCiAgICBtYWpvclZlcnNpb246ICcyLjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTgtMDQtMjdUMTM6MDg6MTEnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNCcKICAgICAgICByZWxlYXNlOiAzLjQKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuMTAtYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9lNDhjYjI0MzFlNWNkY2Q5OWNlOGQ4YzIzNmQ3YjczZTdkNDQ1MmYyLzIuMi9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjEwLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvZTQ4Y2IyNDMxZTVjZGNkOTljZThkOGMyMzZkN2I3M2U3ZDQ0NTJmMi8yLjIvamVzc2llL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuMTAtc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2U0OGNiMjQzMWU1Y2RjZDk5Y2U4ZDhjMjM2ZDdiNzNlN2Q0NDUyZjIvMi4yL2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjIuOQogICAgbWFqb3JWZXJzaW9uOiAnMi4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE4LTAyLTE2VDE0OjM2OjA1JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjktYWxwaW5lMy40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xMjdiOTlhNmYyMmU0M2MzYjllMGI5NTQ0ZGQ3N2Q4NWFhMjk5OTA2LzIuMi9hbHBpbmUzLjQvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjktamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xMjdiOTlhNmYyMmU0M2MzYjllMGI5NTQ0ZGQ3N2Q4NWFhMjk5OTA2LzIuMi9qZXNzaWUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi45LXNsaW0tamVzc2llCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xMjdiOTlhNmYyMmU0M2MzYjllMGI5NTQ0ZGQ3N2Q4NWFhMjk5OTA2LzIuMi9qZXNzaWUvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4yLjgKICAgIG1ham9yVmVyc2lvbjogJzIuMicKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNy0xMi0xMVQxODo1NDoxNycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogQWxwaW5lLCBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IEFscGluZQogICAgICAgIHJlbGVhc2VOYW1lOiAnMy40JwogICAgICAgIHJlbGVhc2U6IDMuNAogICAgICAgIHdlaWdodDogMQogICAgICAgIGltYWdlOiBhbHBpbmU6My40CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi44LWFscGluZTMuNAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWQ1N2MzNjNkNmIyNTA5OWNhYzU0NzJjMzA2MzJlMmY5MmRkYWI2MS8yLjIvYWxwaW5lMy40L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi44LWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWQ1N2MzNjNkNmIyNTA5OWNhYzU0NzJjMzA2MzJlMmY5MmRkYWI2MS8yLjIvamVzc2llL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuOC1zbGltLWplc3NpZQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWQ1N2MzNjNkNmIyNTA5OWNhYzU0NzJjMzA2MzJlMmY5MmRkYWI2MS8yLjIvamVzc2llL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMi43CiAgICBtYWpvclZlcnNpb246ICcyLjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTctMDktMDVUMTA6MjA6MjInCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNCcKICAgICAgICByZWxlYXNlOiAzLjQKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuNy1hbHBpbmUzLjQKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2FiMTI3NTA5NmEzOWQ4OTUyZDFlZGUxMmQwYTcwMWNlZjljYjc3ZDMvMi4yL2FscGluZTMuNC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuNy1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2FiMTI3NTA5NmEzOWQ4OTUyZDFlZGUxMmQwYTcwMWNlZjljYjc3ZDMvMi4yL2plc3NpZS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjctc2xpbS1qZXNzaWUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2FiMTI3NTA5NmEzOWQ4OTUyZDFlZGUxMmQwYTcwMWNlZjljYjc3ZDMvMi4yL2plc3NpZS9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjIuNgogICAgbWFqb3JWZXJzaW9uOiAnMi4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE3LTAzLTIyVDEyOjU3OjQ4JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjYtYWxwaW5lCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xZjU5ZDFkMzYzZGQ2NTk0NWExZmVhZTA4ZGEyNTE4ZWE5MzRjMzM0LzIuMi9hbHBpbmUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjYKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzFmNTlkMWQzNjNkZDY1OTQ1YTFmZWFlMDhkYTI1MThlYTkzNGMzMzQvMi4yL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuNi1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xZjU5ZDFkMzYzZGQ2NTk0NWExZmVhZTA4ZGEyNTE4ZWE5MzRjMzM0LzIuMi9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjIuNQogICAgbWFqb3JWZXJzaW9uOiAnMi4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE2LTEwLTMxVDE1OjIwOjUzJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjQnCiAgICAgICAgcmVsZWFzZTogMy40CiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjQKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjUtYWxwaW5lCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85ODk4YmFiMjBhMjhiMmRmMGIyNzlkY2NhNGI4ZGVlMzk5YTRiNGQwLzIuMi9hbHBpbmUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzk4OThiYWIyMGEyOGIyZGYwYjI3OWRjY2E0YjhkZWUzOTlhNGI0ZDAvMi4yL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuNS1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85ODk4YmFiMjBhMjhiMmRmMGIyNzlkY2NhNGI4ZGVlMzk5YTRiNGQwLzIuMi9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjIuNAogICAgbWFqb3JWZXJzaW9uOiAnMi4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE2LTA0LTA1VDE1OjE3OjIyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBBbHBpbmUsIERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogQWxwaW5lCiAgICAgICAgcmVsZWFzZU5hbWU6ICczLjMnCiAgICAgICAgcmVsZWFzZTogMy4zCiAgICAgICAgd2VpZ2h0OiAxCiAgICAgICAgaW1hZ2U6IGFscGluZTozLjMKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjQtYWxwaW5lCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xZjE5ZTVkOTY2YWFkZmFhYzdjZTRhOWQ0ZGI4Zjk4MmRiMmZlNjkwLzIuMi9hbHBpbmUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjQKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzFmMTllNWQ5NjZhYWRmYWFjN2NlNGE5ZDRkYjhmOTgyZGIyZmU2OTAvMi4yL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuNC1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xZjE5ZTVkOTY2YWFkZmFhYzdjZTRhOWQ0ZGI4Zjk4MmRiMmZlNjkwLzIuMi9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjIuMwogICAgbWFqb3JWZXJzaW9uOiAnMi4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE1LTExLTA0VDE0OjE0OjI3JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuMwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNzRlZThhZWM5YzE3ZWEyMTM0ZGI4YThlZjE5OWNmMDkyYzgyOTU3Ni8yLjIvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi4zLXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzc0ZWU4YWVjOWMxN2VhMjEzNGRiOGE4ZWYxOTljZjA5MmM4Mjk1NzYvMi4yL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMi4yCiAgICBtYWpvclZlcnNpb246ICcyLjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMDgtMTFUMTU6MTQ6NTcnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDcgKHdoZWV6eSkKICAgICAgICByZWxlYXNlOiA3LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6d2hlZXp5CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi4yLXdoZWV6eQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvM2M4NzAxZGJjMjYzMDAxNjUxZjhhMGFjNDRiZmIxYzYxMTNiNjlmYS8yLjIvd2hlZXp5L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi4yCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kODhjNzdlYTg0YjExNGZkZmNkYWEwMjJhNGU0M2JiMDY3ZDVhYzgxLzIuMi9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjItc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvZDg4Yzc3ZWE4NGIxMTRmZGZjZGFhMDIyYTRlNDNiYjA2N2Q1YWM4MS8yLjIvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4yLjEKICAgIG1ham9yVmVyc2lvbjogJzIuMicKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNS0wNC0wMVQxNToxNjoyMicKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogNyAod2hlZXp5KQogICAgICAgIHJlbGVhc2U6IDcuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczp3aGVlenkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjEtd2hlZXp5CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85MGM0ZTNiZTU4ZDU2NTAwN2M1MThkMzExZDRiZDA1MDg2YTE2MzhjLzIuMi93aGVlenkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4yLjEKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzY5NTgyYmY3ZGU1N2ZlMzU4ZDRjM2M3YzIzNDAwYWViYWY2MjZiOTIvMi4yL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuMS1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS82OTU4MmJmN2RlNTdmZTM1OGQ0YzNjN2MyMzQwMGFlYmFmNjI2YjkyLzIuMi9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjIuMAogICAgbWFqb3JWZXJzaW9uOiAnMi4yJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE1LTAyLTA1VDE0OjEwOjMyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA3ICh3aGVlenkpCiAgICAgICAgcmVsZWFzZTogNy4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOndoZWV6eQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuMC13aGVlenkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzhjODM5NGVlYmZmZjU1OGYzYWEwMDc4MGUwOWY3M2YwNGU4ZWNhNTYvMi4yL3doZWV6eS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjIuMAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWY1ZDdlZjRlMjY1OTU5NmUwMDc4NzFkYjkwYjgwYjJmMjM1Yjg0NS8yLjIvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi4wLXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzgxNjRmZTAzMDg2OGEzZmM2ODBkYzUzMjc3Yjk1NzJmZWVkZjExMmEvMi4yL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246ICcyLjInCiAgICBtYWpvclZlcnNpb246ICcyLjInCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMDctMjNUMDk6Mjk6NDAnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDcgKHdoZWV6eSkKICAgICAgICByZWxlYXNlOiA3LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6d2hlZXp5CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMi13aGVlenkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzNjODcwMWRiYzI2MzAwMTY1MWY4YTBhYzQ0YmZiMWM2MTEzYjY5ZmEvMi4yL3doZWV6eS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4xLjEwCiAgICBtYWpvclZlcnNpb246ICcyLjEnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTctMDctMDNUMTA6MzM6MjcnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNCcKICAgICAgICByZWxlYXNlOiAzLjQKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuMTAtYWxwaW5lCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jNTY5M2IyNWFhODY1NDg5ZmVlMTMwZTU3MmEzZjExYmNjZWJkMjFiLzIuMS9hbHBpbmUvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4xLjEwCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jNTY5M2IyNWFhODY1NDg5ZmVlMTMwZTU3MmEzZjExYmNjZWJkMjFiLzIuMS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4xLjEwLXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2M1NjkzYjI1YWE4NjU0ODlmZWUxMzBlNTcyYTNmMTFiY2NlYmQyMWIvMi4xL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMS45CiAgICBtYWpvclZlcnNpb246ICcyLjEnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTYtMDYtMjNUMTQ6MDE6MzgnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuNCcKICAgICAgICByZWxlYXNlOiAzLjQKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuNAogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuOS1hbHBpbmUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzJkNjQ0OWYwMzk3NmVkZWRhMTRiZTVjYWMxZTllMDcwYjc0ZTRkZTQvMi4xL2FscGluZS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuOQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMmQ2NDQ5ZjAzOTc2ZWRlZGExNGJlNWNhYzFlOWUwNzBiNzRlNGRlNC8yLjEvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMS45LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzJkNjQ0OWYwMzk3NmVkZWRhMTRiZTVjYWMxZTllMDcwYjc0ZTRkZTQvMi4xL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMS44CiAgICBtYWpvclZlcnNpb246ICcyLjEnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTYtMDMtMzBUMTY6NDQ6NTknCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IEFscGluZSwgRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBBbHBpbmUKICAgICAgICByZWxlYXNlTmFtZTogJzMuMycKICAgICAgICByZWxlYXNlOiAzLjMKICAgICAgICB3ZWlnaHQ6IDEKICAgICAgICBpbWFnZTogYWxwaW5lOjMuMwogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuOC1hbHBpbmUKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzgxODVmZDM5MGZiMjgzZTBlZWY5ZTE2ODdkNjUyZWY4YjVkOWM1MmUvMi4xL2FscGluZS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuOAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvYzg4ZjNhNjdkYTcyMGJmYTlmYjE3MTc5NjBkOTBmZDVkYjExYzc1Ny8yLjEvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMS44LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2M4OGYzYTY3ZGE3MjBiZmE5ZmIxNzE3OTYwZDkwZmQ1ZGIxMWM3NTcvMi4xL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMS43CiAgICBtYWpvclZlcnNpb246ICcyLjEnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMTEtMDRUMTQ6MTQ6MjcnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMS43CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS83NGVlOGFlYzljMTdlYTIxMzRkYjhhOGVmMTk5Y2YwOTJjODI5NTc2LzIuMS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4xLjctc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNzRlZThhZWM5YzE3ZWEyMTM0ZGI4YThlZjE5OWNmMDkyYzgyOTU3Ni8yLjEvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4xLjYKICAgIG1ham9yVmVyc2lvbjogJzIuMScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNS0wOC0xMVQxNToxNDo1NycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogNyAod2hlZXp5KQogICAgICAgIHJlbGVhc2U6IDcuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczp3aGVlenkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4xLjYtd2hlZXp5CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8zYzg3MDFkYmMyNjMwMDE2NTFmOGEwYWM0NGJmYjFjNjExM2I2OWZhLzIuMS93aGVlenkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4xLjYKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2Q4OGM3N2VhODRiMTE0ZmRmY2RhYTAyMmE0ZTQzYmIwNjdkNWFjODEvMi4xL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuNi1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kODhjNzdlYTg0YjExNGZkZmNkYWEwMjJhNGU0M2JiMDY3ZDVhYzgxLzIuMS9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjEuNQogICAgbWFqb3JWZXJzaW9uOiAnMi4xJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE1LTA0LTAxVDE1OjE2OjIyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA3ICh3aGVlenkpCiAgICAgICAgcmVsZWFzZTogNy4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOndoZWV6eQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuNS13aGVlenkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzhjODM5NGVlYmZmZjU1OGYzYWEwMDc4MGUwOWY3M2YwNGU4ZWNhNTYvMi4xL3doZWV6eS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuNQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjk1ODJiZjdkZTU3ZmUzNThkNGMzYzdjMjM0MDBhZWJhZjYyNmI5Mi8yLjEvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMS41LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzY5NTgyYmY3ZGU1N2ZlMzU4ZDRjM2M3YzIzNDAwYWViYWY2MjZiOTIvMi4xL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMS40CiAgICBtYWpvclZlcnNpb246ICcyLjEnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTQtMTAtMjhUMjA6MTk6NDMnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMS40CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS81OWVmZThmNzI5MWZmZGRmNWM4YjNmOGI2Zjc4NGFkODA5MDVmMzRjLzIuMS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4xLjMKICAgIG1ham9yVmVyc2lvbjogJzIuMScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNC0xMC0yMFQxMDozNzowNicKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4xLjMKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5L2Y5YTI2MjVlMzhkMTcyMzhiNjFiM2ViMDg0ZDg0ZGEyYTFhNGVhNjYvMi4xL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjEuMgogICAgbWFqb3JWZXJzaW9uOiAnMi4xJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE0LTA5LTEzVDE4OjIxOjUwJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjEuMgogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMjcwMTYwOTAwNGIzMzZmZWZmNGU4OGU3M2VmMzJlODcwMGQxYzY2OC8yLjEvRG9ja2VyZmlsZQoKICAtIHZlcnNpb246ICcyLjEnCiAgICBtYWpvclZlcnNpb246ICcyLjEnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMDctMjNUMDk6Mjk6NDAnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDcgKHdoZWV6eSkKICAgICAgICByZWxlYXNlOiA3LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6d2hlZXp5CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMS13aGVlenkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzNjODcwMWRiYzI2MzAwMTY1MWY4YTBhYzQ0YmZiMWM2MTEzYjY5ZmEvMi4xL3doZWV6eS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4wLjAtcDY0OAogICAgbWFqb3JWZXJzaW9uOiAnMi4wJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE2LTAyLTI2VDE1OjUyOjE1JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjAuMC1wNjQ4CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jMzg3YzZjM2EyNTA1MDYwNTE0ZTMxYzI0N2NiMzdkMjJjOTQ0ZTU1LzIuMC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtcDY0OC1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jMzg3YzZjM2EyNTA1MDYwNTE0ZTMxYzI0N2NiMzdkMjJjOTQ0ZTU1LzIuMC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjAuMC1wNjQ3CiAgICBtYWpvclZlcnNpb246ICcyLjAnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMTEtMDRUMTQ6MTQ6MjcnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC4wLXA2NDcKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzc0ZWU4YWVjOWMxN2VhMjEzNGRiOGE4ZWYxOTljZjA5MmM4Mjk1NzYvMi4wL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjAuMC1wNjQ3LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5Lzc0ZWU4YWVjOWMxN2VhMjEzNGRiOGE4ZWYxOTljZjA5MmM4Mjk1NzYvMi4wL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMC4wLXA2NDUKICAgIG1ham9yVmVyc2lvbjogJzIuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNS0wOC0xMVQxNToxNDo1NycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogNyAod2hlZXp5KQogICAgICAgIHJlbGVhc2U6IDcuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczp3aGVlenkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtcDY0NS13aGVlenkKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzNjODcwMWRiYzI2MzAwMTY1MWY4YTBhYzQ0YmZiMWM2MTEzYjY5ZmEvMi4wL3doZWV6eS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjAuMC1wNjQ1CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kODhjNzdlYTg0YjExNGZkZmNkYWEwMjJhNGU0M2JiMDY3ZDVhYzgxLzIuMC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtcDY0NS1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9kODhjNzdlYTg0YjExNGZkZmNkYWEwMjJhNGU0M2JiMDY3ZDVhYzgxLzIuMC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAyLjAuMC1wNjQzCiAgICBtYWpvclZlcnNpb246ICcyLjAnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMDQtMDFUMTU6MTY6MjInCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDcgKHdoZWV6eSkKICAgICAgICByZWxlYXNlOiA3LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6d2hlZXp5CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC4wLXA2NDMtd2hlZXp5CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS85MGM0ZTNiZTU4ZDU2NTAwN2M1MThkMzExZDRiZDA1MDg2YTE2MzhjLzIuMC93aGVlenkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtcDY0MwogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjk1ODJiZjdkZTU3ZmUzNThkNGMzYzdjMjM0MDBhZWJhZjYyNmI5Mi8yLjAvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC4wLXA2NDMtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNjk1ODJiZjdkZTU3ZmUzNThkNGMzYzdjMjM0MDBhZWJhZjYyNmI5Mi8yLjAvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMi4wLjAtcDU5OAogICAgbWFqb3JWZXJzaW9uOiAnMi4wJwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE1LTAyLTA1VDE0OjEwOjMyJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA3ICh3aGVlenkpCiAgICAgICAgcmVsZWFzZTogNy4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOndoZWV6eQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjAuMC1wNTk4LXdoZWV6eQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvOGM4Mzk0ZWViZmZmNTU4ZjNhYTAwNzgwZTA5ZjczZjA0ZThlY2E1Ni8yLjAvd2hlZXp5L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC4wLXA1OTgKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzFmNWQ3ZWY0ZTI2NTk1OTZlMDA3ODcxZGI5MGI4MGIyZjIzNWI4NDUvMi4wL0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToyLjAuMC1wNTk4LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzgxNjRmZTAzMDg2OGEzZmM2ODBkYzUzMjc3Yjk1NzJmZWVkZjExMmEvMi4wL3NsaW0vRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMC4wLXA1OTQKICAgIG1ham9yVmVyc2lvbjogJzIuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNC0xMC0yOFQyMDoxOTo0MycKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtcDU5NAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvNTllZmU4ZjcyOTFmZmRkZjVjOGIzZjhiNmY3ODRhZDgwOTA1ZjM0Yy8yLjAvRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMC4wLXA1NzYKICAgIG1ham9yVmVyc2lvbjogJzIuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNC0xMC0yMFQxMDozNzowNicKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtcDU3NgogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvZjlhMjYyNWUzOGQxNzIzOGI2MWIzZWIwODRkODRkYTJhMWE0ZWE2Ni8yLjAvRG9ja2VyZmlsZQoKICAtIHZlcnNpb246IDIuMC4wCiAgICBtYWpvclZlcnNpb246ICcyLjAnCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTYtMDItMjZUMTU6NTI6MTUnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDcgKHdoZWV6eSkKICAgICAgICByZWxlYXNlOiA3LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6d2hlZXp5CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC4wLXdoZWV6eQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvM2M4NzAxZGJjMjYzMDAxNjUxZjhhMGFjNDRiZmIxYzYxMTNiNjlmYS8yLjAvd2hlZXp5L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC4wCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jMzg3YzZjM2EyNTA1MDYwNTE0ZTMxYzI0N2NiMzdkMjJjOTQ0ZTU1LzIuMC9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLjAtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvYzM4N2M2YzNhMjUwNTA2MDUxNGUzMWMyNDdjYjM3ZDIyYzk0NGU1NS8yLjAvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogJzIuMCcKICAgIG1ham9yVmVyc2lvbjogJzIuMCcKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNi0wMi0yNlQxNTo1MjoxNScKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogNyAod2hlZXp5KQogICAgICAgIHJlbGVhc2U6IDcuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczp3aGVlenkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6Mi4wLXdoZWV6eQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvM2M4NzAxZGJjMjYzMDAxNjUxZjhhMGFjNDRiZmIxYzYxMTNiNjlmYS8yLjAvd2hlZXp5L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMAogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvYzM4N2M2YzNhMjUwNTA2MDUxNGUzMWMyNDdjYjM3ZDIyYzk0NGU1NS8yLjAvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjIuMC1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9jMzg3YzZjM2EyNTA1MDYwNTE0ZTMxYzI0N2NiMzdkMjJjOTQ0ZTU1LzIuMC9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAxLjkuMy1wNTUxCiAgICBtYWpvclZlcnNpb246ICcxLjknCiAgICBwcmVyZWxlYXNlOiBmYWxzZQogICAgZGF0ZTogJzIwMTUtMDMtMDNUMTA6Mzg6MTYnCiAgICBjdXJyZW50OiBmYWxzZQogICAgZGlzdHJpYnV0aW9uUmVsZWFzZXM6IERlYmlhbgogICAgZGlzdHJpYnV0aW9uczoKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDcgKHdoZWV6eSkKICAgICAgICByZWxlYXNlOiA3LjAKICAgICAgICB3ZWlnaHQ6IDUKICAgICAgICBpbWFnZTogYnVpbGRwYWNrLWRlcHM6d2hlZXp5CiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjEuOS4zLXA1NTEtd2hlZXp5CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84YzgzOTRlZWJmZmY1NThmM2FhMDA3ODBlMDlmNzNmMDRlOGVjYTU2LzEuOS93aGVlenkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6MS45LjMtcDU1MQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvMWY1ZDdlZjRlMjY1OTU5NmUwMDc4NzFkYjkwYjgwYjJmMjM1Yjg0NS8xLjkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogMgogICAgICAgIGltYWdlOiBkZWJpYW46amVzc2llCiAgICAgICAgaW1hZ2VSZXBvc2l0b3J5OiBydWJ5OjEuOS4zLXA1NTEtc2xpbQogICAgICAgIHVybFJlcG9zaXRvcnk6IGh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5CiAgICAgICAgdXJsRG9ja2VyZmlsZTogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkvODE2NGZlMDMwODY4YTNmYzY4MGRjNTMyNzdiOTU3MmZlZWRmMTEyYS8xLjkvc2xpbS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMS45LjMtcDU1MAogICAgbWFqb3JWZXJzaW9uOiAnMS45JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE0LTEwLTI4VDIwOjE5OjQzJwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA3ICh3aGVlenkpCiAgICAgICAgcmVsZWFzZTogNy4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOndoZWV6eQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToxLjkuMy1wNTUwCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS81OWVmZThmNzI5MWZmZGRmNWM4YjNmOGI2Zjc4NGFkODA5MDVmMzRjLzEuOS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMS45LjMtcDU0NwogICAgbWFqb3JWZXJzaW9uOiAnMS45JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE0LTEwLTIwVDEwOjM3OjA2JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA3ICh3aGVlenkpCiAgICAgICAgcmVsZWFzZTogNy4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOndoZWV6eQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToxLjkuMy1wNTQ3CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS9mOWEyNjI1ZTM4ZDE3MjM4YjYxYjNlYjA4NGQ4NGRhMmExYTRlYTY2LzEuOS9Eb2NrZXJmaWxlCgogIC0gdmVyc2lvbjogMS45LjMKICAgIG1ham9yVmVyc2lvbjogJzEuOScKICAgIHByZXJlbGVhc2U6IGZhbHNlCiAgICBkYXRlOiAnMjAxNS0wMy0wM1QxMDozODoxNicKICAgIGN1cnJlbnQ6IGZhbHNlCiAgICBkaXN0cmlidXRpb25SZWxlYXNlczogRGViaWFuCiAgICBkaXN0cmlidXRpb25zOgoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogNyAod2hlZXp5KQogICAgICAgIHJlbGVhc2U6IDcuMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczp3aGVlenkKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6MS45LjMtd2hlZXp5CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84YzgzOTRlZWJmZmY1NThmM2FhMDA3ODBlMDlmNzNmMDRlOGVjYTU2LzEuOS93aGVlenkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6MS45LjMKICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzFmNWQ3ZWY0ZTI2NTk1OTZlMDA3ODcxZGI5MGI4MGIyZjIzNWI4NDUvMS45L0RvY2tlcmZpbGUKCiAgICAgIC0gbmFtZTogRGViaWFuCiAgICAgICAgcmVsZWFzZU5hbWU6IDggKGplc3NpZSkKICAgICAgICByZWxlYXNlOiA4LjAKICAgICAgICB3ZWlnaHQ6IDIKICAgICAgICBpbWFnZTogZGViaWFuOmplc3NpZQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToxLjkuMy1zbGltCiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84MTY0ZmUwMzA4NjhhM2ZjNjgwZGM1MzI3N2I5NTcyZmVlZGYxMTJhLzEuOS9zbGltL0RvY2tlcmZpbGUKCiAgLSB2ZXJzaW9uOiAnMS45JwogICAgbWFqb3JWZXJzaW9uOiAnMS45JwogICAgcHJlcmVsZWFzZTogZmFsc2UKICAgIGRhdGU6ICcyMDE1LTAzLTAzVDEwOjM4OjE2JwogICAgY3VycmVudDogZmFsc2UKICAgIGRpc3RyaWJ1dGlvblJlbGVhc2VzOiBEZWJpYW4KICAgIGRpc3RyaWJ1dGlvbnM6CgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA3ICh3aGVlenkpCiAgICAgICAgcmVsZWFzZTogNy4wCiAgICAgICAgd2VpZ2h0OiA1CiAgICAgICAgaW1hZ2U6IGJ1aWxkcGFjay1kZXBzOndoZWV6eQogICAgICAgIGltYWdlUmVwb3NpdG9yeTogcnVieToxLjktd2hlZXp5CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS84YzgzOTRlZWJmZmY1NThmM2FhMDA3ODBlMDlmNzNmMDRlOGVjYTU2LzEuOS93aGVlenkvRG9ja2VyZmlsZQoKICAgICAgLSBuYW1lOiBEZWJpYW4KICAgICAgICByZWxlYXNlTmFtZTogOCAoamVzc2llKQogICAgICAgIHJlbGVhc2U6IDguMAogICAgICAgIHdlaWdodDogNQogICAgICAgIGltYWdlOiBidWlsZHBhY2stZGVwczpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6MS45CiAgICAgICAgdXJsUmVwb3NpdG9yeTogaHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci1saWJyYXJ5L3J1YnkKICAgICAgICB1cmxEb2NrZXJmaWxlOiBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZG9ja2VyLWxpYnJhcnkvcnVieS8xZjVkN2VmNGUyNjU5NTk2ZTAwNzg3MWRiOTBiODBiMmYyMzViODQ1LzEuOS9Eb2NrZXJmaWxlCgogICAgICAtIG5hbWU6IERlYmlhbgogICAgICAgIHJlbGVhc2VOYW1lOiA4IChqZXNzaWUpCiAgICAgICAgcmVsZWFzZTogOC4wCiAgICAgICAgd2VpZ2h0OiAyCiAgICAgICAgaW1hZ2U6IGRlYmlhbjpqZXNzaWUKICAgICAgICBpbWFnZVJlcG9zaXRvcnk6IHJ1Ynk6MS45LXNsaW0KICAgICAgICB1cmxSZXBvc2l0b3J5OiBodHRwczovL2dpdGh1Yi5jb20vZG9ja2VyLWxpYnJhcnkvcnVieQogICAgICAgIHVybERvY2tlcmZpbGU6IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb2NrZXItbGlicmFyeS9ydWJ5LzgxNjRmZTAzMDg2OGEzZmM2ODBkYzUzMjc3Yjk1NzJmZWVkZjExMmEvMS45L3NsaW0vRG9ja2VyZmlsZQo=\"")
	packr.PackJSONBytes("../config", "versions/rust.yml", "\"\"")
	packr.PackJSONBytes("../config", "versions/swift.yml", "\"\"")
}
